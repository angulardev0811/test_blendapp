{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { Modal, Autocomplete, InlineError, Stack, DropZone, TextField, Layout, Card, TextStyle, ResourceList, Thumbnail } from '@shopify/polaris';\nexport default function Background() {\n  //Get Image Data\n  var backgroundData = {};\n  axios.get('http://localhost:3000/background').then(function (res) {\n    backgroundData = res.data;\n    console.log(res.data);\n  });\n  var backgroundCategory = [];\n\n  for (var i in backgroundData) {\n    backgroundData.push({\n      value: backgroundData[i].category,\n      label: backgroundData[i].category\n    });\n  }\n\n  console.log(backgroundCategory); // Modal\n\n  var _useState = useState(false),\n      activeModal = _useState[0],\n      setActiveModal = _useState[1];\n\n  var handleChange = useCallback(function () {\n    return setActiveModal(!activeModal);\n  }, [activeModal]); //Modal Upload File\n\n  var _useState2 = useState(false),\n      openFileDialog = _useState2[0],\n      setOpenFileDialog = _useState2[1];\n\n  var _useState3 = useState(),\n      file = _useState3[0],\n      setFile = _useState3[1];\n\n  var _useState4 = useState(''),\n      imageError = _useState4[0],\n      setImageError = _useState4[1];\n\n  function handleImageError(txt) {\n    setImageError(txt);\n  }\n\n  var toggleOpenFileDialog = useCallback(function () {\n    return setOpenFileDialog(function (openFileDialog) {\n      return !openFileDialog;\n    });\n  }, []);\n  var validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\n  var handleDropZoneDrop = useCallback(function (_dropFiles, acceptedFiles, _rejectedFiles) {\n    setFile(function (file) {\n      return acceptedFiles[0];\n    });\n    setImageError('');\n  }, []);\n\n  var fileUpload = !file && __jsx(DropZone.FileUpload, null);\n\n  var uploadedFile = file && __jsx(Stack, null, __jsx(Thumbnail, {\n    size: \"large\",\n    alt: file.name,\n    source: validImageTypes.indexOf(file.type) > 0 ? window.URL.createObjectURL(file) : 'https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304'\n  })); //Modal Image Name\n\n\n  var _useState5 = useState(''),\n      imageName = _useState5[0],\n      setimageName = _useState5[1];\n\n  var _useState6 = useState(''),\n      imageNameError = _useState6[0],\n      setImageNameError = _useState6[1];\n\n  var handleImageName = useCallback(function (newValue) {\n    setimageName(newValue);\n    handleImageNameError('');\n  }, []);\n\n  function handleImageNameError(txt) {\n    setImageNameError(txt);\n  } //Modal Category\n\n\n  var categoryOptions = [{\n    value: 'rustic',\n    label: 'Rustic'\n  }, {\n    value: 'antique',\n    label: 'Antique'\n  }, {\n    value: 'vinyl',\n    label: 'Vinyl'\n  }, {\n    value: 'vintage',\n    label: 'Vintage'\n  }, {\n    value: 'refurbished',\n    label: 'Refurbished'\n  }];\n\n  var _useState7 = useState([]),\n      selectedOptions = _useState7[0],\n      setSelectedOptions = _useState7[1];\n\n  var _useState8 = useState(''),\n      categoryValue = _useState8[0],\n      setCategoryValue = _useState8[1];\n\n  var _useState9 = useState(categoryOptions),\n      options = _useState9[0],\n      setOptions = _useState9[1];\n\n  var _useState10 = useState(''),\n      imageCategoryError = _useState10[0],\n      setCategoryError = _useState10[1];\n\n  function handleCategoryError(txt) {\n    setCategoryError(txt);\n  }\n\n  var updateText = useCallback(function (value) {\n    setCategoryValue(value);\n\n    if (value === '') {\n      setOptions(categoryOptions);\n      return;\n    }\n\n    var filterRegex = new RegExp(value, 'i');\n    var resultOptions = categoryOptions.filter(function (option) {\n      return option.label.match(filterRegex);\n    });\n    setOptions(resultOptions);\n    setCategoryError('');\n  }, [categoryOptions]);\n  var updateSelection = useCallback(function (selected) {\n    updateText(selected[0]);\n    setSelectedOptions(selected);\n    setCategoryValue(selected[0]);\n  }, []);\n\n  var textField = __jsx(Autocomplete.TextField, {\n    onChange: updateText,\n    label: \"Image Category\",\n    value: categoryValue,\n    placeholder: \"Enter category\",\n    error: imageCategoryError\n  }); //Submit Image Data\n\n\n  var handleImages = function handleImages() {\n    if (file === undefined && imageName === '' && categoryValue === '') {\n      handleImageError('Need Image');\n      handleImageNameError('Need Image Name');\n      handleCategoryError('Need Category');\n      return;\n    } else if (file === undefined && imageName === '') {\n      handleImageError('Need Image');\n      handleImageNameError('Need Image Name');\n    } else if (file === undefined && categoryValue === '') {\n      handleImageError('Need Image');\n      handleCategoryError('Need Category');\n    } else if (imageName === '' && categoryValue === '') {\n      handleImageNameError('Need Image Name');\n      handleCategoryError('Need Category');\n    }\n\n    if (file === undefined) {\n      handleImageError('Need Image');\n      return;\n    }\n\n    if (imageName === '') {\n      handleImageNameError('Need Image Name');\n      return;\n    }\n\n    if (categoryValue === '') {\n      handleCategoryError('Need Category');\n      return;\n    }\n\n    var formdata = new FormData();\n    formdata.append('file', file);\n    formdata.append('filename', imageName);\n    formdata.append('category', categoryValue);\n    axios.post('http://localhost:3000/background', formdata, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(function (res) {\n      if (res.data == 'success') {\n        setActiveModal(false);\n      } else {\n        console.log(res.data);\n      }\n    });\n  };\n\n  return __jsx(\"div\", null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"Background Images\",\n    actions: [{\n      content: 'Add Background Image',\n      onAction: handleChange\n    }]\n  }, __jsx(Card.Section, null, __jsx(TextStyle, {\n    variation: \"subdued\"\n  }, \"455 units available\")), __jsx(Card.Section, {\n    title: \"Items\"\n  }, __jsx(ResourceList, {\n    resourceName: {\n      singular: 'image',\n      plural: 'images'\n    },\n    items: [{\n      id: 341,\n      name: 'Black & orange scarf',\n      media: __jsx(Thumbnail, {\n        source: \"https://burst.shopifycdn.com/photos/black-orange-stripes_373x@2x.jpg\",\n        alt: \"Black orange scarf\"\n      })\n    }, {\n      id: 256,\n      name: 'Tucan scarf',\n      media: __jsx(Thumbnail, {\n        source: \"https://burst.shopifycdn.com/photos/tucan-scarf_373x@2x.jpg\",\n        alt: \"Tucan scarf\"\n      })\n    }],\n    renderItem: function renderItem(item) {\n      var id = item.id,\n          name = item.name,\n          media = item.media;\n      return __jsx(ResourceList.Item, {\n        id: id,\n        media: media,\n        accessibilityLabel: \"View details for \".concat(name)\n      }, __jsx(\"h3\", null, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, name)));\n    }\n  }))))), __jsx(Modal, {\n    open: activeModal,\n    onClose: handleChange,\n    title: \"Add Image\",\n    primaryAction: {\n      content: 'Add',\n      onAction: handleImages\n    },\n    style: {\n      padding: '20px'\n    }\n  }, __jsx(Modal.Section, null, __jsx(Stack, {\n    alignment: \"center\"\n  }, __jsx(Stack.Item, null, __jsx(\"div\", {\n    style: {\n      width: 100,\n      height: 100\n    }\n  }, __jsx(DropZone, {\n    openFileDialog: openFileDialog,\n    onDrop: handleDropZoneDrop,\n    onFileDialogClose: toggleOpenFileDialog\n  }, fileUpload, uploadedFile), __jsx(InlineError, {\n    message: imageError\n  }))), __jsx(Stack.Item, null, __jsx(TextField, {\n    label: \"Image Name\",\n    value: imageName,\n    onChange: handleImageName,\n    placeholder: \"Enter image name\",\n    error: imageNameError\n  })), __jsx(Stack.Item, null, __jsx(Autocomplete, {\n    options: options,\n    selected: selectedOptions,\n    onSelect: updateSelection,\n    textField: textField\n  }))))));\n}","map":{"version":3,"sources":["E:/Lenny/blendapp/pages/index.js"],"names":["React","useCallback","useState","axios","Modal","Autocomplete","InlineError","Stack","DropZone","TextField","Layout","Card","TextStyle","ResourceList","Thumbnail","Background","backgroundData","get","then","res","data","console","log","backgroundCategory","i","push","value","category","label","activeModal","setActiveModal","handleChange","openFileDialog","setOpenFileDialog","file","setFile","imageError","setImageError","handleImageError","txt","toggleOpenFileDialog","validImageTypes","handleDropZoneDrop","_dropFiles","acceptedFiles","_rejectedFiles","fileUpload","uploadedFile","name","indexOf","type","window","URL","createObjectURL","imageName","setimageName","imageNameError","setImageNameError","handleImageName","newValue","handleImageNameError","categoryOptions","selectedOptions","setSelectedOptions","categoryValue","setCategoryValue","options","setOptions","imageCategoryError","setCategoryError","handleCategoryError","updateText","filterRegex","RegExp","resultOptions","filter","option","match","updateSelection","selected","textField","handleImages","undefined","formdata","FormData","append","post","headers","content","onAction","singular","plural","id","media","item","padding","width","height"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport {Modal, Autocomplete, InlineError, Stack, DropZone, TextField, Layout, Card, TextStyle, ResourceList, Thumbnail} from '@shopify/polaris';\r\n\r\nexport default function Background() {\r\n  //Get Image Data\r\n  let backgroundData = {};\r\n  axios.get('http://localhost:3000/background')\r\n  .then(res => {\r\n    backgroundData = res.data;\r\n      console.log(res.data);\r\n  });\r\n\r\n  let backgroundCategory = [];\r\n\r\n  for( let i in backgroundData ){\r\n    backgroundData.push({ value: backgroundData[i].category, label: backgroundData[i].category});\r\n  }\r\n  console.log(backgroundCategory)\r\n\r\n  // Modal\r\n  const [activeModal, setActiveModal] = useState(false);\r\n  const handleChange = useCallback(() => setActiveModal(!activeModal), [activeModal]);  \r\n  \r\n  //Modal Upload File\r\n  const [openFileDialog, setOpenFileDialog] = useState(false);\r\n  const [file, setFile] = useState();\r\n  const [imageError, setImageError] = useState('');\r\n  function handleImageError(txt) {\r\n    setImageError(txt);\r\n  }\r\n  const toggleOpenFileDialog = useCallback(\r\n    () => setOpenFileDialog((openFileDialog) => !openFileDialog),\r\n    [],\r\n  );  \r\n  const validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\r\n  const handleDropZoneDrop = useCallback(\r\n    (_dropFiles, acceptedFiles, _rejectedFiles) =>{\r\n      setFile((file) => acceptedFiles[0])\r\n      setImageError('')\r\n    },\r\n    [],\r\n  );\r\n  const fileUpload = !file && <DropZone.FileUpload />;\r\n  const uploadedFile = file && (\r\n    <Stack>\r\n      <Thumbnail\r\n        size=\"large\"\r\n        alt={file.name}\r\n        source={\r\n          validImageTypes.indexOf(file.type) > 0\r\n            ? window.URL.createObjectURL(file)\r\n            : 'https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304'\r\n        }\r\n      />\r\n    </Stack>\r\n  );\r\n\r\n  //Modal Image Name\r\n  const [imageName, setimageName] = useState('');\r\n  const [imageNameError, setImageNameError] = useState('');\r\n  const handleImageName = useCallback( \r\n    (newValue) => {\r\n      setimageName(newValue)\r\n      handleImageNameError('');\r\n    },\r\n    [],\r\n  );\r\n  function handleImageNameError(txt) {\r\n    setImageNameError(txt);\r\n  }\r\n\r\n  //Modal Category\r\n  let categoryOptions = [\r\n    {value: 'rustic', label: 'Rustic'},\r\n    {value: 'antique', label: 'Antique'},\r\n    {value: 'vinyl', label: 'Vinyl'},\r\n    {value: 'vintage', label: 'Vintage'},\r\n    {value: 'refurbished', label: 'Refurbished'},\r\n  ];\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [categoryValue, setCategoryValue] = useState('');\r\n  const [options, setOptions] = useState(categoryOptions);\r\n  const [imageCategoryError, setCategoryError] = useState('');\r\n\r\n  function handleCategoryError(txt) {\r\n    setCategoryError(txt);\r\n  }\r\n  const updateText = useCallback(\r\n    (value) => {\r\n      setCategoryValue(value);\r\n      if (value === '') {\r\n        setOptions(categoryOptions);\r\n        return;\r\n      }\r\n      const filterRegex = new RegExp(value, 'i');\r\n      const resultOptions = categoryOptions.filter((option) =>\r\n        option.label.match(filterRegex),\r\n      );\r\n      setOptions(resultOptions);\r\n      setCategoryError('');\r\n    },\r\n    [categoryOptions],\r\n  );\r\n\r\n  const updateSelection = useCallback((selected) => {\r\n    updateText(selected[0])\r\n    setSelectedOptions(selected)\r\n    setCategoryValue(selected[0]);\r\n  }, []);\r\n\r\n  const textField = (\r\n    <Autocomplete.TextField\r\n      onChange={updateText}\r\n      label=\"Image Category\"\r\n      value={categoryValue}\r\n      placeholder=\"Enter category\"\r\n      error={imageCategoryError}\r\n    />\r\n  );\r\n\r\n  //Submit Image Data\r\n  const handleImages = () => {\r\n    if(file === undefined && imageName === '' && categoryValue === '') {\r\n      handleImageError('Need Image');\r\n      handleImageNameError('Need Image Name');\r\n      handleCategoryError('Need Category');\r\n      return;\r\n    } else if(file === undefined && imageName === ''){\r\n      handleImageError('Need Image');\r\n      handleImageNameError('Need Image Name');\r\n    } else if(file === undefined && categoryValue === ''){\r\n      handleImageError('Need Image');\r\n      handleCategoryError('Need Category');\r\n    } else if(imageName === '' && categoryValue === ''){\r\n      handleImageNameError('Need Image Name');\r\n      handleCategoryError('Need Category');\r\n    }\r\n    if(file === undefined) {\r\n      handleImageError('Need Image');\r\n      return;\r\n    }\r\n    if(imageName === '') {\r\n      handleImageNameError('Need Image Name');\r\n      return;\r\n    }\r\n    if(categoryValue === '') {\r\n      handleCategoryError('Need Category');\r\n      return;\r\n    }\r\n    let formdata = new FormData();\r\n    formdata.append('file', file);\r\n    formdata.append('filename', imageName);\r\n    formdata.append('category', categoryValue);\r\n    axios.post('http://localhost:3000/background', formdata, {\r\n        headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    })\r\n    .then(res => {\r\n      if(res.data == 'success') {\r\n        setActiveModal(false);\r\n      } else {\r\n        console.log(res.data);\r\n      }\r\n    });\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <div>\r\n      <Layout>\r\n            <Layout.Section>\r\n                <Card \r\n                    title=\"Background Images\" \r\n                    actions={[{\r\n                        content: 'Add Background Image',\r\n                        onAction: handleChange\r\n                    }]}\r\n                >\r\n                <Card.Section>\r\n                    <TextStyle variation=\"subdued\">455 units available</TextStyle>\r\n                </Card.Section>\r\n                <Card.Section title=\"Items\">\r\n                    <ResourceList\r\n                    resourceName={{singular: 'image', plural: 'images'}}\r\n                    items={[\r\n                        {\r\n                            id: 341,\r\n                            name: 'Black & orange scarf',\r\n                            media: (\r\n                                <Thumbnail\r\n                                source=\"https://burst.shopifycdn.com/photos/black-orange-stripes_373x@2x.jpg\"\r\n                                alt=\"Black orange scarf\"\r\n                                />\r\n                            ),\r\n                        },\r\n                        {\r\n                            id: 256,\r\n                            name: 'Tucan scarf',\r\n                            media: (\r\n                                <Thumbnail\r\n                                source=\"https://burst.shopifycdn.com/photos/tucan-scarf_373x@2x.jpg\"\r\n                                alt=\"Tucan scarf\"\r\n                                />\r\n                            ),\r\n                        },\r\n                    ]}\r\n                    renderItem={(item) => {\r\n                        const {id, name, media} = item;\r\n\r\n                        return (\r\n                        <ResourceList.Item\r\n                            id={id}\r\n                            media={media}\r\n                            accessibilityLabel={`View details for ${name}`}\r\n                        >\r\n                            <h3>\r\n                            <TextStyle variation=\"strong\">{name}</TextStyle>\r\n                            </h3>\r\n                        </ResourceList.Item>\r\n                        );\r\n                    }}\r\n                    />\r\n                </Card.Section>\r\n                </Card>\r\n            </Layout.Section>\r\n        </Layout>\r\n        <Modal\r\n            open={activeModal}\r\n            onClose={handleChange}\r\n            title=\"Add Image\"\r\n            primaryAction={{\r\n                content: 'Add',\r\n                onAction: handleImages,\r\n            }}\r\n            style={{padding: '20px'}}\r\n        >\r\n            <Modal.Section>\r\n                <Stack alignment=\"center\">\r\n                    <Stack.Item>\r\n                        <div style={{width: 100, height: 100 }}>\r\n                            <DropZone\r\n                            openFileDialog={openFileDialog}\r\n                            onDrop={handleDropZoneDrop}\r\n                            onFileDialogClose={toggleOpenFileDialog}\r\n                            >\r\n                            {fileUpload}\r\n                            {uploadedFile}\r\n                            </DropZone>\r\n                            <InlineError message={imageError} />\r\n                        </div>\r\n                    </Stack.Item>\r\n                    <Stack.Item>\r\n                      <TextField\r\n                        label=\"Image Name\"\r\n                        value={imageName}\r\n                        onChange={handleImageName}\r\n                        placeholder=\"Enter image name\"\r\n                        error={imageNameError}\r\n                      />\r\n                    </Stack.Item>\r\n                    <Stack.Item>\r\n                      <Autocomplete\r\n                        options={options}\r\n                        selected={selectedOptions}\r\n                        onSelect={updateSelection}\r\n                        textField={textField}\r\n                      />\r\n                    </Stack.Item>\r\n                </Stack>\r\n            </Modal.Section>\r\n        </Modal>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}