{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { Modal, Autocomplete, InlineError, Stack, DropZone, TextField, Layout, Card, TextStyle, ResourceList, Thumbnail, Icon } from \"@shopify/polaris\";\nimport { DeleteMajorMonotone, EditMajorMonotone } from '@shopify/polaris-icons';\nexport default function Background() {\n  var _useState = useState(0),\n      flag = _useState[0],\n      setFlag = _useState[1];\n\n  var _useState2 = useState([]),\n      backgroundData = _useState2[0],\n      setBackgroundData = _useState2[1];\n\n  var _useState3 = useState([]),\n      backgroundCategory = _useState3[0],\n      setBackgroundCategory = _useState3[1];\n\n  var _useState4 = useState([]),\n      itemCount = _useState4[0],\n      setItemCount = _useState4[1];\n\n  var _useState5 = useState([]),\n      imageItems = _useState5[0],\n      setimageItems = _useState5[1];\n\n  var _useState6 = useState(false),\n      loading = _useState6[0],\n      setLoding = _useState6[1];\n\n  var _useState7 = useState(false),\n      activeModal = _useState7[0],\n      setActiveModal = _useState7[1];\n\n  var _useState8 = useState(false),\n      openFileDialog = _useState8[0],\n      setOpenFileDialog = _useState8[1];\n\n  var _useState9 = useState(),\n      file = _useState9[0],\n      setFile = _useState9[1];\n\n  var _useState10 = useState(\"\"),\n      imageError = _useState10[0],\n      setImageError = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      imageName = _useState11[0],\n      setimageName = _useState11[1];\n\n  var _useState12 = useState(\"\"),\n      imageNameError = _useState12[0],\n      setImageNameError = _useState12[1];\n\n  var _useState13 = useState([]),\n      selectedOptions = _useState13[0],\n      setSelectedOptions = _useState13[1];\n\n  var _useState14 = useState(\"\"),\n      categoryValue = _useState14[0],\n      setCategoryValue = _useState14[1];\n\n  var _useState15 = useState(backgroundCategory),\n      options = _useState15[0],\n      setOptions = _useState15[1];\n\n  var _useState16 = useState(\"\"),\n      imageCategoryError = _useState16[0],\n      setCategoryError = _useState16[1];\n\n  var _useState17 = useState([]),\n      selectedItems = _useState17[0],\n      setSelectedItems = _useState17[1];\n\n  var handleChange = useCallback(function () {\n    return setActiveModal(!activeModal);\n  }, [activeModal]);\n  var toggleOpenFileDialog = useCallback(function () {\n    return setOpenFileDialog(function (openFileDialog) {\n      return !openFileDialog;\n    });\n  }, []);\n  var validImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\n  var handleDropZoneDrop = useCallback(function (_dropFiles, acceptedFiles, _rejectedFiles) {\n    setFile(function (file) {\n      return acceptedFiles[0];\n    });\n    setImageError(\"\");\n  }, []);\n\n  var fileUpload = !file && __jsx(DropZone.FileUpload, null);\n\n  var uploadedFile = file && __jsx(Stack, null, __jsx(Thumbnail, {\n    size: \"large\",\n    alt: file.name,\n    source: validImageTypes.indexOf(file.type) > 0 ? window.URL.createObjectURL(file) : \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\n  }));\n\n  var handleImageName = useCallback(function (newValue) {\n    setimageName(newValue);\n    setImageNameError(\"\");\n  }, []);\n  var updateText = useCallback(function (value) {\n    setCategoryValue(value);\n\n    if (value === \"\") {\n      setOptions(backgroundCategory);\n      return;\n    }\n\n    try {\n      var filterRegex = new RegExp(value, \"i\");\n      var resultOptions = backgroundCategory.filter(function (option) {\n        return option.label.match(filterRegex);\n      });\n      setOptions(resultOptions);\n    } catch (err) {\n      console.log(err.message);\n    }\n\n    setCategoryError(\"\");\n  }, [backgroundCategory]);\n  var updateSelection = useCallback(function (selected) {\n    updateText(selected[0]);\n    setSelectedOptions(selected);\n    setCategoryValue(selected[0]);\n  }, []);\n\n  var textField = __jsx(Autocomplete.TextField, {\n    onChange: updateText,\n    label: \"Image Category\",\n    value: categoryValue,\n    placeholder: \"Enter category\",\n    error: imageCategoryError\n  });\n\n  var modalInit = __jsx(Modal.Section, null, __jsx(Stack, {\n    alignment: \"center\"\n  }, __jsx(Stack.Item, null, __jsx(\"div\", {\n    style: {\n      width: 100,\n      height: 100\n    }\n  }, __jsx(DropZone, {\n    openFileDialog: openFileDialog,\n    onDrop: handleDropZoneDrop,\n    onFileDialogClose: toggleOpenFileDialog\n  }, fileUpload, uploadedFile), __jsx(InlineError, {\n    message: imageError\n  }))), __jsx(Stack.Item, null, __jsx(TextField, {\n    label: \"Image Name\",\n    value: imageName,\n    onChange: handleImageName,\n    placeholder: \"Enter image name\",\n    error: imageNameError\n  })), __jsx(Stack.Item, null, __jsx(Autocomplete, {\n    options: options,\n    selected: selectedOptions,\n    onSelect: updateSelection,\n    textField: textField\n  }))));\n\n  var _useState18 = useState(modalInit),\n      modalData = _useState18[0],\n      setModalData = _useState18[1];\n\n  var editImage = function editImage(id, name, media, category) {\n    console.log(id, name, media, category);\n  };\n\n  var deleteImage = function deleteImage(id) {\n    console.log(id);\n  };\n\n  var handleImages = function handleImages() {\n    if (file === undefined && imageName === \"\" && categoryValue === \"\") {\n      setImageError(\"Need Image\");\n      setImageNameError(\"Need Image Name\");\n      setCategoryError(\"Need Category\");\n      return;\n    } else if (file === undefined && imageName === \"\") {\n      setImageError(\"Need Image\");\n      setImageNameError(\"Need Image Name\");\n    } else if (file === undefined && categoryValue === \"\") {\n      setImageError(\"Need Image\");\n      setCategoryError(\"Need Category\");\n    } else if (imageName === \"\" && categoryValue === \"\") {\n      setImageNameError(\"Need Image Name\");\n      setCategoryError(\"Need Category\");\n    } else if (file === undefined) {\n      setImageError(\"Need Image\");\n      return;\n    } else if (imageName === \"\") {\n      setImageNameError(\"Need Image Name\");\n      return;\n    } else if (categoryValue === \"\") {\n      setCategoryError(\"Need Category\");\n      return;\n    }\n\n    setLoding(true);\n\n    for (var i in backgroundData) {\n      var item = backgroundData[i]; // console.log(item)\n\n      if (item.filename === imageName) {\n        setImageNameError(\"Image Name Exist\");\n        return;\n      }\n    }\n\n    var formdata = new FormData();\n    formdata.append(\"file\", file);\n    formdata.append(\"filename\", imageName);\n    formdata.append(\"category\", categoryValue);\n    axios.post(\"http://localhost:3000/background\", formdata, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(function (res) {\n      if (res.data === \"success\") {\n        setFlag(0);\n        setActiveModal(false);\n        setFile();\n        setimageName(\"\");\n        setCategoryValue(\"\");\n        setLoding(false);\n        console.log(res.data);\n      } else {\n        console.log(res.data);\n      }\n    });\n  };\n\n  useEffect(function () {\n    function fetchData() {\n      var response, allCategorys, i, filterCategory, categoryArr, _i, item, imageItemsData, _i2, _item;\n\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              if (flag) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3000/background\"));\n\n            case 4:\n              response = _context.sent;\n              setBackgroundData(response.data);\n              allCategorys = [];\n\n              for (i in backgroundData) {\n                allCategorys.push(backgroundData[i].category);\n              }\n\n              filterCategory = allCategorys.filter(function (elem, index, self) {\n                return index === self.indexOf(elem);\n              });\n              categoryArr = [];\n\n              for (_i in filterCategory) {\n                item = filterCategory[_i];\n                categoryArr.push({\n                  value: item,\n                  label: item\n                });\n              }\n\n              setBackgroundCategory(categoryArr);\n              imageItemsData = [];\n\n              for (_i2 in backgroundData) {\n                _item = backgroundData[_i2];\n                imageItemsData.push({\n                  id: _item._id,\n                  name: _item.filename,\n                  category: _item.category,\n                  media: __jsx(Thumbnail, {\n                    source: _item.filepath,\n                    alt: _item.filename\n                  })\n                });\n              }\n\n              setimageItems(imageItemsData);\n              setItemCount(imageItemsData.length);\n              setFlag(1);\n\n            case 17:\n              _context.next = 22;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"Axios request failed: \".concat(_context.t0));\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 19]], Promise);\n    }\n\n    fetchData();\n  });\n  return __jsx(\"div\", null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"Background Images\",\n    actions: [{\n      content: \"Add Background Image\",\n      onAction: handleChange\n    }]\n  }, __jsx(Card.Section, null, __jsx(TextStyle, {\n    variation: \"subdued\"\n  }, itemCount, \" Background Images\")), __jsx(Card.Section, null, __jsx(ResourceList, {\n    resourceName: {\n      singular: \"image\",\n      plural: \"images\"\n    },\n    items: imageItems,\n    selectedItems: selectedItems,\n    onSelectionChange: setSelectedItems,\n    renderItem: function renderItem(item) {\n      var id = item.id,\n          name = item.name,\n          media = item.media,\n          category = item.category;\n      var shortcutActions = [{\n        content: __jsx(Icon, {\n          source: EditMajorMonotone,\n          color: \"red\"\n        }),\n        onAction: function onAction() {\n          editImage(id, name, media, category);\n        }\n      }, {\n        content: __jsx(Icon, {\n          source: DeleteMajorMonotone,\n          color: \"red\"\n        }),\n        onAction: function onAction() {\n          deleteImage(id);\n        }\n      }];\n      return __jsx(ResourceList.Item, {\n        id: id,\n        media: media,\n        accessibilityLabel: \"View details for \".concat(name),\n        shortcutActions: shortcutActions,\n        persistActions: true\n      }, __jsx(\"h3\", null, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, __jsx(\"span\", {\n        style: {\n          fontSize: 12\n        }\n      }, \"Name: \"), name)), __jsx(\"h3\", null, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, __jsx(\"span\", {\n        style: {\n          fontSize: 12\n        }\n      }, \"Category: \"), category)));\n    }\n  }))))), __jsx(Modal, {\n    open: activeModal,\n    onClose: handleChange,\n    title: \"Add Image\",\n    primaryAction: {\n      content: \"Add\",\n      onAction: handleImages\n    },\n    style: {\n      padding: \"20px\"\n    },\n    loading: loading\n  }, __jsx(\"div\", null, modalData)));\n}","map":{"version":3,"sources":["E:/Lenny/blendapp/pages/index.js"],"names":["React","useCallback","useState","useEffect","useRef","axios","Modal","Autocomplete","InlineError","Stack","DropZone","TextField","Layout","Card","TextStyle","ResourceList","Thumbnail","Icon","DeleteMajorMonotone","EditMajorMonotone","Background","flag","setFlag","backgroundData","setBackgroundData","backgroundCategory","setBackgroundCategory","itemCount","setItemCount","imageItems","setimageItems","loading","setLoding","activeModal","setActiveModal","openFileDialog","setOpenFileDialog","file","setFile","imageError","setImageError","imageName","setimageName","imageNameError","setImageNameError","selectedOptions","setSelectedOptions","categoryValue","setCategoryValue","options","setOptions","imageCategoryError","setCategoryError","selectedItems","setSelectedItems","handleChange","toggleOpenFileDialog","validImageTypes","handleDropZoneDrop","_dropFiles","acceptedFiles","_rejectedFiles","fileUpload","uploadedFile","name","indexOf","type","window","URL","createObjectURL","handleImageName","newValue","updateText","value","filterRegex","RegExp","resultOptions","filter","option","label","match","err","console","log","message","updateSelection","selected","textField","modalInit","width","height","modalData","setModalData","editImage","id","media","category","deleteImage","handleImages","undefined","i","item","filename","formdata","FormData","append","post","headers","then","res","data","fetchData","get","response","allCategorys","push","filterCategory","elem","index","self","categoryArr","imageItemsData","_id","filepath","length","content","onAction","singular","plural","shortcutActions","fontSize","padding"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Modal,\r\n  Autocomplete,\r\n  InlineError,\r\n  Stack,\r\n  DropZone,\r\n  TextField,\r\n  Layout,\r\n  Card,\r\n  TextStyle,\r\n  ResourceList,\r\n  Thumbnail,\r\n  Icon\r\n} from \"@shopify/polaris\";\r\nimport {\r\n  DeleteMajorMonotone,\r\n  EditMajorMonotone\r\n} from '@shopify/polaris-icons';\r\n\r\nexport default function Background() {\r\n  const [flag, setFlag] = useState(0);\r\n  const [backgroundData, setBackgroundData] = useState([]);\r\n  const [backgroundCategory, setBackgroundCategory] = useState([]);\r\n  const [itemCount, setItemCount] = useState([]);\r\n  const [imageItems, setimageItems] = useState([]);\r\n  const [loading, setLoding] = useState(false);\r\n  const [activeModal, setActiveModal] = useState(false);\r\n  const [openFileDialog, setOpenFileDialog] = useState(false);\r\n  const [file, setFile] = useState();\r\n  const [imageError, setImageError] = useState(\"\");\r\n  const [imageName, setimageName] = useState(\"\");\r\n  const [imageNameError, setImageNameError] = useState(\"\");\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [categoryValue, setCategoryValue] = useState(\"\");\r\n  const [options, setOptions] = useState(backgroundCategory);\r\n  const [imageCategoryError, setCategoryError] = useState(\"\");\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n\r\n  const handleChange = useCallback(() => setActiveModal(!activeModal), [activeModal]);\r\n  const toggleOpenFileDialog = useCallback(() => setOpenFileDialog(openFileDialog => !openFileDialog),[]);\r\n  const validImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\r\n  const handleDropZoneDrop = useCallback(\r\n    (_dropFiles, acceptedFiles, _rejectedFiles) => {\r\n      setFile(file => acceptedFiles[0]);\r\n      setImageError(\"\");\r\n    },\r\n    []\r\n  );\r\n  const fileUpload = !file && <DropZone.FileUpload />;\r\n  const uploadedFile = file && (\r\n    <Stack>\r\n      <Thumbnail\r\n        size=\"large\"\r\n        alt={file.name}\r\n        source={\r\n          validImageTypes.indexOf(file.type) > 0\r\n            ? window.URL.createObjectURL(file)\r\n            : \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\r\n        }\r\n      />\r\n    </Stack>\r\n  );  \r\n  const handleImageName = useCallback(newValue => {\r\n    setimageName(newValue);\r\n    setImageNameError(\"\");\r\n  }, []);\r\n\r\n  const updateText = useCallback(\r\n    value => {\r\n      setCategoryValue(value);\r\n      if (value === \"\") {\r\n        setOptions(backgroundCategory);\r\n        return;\r\n      }\r\n      try {\r\n        const filterRegex = new RegExp(value, \"i\");\r\n        const resultOptions = backgroundCategory.filter(option =>\r\n          option.label.match(filterRegex)\r\n        );\r\n        setOptions(resultOptions);\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n      setCategoryError(\"\");\r\n    },\r\n    [backgroundCategory]\r\n  );\r\n\r\n  const updateSelection = useCallback(selected => {\r\n    updateText(selected[0]);\r\n    setSelectedOptions(selected);\r\n    setCategoryValue(selected[0]);\r\n  }, []);\r\n\r\n  const textField = (\r\n    <Autocomplete.TextField\r\n      onChange={updateText}\r\n      label=\"Image Category\"\r\n      value={categoryValue}\r\n      placeholder=\"Enter category\"\r\n      error={imageCategoryError}\r\n    />\r\n  );\r\n\r\n  const modalInit = (\r\n    <Modal.Section>\r\n      <Stack alignment=\"center\">\r\n        <Stack.Item>\r\n          <div style={{ width: 100, height: 100 }}>\r\n            <DropZone\r\n              openFileDialog={openFileDialog}\r\n              onDrop={handleDropZoneDrop}\r\n              onFileDialogClose={toggleOpenFileDialog}\r\n            >\r\n              {fileUpload}\r\n              {uploadedFile}\r\n            </DropZone>\r\n            <InlineError message={imageError} />\r\n          </div>\r\n        </Stack.Item>\r\n        <Stack.Item>\r\n          <TextField\r\n            label=\"Image Name\"\r\n            value={imageName}\r\n            onChange={handleImageName}\r\n            placeholder=\"Enter image name\"\r\n            error={imageNameError}\r\n          />\r\n        </Stack.Item>\r\n        <Stack.Item>\r\n          <Autocomplete\r\n            options={options}\r\n            selected={selectedOptions}\r\n            onSelect={updateSelection}\r\n            textField={textField}\r\n          />\r\n        </Stack.Item>\r\n      </Stack>\r\n    </Modal.Section>\r\n  );\r\n\r\n  const [modalData, setModalData] = useState(modalInit);\r\n\r\n  const editImage = (id, name, media, category) => {\r\n    console.log(id, name, media, category)\r\n  };\r\n\r\n  const deleteImage = (id) => {\r\n    console.log(id)\r\n  }\r\n\r\n  const handleImages = () => {\r\n    if (file === undefined && imageName === \"\" && categoryValue === \"\") {\r\n      setImageError(\"Need Image\");\r\n      setImageNameError(\"Need Image Name\");\r\n      setCategoryError(\"Need Category\");\r\n      return;\r\n    } else if (file === undefined && imageName === \"\") {\r\n      setImageError(\"Need Image\");\r\n      setImageNameError(\"Need Image Name\");\r\n    } else if (file === undefined && categoryValue === \"\") {\r\n      setImageError(\"Need Image\");\r\n      setCategoryError(\"Need Category\");\r\n    } else if (imageName === \"\" && categoryValue === \"\") {\r\n      setImageNameError(\"Need Image Name\");\r\n      setCategoryError(\"Need Category\");\r\n    } else if (file === undefined) {\r\n      setImageError(\"Need Image\");\r\n      return;\r\n    } else if (imageName === \"\") {\r\n      setImageNameError(\"Need Image Name\");\r\n      return;\r\n    } else if (categoryValue === \"\") {\r\n      setCategoryError(\"Need Category\");\r\n      return;\r\n    }\r\n    setLoding(true);\r\n    for (let i in backgroundData) {\r\n      let item = backgroundData[i];\r\n      // console.log(item)\r\n      if (item.filename === imageName) {\r\n        setImageNameError(\"Image Name Exist\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    let formdata = new FormData();\r\n    formdata.append(\"file\", file);\r\n    formdata.append(\"filename\", imageName);\r\n    formdata.append(\"category\", categoryValue);\r\n    axios\r\n      .post(\"http://localhost:3000/background\", formdata, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.data === \"success\") {\r\n          setFlag(0);\r\n          setActiveModal(false);\r\n          setFile();\r\n          setimageName(\"\");\r\n          setCategoryValue(\"\");\r\n          setLoding(false);\r\n          console.log(res.data);\r\n        } else {\r\n          console.log(res.data);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        if (!flag) {\r\n          let response = await axios.get(\"http://localhost:3000/background\");\r\n          setBackgroundData(response.data);\r\n          let allCategorys = [];\r\n          for (let i in backgroundData) {\r\n            allCategorys.push(backgroundData[i].category);\r\n          }\r\n          let filterCategory = allCategorys.filter(function(elem, index, self) {\r\n            return index === self.indexOf(elem);\r\n          });\r\n          let categoryArr = [];\r\n          for (let i in filterCategory) {\r\n            let item = filterCategory[i];\r\n            categoryArr.push({\r\n              value: item,\r\n              label: item\r\n            });\r\n          }\r\n          setBackgroundCategory(categoryArr);\r\n          let imageItemsData = [];\r\n          for (let i in backgroundData) {\r\n            let item = backgroundData[i];\r\n            imageItemsData.push({\r\n              id: item._id,\r\n              name: item.filename,\r\n              category: item.category,\r\n              media: <Thumbnail source={item.filepath} alt={item.filename} />\r\n            });\r\n          }\r\n          setimageItems(imageItemsData);\r\n          setItemCount(imageItemsData.length)\r\n          setFlag(1);\r\n        }\r\n      } catch (e) {\r\n        console.log(`Axios request failed: ${e}`);\r\n      }\r\n    }\r\n    fetchData();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Layout>\r\n        <Layout.Section>\r\n          <Card\r\n            title=\"Background Images\"\r\n            actions={[\r\n              {\r\n                content: \"Add Background Image\",\r\n                onAction: handleChange\r\n              }\r\n            ]}\r\n          >\r\n            <Card.Section>\r\n              <TextStyle variation=\"subdued\">{itemCount} Background Images</TextStyle>\r\n            </Card.Section>\r\n            <Card.Section>\r\n              <ResourceList\r\n                resourceName={{ singular: \"image\", plural: \"images\" }}\r\n                items={imageItems}\r\n                selectedItems={selectedItems}\r\n                onSelectionChange={setSelectedItems}\r\n                renderItem={item => {\r\n                  const { id, name, media, category } = item;\r\n                  const shortcutActions =[\r\n                    {\r\n                      content: <Icon source={EditMajorMonotone} color=\"red\" />,\r\n                      onAction: () => {editImage(id, name, media, category)},\r\n                    },\r\n                    {\r\n                      content: <Icon source={DeleteMajorMonotone} color=\"red\" />,\r\n                      onAction: () => {deleteImage(id)},\r\n                    },\r\n                  ];\r\n\r\n                  return (\r\n                    <ResourceList.Item\r\n                      id={id}\r\n                      media={media}\r\n                      accessibilityLabel={`View details for ${name}`}\r\n                      shortcutActions={shortcutActions}\r\n                      persistActions\r\n                    >\r\n                      <h3>\r\n                        <TextStyle variation=\"strong\">\r\n                          <span style={{ fontSize: 12 }}>Name: </span>\r\n                          {name}\r\n                        </TextStyle>\r\n                      </h3>\r\n                      <h3>\r\n                        <TextStyle variation=\"strong\">\r\n                          <span style={{ fontSize: 12 }}>Category: </span>\r\n                          {category}\r\n                        </TextStyle>\r\n                      </h3>\r\n                    </ResourceList.Item>\r\n                  );\r\n                }}\r\n              />\r\n            </Card.Section>\r\n          </Card>\r\n        </Layout.Section>\r\n      </Layout>\r\n      <Modal\r\n        open={activeModal}\r\n        onClose={handleChange}\r\n        title=\"Add Image\"\r\n        primaryAction={{\r\n          content: \"Add\",\r\n          onAction: handleImages\r\n        }}\r\n        style={{ padding: \"20px\" }}\r\n        loading={loading}\r\n      >\r\n        <div>{modalData}</div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}