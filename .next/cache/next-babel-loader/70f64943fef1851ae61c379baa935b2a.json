{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { Modal, Stack, DropZone, TextField, Layout, Card, TextStyle, ResourceList, Thumbnail } from '@shopify/polaris';\nimport Select from 'react-select';\nexport default function Background() {\n  const {\n    0: active,\n    1: setActive\n  } = useState(false);\n  const {\n    0: imageName,\n    1: setimageName\n  } = useState(''); // const [categoryValue, setCategoryValue] = useState('');\n\n  const {\n    0: imageNameError,\n    1: setImageNameError\n  } = useState(''); // const [imageCategoryError, setCategoryError] = useState('');\n\n  const handleChange = useCallback(() => setActive(!active), [active]);\n  const handleImageName = useCallback(newValue => {\n    setimageName(newValue);\n    handleImageNameError('');\n  }, []);\n\n  function handleImageNameError(txt) {\n    setImageNameError(txt);\n  } // const handleImageCategory = useCallback( \n  //   (newValue) => {\n  //     setCategoryValue(newValue)\n  //     setCategoryError('');\n  //   },\n  //   [],\n  // );\n  // function handleCategoryError(txt) {\n  //   setCategoryError(txt);\n  // }\n\n\n  const {\n    0: openFileDialog,\n    1: setOpenFileDialog\n  } = useState(false);\n  const {\n    0: file,\n    1: setFile\n  } = useState();\n  const toggleOpenFileDialog = useCallback(() => setOpenFileDialog(openFileDialog => !openFileDialog), []);\n  const validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\n  const handleDropZoneDrop = useCallback((_dropFiles, acceptedFiles, _rejectedFiles) => setFile(file => acceptedFiles[0]), []);\n\n  const fileUpload = !file && __jsx(DropZone.FileUpload, null);\n\n  const uploadedFile = file && __jsx(Stack, null, __jsx(Thumbnail, {\n    size: \"large\",\n    alt: file.name,\n    source: validImageTypes.indexOf(file.type) > 0 ? window.URL.createObjectURL(file) : 'https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304'\n  }));\n\n  const options = [{\n    value: 'chocolate',\n    label: 'Chocolate'\n  }, {\n    value: 'strawberry',\n    label: 'Strawberry'\n  }, {\n    value: 'vanilla',\n    label: 'Vanilla'\n  }, {\n    value: 'vanilla',\n    label: 'Vanilla'\n  }, {\n    value: 'vanilla',\n    label: 'Vanilla'\n  }, {\n    value: 'vanilla',\n    label: 'Vanilla'\n  }, {\n    value: 'vanilla',\n    label: 'Vanilla'\n  }, {\n    value: 'vanilla',\n    label: 'Vanilla'\n  }, {\n    value: 'vanilla',\n    label: 'Vanilla'\n  }, {\n    value: 'vanilla',\n    label: 'Vanilla'\n  }];\n  const {\n    0: selected,\n    1: setSelected\n  } = useState('');\n  const handleSelectChange = useCallback(value => setSelected(value), []);\n\n  const handleImages = () => {\n    // if(imageName === '' && categoryValue === '') {\n    //   handleImageNameError('Need Image Name');\n    //   handleCategoryError('Need Category');\n    //   return;\n    // }\n    if (imageName === '') {\n      handleImageNameError('Need Image Name');\n      return;\n    } // if(categoryValue === '') {\n    //   handleCategoryError('Need Category');\n    //   return;\n    // }\n\n\n    console.log(imageName);\n    let fd = new FormData();\n    fd.append('file', file);\n    fd.append('fieldname', imageName);\n    axios.post('http://localhost:3000/background', fd, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => {\n      console.log(res.data);\n    });\n  };\n\n  return __jsx(\"div\", null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"Background Images\",\n    actions: [{\n      content: 'Add Background Image',\n      onAction: handleChange\n    }]\n  }, __jsx(Card.Section, null, __jsx(TextStyle, {\n    variation: \"subdued\"\n  }, \"455 units available\")), __jsx(Card.Section, {\n    title: \"Items\"\n  }, __jsx(ResourceList, {\n    resourceName: {\n      singular: 'image',\n      plural: 'images'\n    },\n    items: [{\n      id: 341,\n      name: 'Black & orange scarf',\n      media: __jsx(Thumbnail, {\n        source: \"https://burst.shopifycdn.com/photos/black-orange-stripes_373x@2x.jpg\",\n        alt: \"Black orange scarf\"\n      })\n    }, {\n      id: 256,\n      name: 'Tucan scarf',\n      media: __jsx(Thumbnail, {\n        source: \"https://burst.shopifycdn.com/photos/tucan-scarf_373x@2x.jpg\",\n        alt: \"Tucan scarf\"\n      })\n    }],\n    renderItem: item => {\n      const {\n        id,\n        name,\n        media\n      } = item;\n      return __jsx(ResourceList.Item, {\n        id: id,\n        media: media,\n        accessibilityLabel: `View details for ${name}`\n      }, __jsx(\"h3\", null, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, name)));\n    }\n  }))))), __jsx(Modal, {\n    open: active,\n    onClose: handleChange,\n    title: \"Add Image\",\n    primaryAction: {\n      content: 'Add',\n      onAction: handleImages\n    },\n    style: {\n      padding: '20px'\n    }\n  }, __jsx(Modal.Section, null, __jsx(Stack, {\n    alignment: \"center\"\n  }, __jsx(Stack.Item, null, __jsx(\"div\", {\n    style: {\n      width: 80,\n      height: 80\n    }\n  }, __jsx(DropZone, {\n    openFileDialog: openFileDialog,\n    onDrop: handleDropZoneDrop,\n    onFileDialogClose: toggleOpenFileDialog\n  }, fileUpload, uploadedFile))), __jsx(Stack.Item, null, __jsx(TextField, {\n    label: \"Image Name\",\n    value: imageName,\n    onChange: handleImageName,\n    placeholder: \"Enter image name\",\n    error: imageNameError\n  })), __jsx(Stack.Item, null, __jsx(\"div\", null, __jsx(\"label\", null, \"Image Category\"), __jsx(Select, {\n    className: \"category\",\n    value: selected,\n    onChange: handleSelectChange,\n    options: options\n  })))))));\n}","map":{"version":3,"sources":["E:/Lenny/blendapp/pages/index.js"],"names":["React","useCallback","useState","axios","Modal","Stack","DropZone","TextField","Layout","Card","TextStyle","ResourceList","Thumbnail","Select","Background","active","setActive","imageName","setimageName","imageNameError","setImageNameError","handleChange","handleImageName","newValue","handleImageNameError","txt","openFileDialog","setOpenFileDialog","file","setFile","toggleOpenFileDialog","validImageTypes","handleDropZoneDrop","_dropFiles","acceptedFiles","_rejectedFiles","fileUpload","uploadedFile","name","indexOf","type","window","URL","createObjectURL","options","value","label","selected","setSelected","handleSelectChange","handleImages","console","log","fd","FormData","append","post","headers","then","res","data","content","onAction","singular","plural","id","media","item","padding","width","height"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,KAAf,EAAsBC,QAAtB,EAAgCC,SAAhC,EAA2CC,MAA3C,EAAmDC,IAAnD,EAAyDC,SAAzD,EAAoEC,YAApE,EAAkFC,SAAlF,QAAkG,kBAAlG;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBd,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAACe,SAAD;AAAA,OAAYC;AAAZ,MAA4BhB,QAAQ,CAAC,EAAD,CAA1C,CAFmC,CAGnC;;AACA,QAAM;AAAA,OAACiB,cAAD;AAAA,OAAiBC;AAAjB,MAAsClB,QAAQ,CAAC,EAAD,CAApD,CAJmC,CAKnC;;AAEA,QAAMmB,YAAY,GAAGpB,WAAW,CAAC,MAAMe,SAAS,CAAC,CAACD,MAAF,CAAhB,EAA2B,CAACA,MAAD,CAA3B,CAAhC;AAEA,QAAMO,eAAe,GAAGrB,WAAW,CAChCsB,QAAD,IAAc;AACZL,IAAAA,YAAY,CAACK,QAAD,CAAZ;AACAC,IAAAA,oBAAoB,CAAC,EAAD,CAApB;AACD,GAJgC,EAKjC,EALiC,CAAnC;;AAQA,WAASA,oBAAT,CAA8BC,GAA9B,EAAmC;AACjCL,IAAAA,iBAAiB,CAACK,GAAD,CAAjB;AACD,GAnBkC,CAqBnC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCzB,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAM;AAAA,OAAC0B,IAAD;AAAA,OAAOC;AAAP,MAAkB3B,QAAQ,EAAhC;AAEA,QAAM4B,oBAAoB,GAAG7B,WAAW,CACtC,MAAM0B,iBAAiB,CAAED,cAAD,IAAoB,CAACA,cAAtB,CADe,EAEtC,EAFsC,CAAxC;AAKA,QAAMK,eAAe,GAAG,CAAC,WAAD,EAAc,YAAd,EAA4B,WAA5B,CAAxB;AACA,QAAMC,kBAAkB,GAAG/B,WAAW,CACpC,CAACgC,UAAD,EAAaC,aAAb,EAA4BC,cAA5B,KACEN,OAAO,CAAED,IAAD,IAAUM,aAAa,CAAC,CAAD,CAAxB,CAF2B,EAGpC,EAHoC,CAAtC;;AAMA,QAAME,UAAU,GAAG,CAACR,IAAD,IAAS,MAAC,QAAD,CAAU,UAAV,OAA5B;;AACA,QAAMS,YAAY,GAAGT,IAAI,IACvB,MAAC,KAAD,QACE,MAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,GAAG,EAAEA,IAAI,CAACU,IAFZ;AAGE,IAAA,MAAM,EACJP,eAAe,CAACQ,OAAhB,CAAwBX,IAAI,CAACY,IAA7B,IAAqC,CAArC,GACIC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2Bf,IAA3B,CADJ,GAEI;AANR,IADF,CADF;;AAcA,QAAMgB,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GADc,EAEd;AAAED,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAFc,EAGd;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GAHc,EAId;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GAJc,EAKd;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GALc,EAMd;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GANc,EAOd;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GAPc,EAQd;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GARc,EASd;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GATc,EAUd;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GAVc,CAAhB;AAaA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0B9C,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM+C,kBAAkB,GAAGhD,WAAW,CAAE4C,KAAD,IAAWG,WAAW,CAACH,KAAD,CAAvB,EAAgC,EAAhC,CAAtC;;AAEA,QAAMK,YAAY,GAAG,MAAM;AACzB;AACA;AACA;AACA;AACA;AACA,QAAGjC,SAAS,KAAK,EAAjB,EAAqB;AACnBO,MAAAA,oBAAoB,CAAC,iBAAD,CAApB;AACA;AACD,KATwB,CAUzB;AACA;AACA;AACA;;;AACA2B,IAAAA,OAAO,CAACC,GAAR,CAAYnC,SAAZ;AACA,QAAIoC,EAAE,GAAG,IAAIC,QAAJ,EAAT;AACAD,IAAAA,EAAE,CAACE,MAAH,CAAU,MAAV,EAAkB3B,IAAlB;AACAyB,IAAAA,EAAE,CAACE,MAAH,CAAU,WAAV,EAAuBtC,SAAvB;AACAd,IAAAA,KAAK,CAACqD,IAAN,CAAW,kCAAX,EAA+CH,EAA/C,EAAmD;AAC/CI,MAAAA,OAAO,EAAE;AACT,wBAAgB;AADP;AADsC,KAAnD,EAKCC,IALD,CAKMC,GAAG,IAAI;AACXR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAG,CAACC,IAAhB;AACD,KAPD;AAQD,GA1BD;;AA4BA,SACE,mBACE,MAAC,MAAD,QACM,MAAC,MAAD,CAAQ,OAAR,QACI,MAAC,IAAD;AACI,IAAA,KAAK,EAAC,mBADV;AAEI,IAAA,OAAO,EAAE,CAAC;AACNC,MAAAA,OAAO,EAAE,sBADH;AAENC,MAAAA,QAAQ,EAAEzC;AAFJ,KAAD;AAFb,KAOA,MAAC,IAAD,CAAM,OAAN,QACI,MAAC,SAAD;AAAW,IAAA,SAAS,EAAC;AAArB,2BADJ,CAPA,EAUA,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,EAAC;AAApB,KACI,MAAC,YAAD;AACA,IAAA,YAAY,EAAE;AAAC0C,MAAAA,QAAQ,EAAE,OAAX;AAAoBC,MAAAA,MAAM,EAAE;AAA5B,KADd;AAEA,IAAA,KAAK,EAAE,CACH;AACIC,MAAAA,EAAE,EAAE,GADR;AAEI3B,MAAAA,IAAI,EAAE,sBAFV;AAGI4B,MAAAA,KAAK,EACD,MAAC,SAAD;AACA,QAAA,MAAM,EAAC,sEADP;AAEA,QAAA,GAAG,EAAC;AAFJ;AAJR,KADG,EAWH;AACID,MAAAA,EAAE,EAAE,GADR;AAEI3B,MAAAA,IAAI,EAAE,aAFV;AAGI4B,MAAAA,KAAK,EACD,MAAC,SAAD;AACA,QAAA,MAAM,EAAC,6DADP;AAEA,QAAA,GAAG,EAAC;AAFJ;AAJR,KAXG,CAFP;AAwBA,IAAA,UAAU,EAAGC,IAAD,IAAU;AAClB,YAAM;AAACF,QAAAA,EAAD;AAAK3B,QAAAA,IAAL;AAAW4B,QAAAA;AAAX,UAAoBC,IAA1B;AAEA,aACA,MAAC,YAAD,CAAc,IAAd;AACI,QAAA,EAAE,EAAEF,EADR;AAEI,QAAA,KAAK,EAAEC,KAFX;AAGI,QAAA,kBAAkB,EAAG,oBAAmB5B,IAAK;AAHjD,SAKI,kBACA,MAAC,SAAD;AAAW,QAAA,SAAS,EAAC;AAArB,SAA+BA,IAA/B,CADA,CALJ,CADA;AAWH;AAtCD,IADJ,CAVA,CADJ,CADN,CADF,EA0DI,MAAC,KAAD;AACI,IAAA,IAAI,EAAEvB,MADV;AAEI,IAAA,OAAO,EAAEM,YAFb;AAGI,IAAA,KAAK,EAAC,WAHV;AAII,IAAA,aAAa,EAAE;AACXwC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,QAAQ,EAAEZ;AAFC,KAJnB;AAQI,IAAA,KAAK,EAAE;AAACkB,MAAAA,OAAO,EAAE;AAAV;AARX,KAUI,MAAC,KAAD,CAAO,OAAP,QACI,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC;AAAjB,KACI,MAAC,KAAD,CAAO,IAAP,QACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB;AAAZ,KACI,MAAC,QAAD;AACA,IAAA,cAAc,EAAE5C,cADhB;AAEA,IAAA,MAAM,EAAEM,kBAFR;AAGA,IAAA,iBAAiB,EAAEF;AAHnB,KAKCM,UALD,EAMCC,YAND,CADJ,CADJ,CADJ,EAaI,MAAC,KAAD,CAAO,IAAP,QACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,KAAK,EAAEpB,SAFT;AAGE,IAAA,QAAQ,EAAEK,eAHZ;AAIE,IAAA,WAAW,EAAC,kBAJd;AAKE,IAAA,KAAK,EAAEH;AALT,IADF,CAbJ,EAsBI,MAAC,KAAD,CAAO,IAAP,QACE,mBACE,sCADF,EAEE,MAAC,MAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EAAE4B,QAFT;AAGE,IAAA,QAAQ,EAAEE,kBAHZ;AAIE,IAAA,OAAO,EAAEL;AAJX,IAFF,CADF,CAtBJ,CADJ,CAVJ,CA1DJ,CADF;AA4GD","sourcesContent":["import React, {useCallback, useState} from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport {Modal, Stack, DropZone, TextField, Layout, Card, TextStyle, ResourceList, Thumbnail} from '@shopify/polaris';\r\nimport Select from 'react-select';\r\n\r\nexport default function Background() {\r\n  const [active, setActive] = useState(false);\r\n  const [imageName, setimageName] = useState('');\r\n  // const [categoryValue, setCategoryValue] = useState('');\r\n  const [imageNameError, setImageNameError] = useState('');\r\n  // const [imageCategoryError, setCategoryError] = useState('');\r\n\r\n  const handleChange = useCallback(() => setActive(!active), [active]);  \r\n\r\n  const handleImageName = useCallback( \r\n    (newValue) => {\r\n      setimageName(newValue)\r\n      handleImageNameError('');\r\n    },\r\n    [],\r\n  );\r\n\r\n  function handleImageNameError(txt) {\r\n    setImageNameError(txt);\r\n  }\r\n\r\n  // const handleImageCategory = useCallback( \r\n  //   (newValue) => {\r\n  //     setCategoryValue(newValue)\r\n  //     setCategoryError('');\r\n  //   },\r\n  //   [],\r\n  // );\r\n\r\n  // function handleCategoryError(txt) {\r\n  //   setCategoryError(txt);\r\n  // }\r\n\r\n  const [openFileDialog, setOpenFileDialog] = useState(false);\r\n\r\n  const [file, setFile] = useState();\r\n\r\n  const toggleOpenFileDialog = useCallback(\r\n    () => setOpenFileDialog((openFileDialog) => !openFileDialog),\r\n    [],\r\n  );\r\n  \r\n  const validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\r\n  const handleDropZoneDrop = useCallback(\r\n    (_dropFiles, acceptedFiles, _rejectedFiles) =>\r\n      setFile((file) => acceptedFiles[0]),\r\n    [],\r\n  );\r\n\r\n  const fileUpload = !file && <DropZone.FileUpload />;\r\n  const uploadedFile = file && (\r\n    <Stack>\r\n      <Thumbnail\r\n        size=\"large\"\r\n        alt={file.name}\r\n        source={\r\n          validImageTypes.indexOf(file.type) > 0\r\n            ? window.URL.createObjectURL(file)\r\n            : 'https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304'\r\n        }\r\n      />\r\n    </Stack>\r\n  );\r\n\r\n  const options = [\r\n    { value: 'chocolate', label: 'Chocolate' },\r\n    { value: 'strawberry', label: 'Strawberry' },\r\n    { value: 'vanilla', label: 'Vanilla' },\r\n    { value: 'vanilla', label: 'Vanilla' },\r\n    { value: 'vanilla', label: 'Vanilla' },\r\n    { value: 'vanilla', label: 'Vanilla' },\r\n    { value: 'vanilla', label: 'Vanilla' },\r\n    { value: 'vanilla', label: 'Vanilla' },\r\n    { value: 'vanilla', label: 'Vanilla' },\r\n    { value: 'vanilla', label: 'Vanilla' },\r\n  ];\r\n\r\n  const [selected, setSelected] = useState('');\r\n\r\n  const handleSelectChange = useCallback((value) => setSelected(value), []);\r\n\r\n  const handleImages = () => {\r\n    // if(imageName === '' && categoryValue === '') {\r\n    //   handleImageNameError('Need Image Name');\r\n    //   handleCategoryError('Need Category');\r\n    //   return;\r\n    // }\r\n    if(imageName === '') {\r\n      handleImageNameError('Need Image Name');\r\n      return;\r\n    }\r\n    // if(categoryValue === '') {\r\n    //   handleCategoryError('Need Category');\r\n    //   return;\r\n    // }\r\n    console.log(imageName)\r\n    let fd = new FormData();\r\n    fd.append('file', file);\r\n    fd.append('fieldname', imageName);\r\n    axios.post('http://localhost:3000/background', fd, {\r\n        headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    })\r\n    .then(res => {\r\n      console.log(res.data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Layout>\r\n            <Layout.Section>\r\n                <Card \r\n                    title=\"Background Images\" \r\n                    actions={[{\r\n                        content: 'Add Background Image',\r\n                        onAction: handleChange\r\n                    }]}\r\n                >\r\n                <Card.Section>\r\n                    <TextStyle variation=\"subdued\">455 units available</TextStyle>\r\n                </Card.Section>\r\n                <Card.Section title=\"Items\">\r\n                    <ResourceList\r\n                    resourceName={{singular: 'image', plural: 'images'}}\r\n                    items={[\r\n                        {\r\n                            id: 341,\r\n                            name: 'Black & orange scarf',\r\n                            media: (\r\n                                <Thumbnail\r\n                                source=\"https://burst.shopifycdn.com/photos/black-orange-stripes_373x@2x.jpg\"\r\n                                alt=\"Black orange scarf\"\r\n                                />\r\n                            ),\r\n                        },\r\n                        {\r\n                            id: 256,\r\n                            name: 'Tucan scarf',\r\n                            media: (\r\n                                <Thumbnail\r\n                                source=\"https://burst.shopifycdn.com/photos/tucan-scarf_373x@2x.jpg\"\r\n                                alt=\"Tucan scarf\"\r\n                                />\r\n                            ),\r\n                        },\r\n                    ]}\r\n                    renderItem={(item) => {\r\n                        const {id, name, media} = item;\r\n\r\n                        return (\r\n                        <ResourceList.Item\r\n                            id={id}\r\n                            media={media}\r\n                            accessibilityLabel={`View details for ${name}`}\r\n                        >\r\n                            <h3>\r\n                            <TextStyle variation=\"strong\">{name}</TextStyle>\r\n                            </h3>\r\n                        </ResourceList.Item>\r\n                        );\r\n                    }}\r\n                    />\r\n                </Card.Section>\r\n                </Card>\r\n            </Layout.Section>\r\n        </Layout>\r\n        <Modal\r\n            open={active}\r\n            onClose={handleChange}\r\n            title=\"Add Image\"\r\n            primaryAction={{\r\n                content: 'Add',\r\n                onAction: handleImages,\r\n            }}\r\n            style={{padding: '20px'}}\r\n        >\r\n            <Modal.Section>\r\n                <Stack alignment=\"center\">\r\n                    <Stack.Item>\r\n                        <div style={{width: 80, height: 80 }}>\r\n                            <DropZone\r\n                            openFileDialog={openFileDialog}\r\n                            onDrop={handleDropZoneDrop}\r\n                            onFileDialogClose={toggleOpenFileDialog}\r\n                            >\r\n                            {fileUpload}\r\n                            {uploadedFile}\r\n                            </DropZone>\r\n                        </div>\r\n                    </Stack.Item>\r\n                    <Stack.Item>\r\n                      <TextField\r\n                        label=\"Image Name\"\r\n                        value={imageName}\r\n                        onChange={handleImageName}\r\n                        placeholder=\"Enter image name\"\r\n                        error={imageNameError}\r\n                      />\r\n                    </Stack.Item>\r\n                    <Stack.Item>\r\n                      <div>\r\n                        <label>Image Category</label>\r\n                        <Select\r\n                          className='category'\r\n                          value={selected}\r\n                          onChange={handleSelectChange}\r\n                          options={options}\r\n                        />\r\n                      </div>\r\n                    </Stack.Item>\r\n                </Stack>\r\n            </Modal.Section>\r\n        </Modal>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}