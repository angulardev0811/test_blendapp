{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Layout, Card, ResourceList, TextStyle, Icon, Thumbnail, Modal, Stack, DropZone, InlineError, TextField } from \"@shopify/polaris\";\nimport { DeleteMajorMonotone, EditMajorMonotone } from \"@shopify/polaris-icons\";\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getList\", function _callee() {\n      var response, allImageData, imageListItemsData, i, item;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(\"https://\" + host + \"/drop\"));\n\n            case 3:\n              response = _context.sent;\n\n              _this.setState({\n                allImageData: response.data\n              });\n\n              allImageData = response.data;\n              imageListItemsData = [];\n\n              for (i in allImageData) {\n                item = allImageData[i];\n                imageListItemsData.push({\n                  id: item._id,\n                  supplierName: item.supplierName,\n                  oilName: item.oilName,\n                  oilType: item.oilType,\n                  functionalSub: item.functionalSub,\n                  aromaticSub: item.aromaticSub,\n                  blendsWellWith: item.blendsWellWith,\n                  aromaticDescription: item.aromaticDescription,\n                  aromaType: item.aromaType,\n                  classifications: item.classifications,\n                  note: item.note,\n                  media: __jsx(Thumbnail, {\n                    source: item.filepath,\n                    alt: item.filename\n                  })\n                });\n              }\n\n              _this.setState({\n                imageListItems: imageListItemsData,\n                listItemCount: imageListItemsData.length\n              });\n\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 11]], Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addNewImage\", function () {\n      _this.setState({\n        activeModal: true,\n        file: null,\n        fileURL: \"\",\n        supplierName: \"\",\n        oilName: \"\",\n        oilType: \"\",\n        functionalSub: \"\",\n        aromaticSub: \"\",\n        blendsWellWith: \"\",\n        aromaticDescription: \"\",\n        aromaType: \"\",\n        classifications: \"\",\n        note: \"\",\n        fileError: \"\",\n        supplierNameError: \"\",\n        oilNameError: \"\",\n        oilTypeError: \"\",\n        functionalSubError: \"\",\n        aromaticSubError: \"\",\n        blendWellWithError: \"\",\n        aromaticDescriptionError: \"\",\n        aromaTypeError: \"\",\n        classificationsError: \"\",\n        noteError: \"\",\n        modalAction: {\n          content: \"Add\",\n          onAction: _this.handleAddImages\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setSelectedListItems\", function (items) {\n      console.log(items);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"editImage\", function (id, supplierName, media, oilName, oilType, functionalSub, aromaticSub, blendsWellWith, aromaticDescription, aromaType, classifications, note) {\n      console.log(id, supplierName, media, oilName, oilType, functionalSub, aromaticSub, blendsWellWith, aromaticDescription, aromaType, classifications, note);\n\n      _this.setState({\n        modalAction: {\n          content: \"Save\",\n          onAction: _this.handleEditImages\n        },\n        fileError: \"\",\n        supplierNameError: \"\",\n        oilNameError: \"\",\n        oilTypeError: \"\",\n        functionalSubError: \"\",\n        aromaticSubError: \"\",\n        blendWellWithError: \"\",\n        aromaticDescriptionError: \"\",\n        aromaTypeError: \"\",\n        classificationsError: \"\",\n        noteError: \"\",\n        id: id,\n        file: null,\n        fileURL: media.props.source,\n        supplierName: supplierName,\n        oilName: oilName,\n        oilType: oilType,\n        functionalSub: functionalSub,\n        aromaticSub: aromaticSub,\n        blendsWellWith: blendsWellWith,\n        aromaticDescription: aromaticDescription,\n        aromaType: aromaType,\n        classifications: classifications,\n        note: note,\n        activeModal: true,\n        fileFlag: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteImage\", function (id) {\n      _this.setState({\n        id: id,\n        activeDeleteModal: true\n      });\n\n      console.log(id);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"confirmDelete\", function _callee2() {\n      var response;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(\"https://\".concat(host, \"/drop/deleteImage?id=\").concat(_this.state.id)));\n\n            case 3:\n              response = _context2.sent;\n              console.log(response.data);\n\n              if (response.data === \"success\") {\n                _this.getList();\n\n                _this.setState({\n                  loading: false,\n                  activeDeleteModal: false\n                });\n              } else {\n                console.log(response.data);\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeModal\", function () {\n      _this.setState({\n        activeModal: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropZoneDrop\", function (_dropFiles, acceptedFiles, _rejectedFiles) {\n      _this.setState({\n        file: acceptedFiles[0],\n        fileError: \"\",\n        fileFlag: true,\n        fileURL: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleOpenFileDialog\", function () {\n      _this.setState({\n        openFileDialog: !_this.state.openFileDialog\n      });\n\n      console.log(\"toggle\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateSupplierName\", function (value) {\n      if (_this.state.supplierName !== value) _this.setState({\n        popularFlag: true\n      });\n\n      _this.setState({\n        supplierName: value,\n        supplierNameError: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateOilName\", function (value) {\n      if (_this.state.oilName !== value) _this.setState({\n        oilNameFlag: true\n      });\n\n      _this.setState({\n        oilName: value,\n        oilNameError: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateOilType\", function (value) {\n      if (_this.state.oilType !== value) _this.setState({\n        popularFlag: true\n      });\n\n      _this.setState({\n        oilType: value,\n        oilTypeError: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateFunctionalSub\", function (value) {\n      console.log(\"pre:\" + _this.state.functionalSub + \"new:\" + value);\n      if (_this.state.functionalSub !== value) _this.setState({\n        popularFlag: true\n      });\n\n      _this.setState({\n        functionalSub: value,\n        functionalSubError: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateAromaticSub\", function (value) {\n      if (_this.state.aromaticSub !== value) _this.setState({\n        popularFlag: true\n      });\n\n      _this.setState({\n        aromaticSub: value,\n        aromaticSubError: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateBlendWellWith\", function (value) {\n      if (_this.state.blendsWellWith !== value) _this.setState({\n        popularFlag: true\n      });\n\n      _this.setState({\n        blendsWellWith: value,\n        blendWellWithError: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateAromaticDescription\", function (value) {\n      if (_this.state.aromaticDescription !== value) _this.setState({\n        popularFlag: true\n      });\n\n      _this.setState({\n        aromaticDescription: value,\n        aromaticDescriptionError: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateAromaType\", function (value) {\n      if (_this.state.aromaType !== value) _this.setState({\n        popularFlag: true\n      });\n\n      _this.setState({\n        aromaType: value,\n        aromaTypeError: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateClassifications\", function (value) {\n      if (_this.state.classifications !== value) _this.setState({\n        popularFlag: true\n      });\n\n      _this.setState({\n        classifications: value,\n        classificationsError: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateNote\", function (value) {\n      if (_this.state.note !== value) _this.setState({\n        popularFlag: true\n      });\n\n      _this.setState({\n        note: value,\n        noteError: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAddImages\", function () {\n      if (_this.state.file === null && _this.state.supplierName === \"\" && _this.state.oilName === \"\" && _this.state.oilType === \"\" && _this.state.aromaType === \"\" && _this.state.classifications === \"\" && _this.state.note === \"\") {\n        _this.setState({\n          fileError: \"Need Image\",\n          supplierNameError: \"Need Supplier Name\",\n          oilNameError: \"Need Oil Name\",\n          oilTypeError: \"Need Oil Type\",\n          aromaTypeError: \"Need Aroma Type\",\n          classificationsError: \"Need Classifications\",\n          noteError: \"Need Note\"\n        });\n\n        return;\n      } else if (_this.state.file === null) {\n        _this.setState({\n          fileError: \"Need Image\"\n        });\n\n        return;\n      } else if (_this.state.supplierName === \"\") {\n        _this.setState({\n          supplierNameError: \"Need Supplier Name\"\n        });\n\n        return;\n      } else if (_this.state.oilName === \"\") {\n        _this.setState({\n          oilNameError: \"Need Oil Name\"\n        });\n\n        return;\n      } else if (_this.state.oilType === \"\") {\n        _this.setState({\n          oilTypeError: \"Need Oil Type\"\n        });\n\n        return;\n      } else if (_this.state.aromaType === \"\") {\n        _this.setState({\n          aromaTypeError: \"Need Aroma Type\"\n        });\n\n        return;\n      } else if (_this.state.classifications === \"\") {\n        _this.setState({\n          classificationsError: \"Need Classifications\"\n        });\n\n        return;\n      } else if (_this.state.note === \"\") {\n        _this.setState({\n          noteError: \"Need Note\"\n        });\n\n        return;\n      }\n\n      for (var i in _this.state.allImageData) {\n        var item = _this.state.allImageData[i];\n\n        if (item.filename === _this.state.oilName) {\n          _this.setState({\n            oilNameError: \"Oil Name Exist\"\n          });\n\n          return;\n        }\n      }\n\n      _this.setState({\n        loading: true\n      });\n\n      var formdata = new FormData();\n      formdata.append(\"file\", _this.state.file);\n      formdata.append(\"supplierName\", _this.state.supplierName);\n      formdata.append(\"oilName\", _this.state.oilName);\n      formdata.append(\"oilType\", _this.state.oilType);\n      formdata.append(\"functionalSub\", _this.state.functionalSub);\n      formdata.append(\"aromaticSub\", _this.state.aromaticSub);\n      formdata.append(\"blendsWellWith\", _this.state.blendsWellWith);\n      formdata.append(\"aromaticDescription\", _this.state.aromaticDescription);\n      formdata.append(\"aromaType\", _this.state.aromaType);\n      formdata.append(\"classifications\", _this.state.classifications);\n      formdata.append(\"note\", _this.state.note);\n      axios.post(\"https://\" + host + \"/drop\", formdata, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (res) {\n        if (res.data === \"success\") {\n          _this.setState({\n            activeModal: false\n          });\n\n          _this.getList();\n\n          _this.setState({\n            loading: false\n          });\n\n          console.log(res.data);\n        } else {\n          console.log(res.data);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEditImages\", function () {\n      console.log(_this.state.file, _this.state.supplierName, _this.state.oilName, _this.state.oilType, _this.state.functionalSub, _this.state.aromaticSub, _this.state.blendsWellWith, _this.state.aromaticDescription, _this.state.aromaType, _this.state.classifications, _this.state.note);\n\n      if (_this.state.file === null && _this.state.supplierName === \"\" && _this.state.oilName === \"\" && _this.state.oilType === \"\" && _this.state.aromaType === \"\" && _this.state.classifications === \"\" && _this.state.note === \"\") {\n        _this.setState({\n          fileError: \"Need Image\",\n          supplierNameError: \"Need Supplier Name\",\n          oilNameError: \"Need Oil Name\",\n          oilTypeError: \"Need Oil Type\",\n          aromaTypeError: \"Need Aroma Type\",\n          classificationsError: \"Need Classifications\",\n          noteError: \"Need Note\"\n        });\n\n        return;\n      } else if (_this.state.supplierName === \"\") {\n        _this.setState({\n          supplierNameError: \"Need Supplier Name\"\n        });\n\n        return;\n      } else if (_this.state.oilName === \"\") {\n        _this.setState({\n          oilNameError: \"Need Oil Name\"\n        });\n\n        return;\n      } else if (_this.state.oilType === \"\") {\n        _this.setState({\n          oilTypeError: \"Need Oil Type\"\n        });\n\n        return;\n      } else if (_this.state.aromaType === \"\") {\n        _this.setState({\n          aromaTypeError: \"Need Aroma Type\"\n        });\n\n        return;\n      } else if (_this.state.classifications === \"\") {\n        _this.setState({\n          classificationsError: \"Need Classifications\"\n        });\n\n        return;\n      } else if (_this.state.note === \"\") {\n        _this.setState({\n          noteError: \"Need Note\"\n        });\n\n        return;\n      }\n\n      if (!_this.state.fileFlag && !_this.state.oilNameFlag && !_this.state.popularFlag) {\n        _this.setState({\n          activeModal: false\n        });\n\n        return;\n      }\n\n      if (_this.state.fileFlag) {\n        _this.setState({\n          loading: true\n        });\n\n        var formdata = new FormData();\n        formdata.append(\"file\", _this.state.file);\n        formdata.append(\"supplierName\", _this.state.supplierName);\n        formdata.append(\"oilName\", _this.state.oilName);\n        formdata.append(\"oilType\", _this.state.oilType);\n        formdata.append(\"functionalSub\", _this.state.functionalSub);\n        formdata.append(\"aromaticSub\", _this.state.aromaticSub);\n        formdata.append(\"blendsWellWith\", _this.state.blendsWellWith);\n        formdata.append(\"aromaticDescription\", _this.state.aromaticDescription);\n        formdata.append(\"aromaType\", _this.state.aromaType);\n        formdata.append(\"classifications\", _this.state.classifications);\n        formdata.append(\"note\", _this.state.note);\n        formdata.append(\"id\", _this.state.id);\n        axios.post(\"https://\" + host + \"/drop/editWithFile\", formdata, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        }).then(function (res) {\n          if (res.data === \"success\") {\n            _this.getList();\n\n            _this.setState({\n              activeModal: false,\n              loading: false\n            });\n\n            console.log(res.data);\n          } else {\n            console.log(res.data);\n          }\n        });\n      } else {\n        if (_this.state.oilNameFlag) {\n          _this.setState({\n            loading: true\n          });\n\n          axios.post(\"https://\" + host + \"/drop/editWithoutFile\", {\n            id: _this.state.id,\n            supplierName: _this.state.supplierName,\n            oilName: _this.state.oilName,\n            oilType: _this.state.oilType,\n            functionalSub: _this.state.functionalSub,\n            aromaticSub: _this.state.aromaticSub,\n            blendsWellWith: _this.state.blendsWellWith,\n            aromaticDescription: _this.state.aromaticDescription,\n            aromaType: _this.state.aromaType,\n            classifications: _this.state.classifications,\n            note: _this.state.note\n          }).then(function (res) {\n            if (res.data === \"success\") {\n              _this.getList();\n\n              _this.setState({\n                activeModal: false,\n                loading: false\n              });\n\n              console.log(res.data);\n            } else {\n              console.log(res.data);\n            }\n          });\n        } else if (_this.state.popularFlag) {\n          _this.setState({\n            loading: true\n          });\n\n          axios.post(\"https://\" + host + \"/drop/editWithoutFile\", {\n            id: _this.state.id,\n            supplierName: _this.state.supplierName,\n            oilType: _this.state.oilType,\n            functionalSub: _this.state.functionalSub,\n            aromaticSub: _this.state.aromaticSub,\n            blendsWellWith: _this.state.blendsWellWith,\n            aromaticDescription: _this.state.aromaticDescription,\n            aromaType: _this.state.aromaType,\n            classifications: _this.state.classifications,\n            note: _this.state.note\n          }).then(function (res) {\n            if (res.data === \"success\") {\n              _this.getList();\n\n              _this.setState({\n                activeModal: false,\n                loading: false\n              });\n\n              console.log(res.data);\n            } else {\n              console.log(res.data);\n            }\n          });\n        }\n      }\n    });\n\n    _this.state = {\n      allImageData: [],\n      listItemCount: 0,\n      imageListItems: [],\n      selectedListItems: [],\n      activeModal: false,\n      modalAction: {\n        content: \"Add\",\n        onAction: _this.handleAddImages\n      },\n      loading: false,\n      file: null,\n      validImageTypes: [\"image/gif\", \"image/jpeg\", \"image/png\"],\n      openFileDialog: false,\n      fileUpload: \"\",\n      uploadedFile: \"\",\n      fileError: \"\",\n      id: \"\",\n      fileURL: \"\",\n      fileFlag: false,\n      oilNameFlag: false,\n      popularFlag: false,\n      activeDeleteModal: false,\n      supplierName: \"\",\n      oilName: \"\",\n      oilType: \"\",\n      functionalSub: \"\",\n      aromaticSub: \"\",\n      blendsWellWith: \"\",\n      aromaticDescription: \"\",\n      aromaType: \"\",\n      classifications: \"\",\n      note: \"\",\n      supplierNameError: \"\",\n      oilNameError: \"\",\n      oilTypeError: \"\",\n      functionalSubError: \"\",\n      aromaticSubError: \"\",\n      blendWellWithError: \"\",\n      aromaticDescriptionError: \"\",\n      aromaTypeError: \"\",\n      classificationsError: \"\",\n      noteError: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              this.getList();\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var fileUpload = this.state.fileURL === \"\" ? !this.state.file && __jsx(DropZone.FileUpload, null) : __jsx(Stack, null, __jsx(Thumbnail, {\n        size: \"large\",\n        alt: \"edit\",\n        source: this.state.fileURL\n      }));\n\n      var uploadedFile = this.state.file && __jsx(Stack, null, __jsx(Thumbnail, {\n        size: \"large\",\n        alt: this.state.file.name,\n        source: this.state.validImageTypes.indexOf(this.state.file.type) > 0 ? window.URL.createObjectURL(this.state.file) : \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\n      }));\n\n      return __jsx(\"div\", null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n        title: \"Drop Images\",\n        actions: [{\n          content: \"Add Drop Image\",\n          onAction: this.addNewImage\n        }]\n      }, __jsx(Card.Section, null, __jsx(TextStyle, {\n        variation: \"subdued\"\n      }, this.state.listItemCount, \" Drop Images\")), __jsx(Card.Section, null, __jsx(ResourceList, {\n        resourceName: {\n          singular: \"image\",\n          plural: \"images\"\n        },\n        items: this.state.imageListItems,\n        selectedItems: this.state.selectedListItems,\n        onSelectionChange: this.setSelectedListItems,\n        renderItem: function renderItem(item) {\n          var id = item.id,\n              supplierName = item.supplierName,\n              media = item.media,\n              oilName = item.oilName,\n              oilType = item.oilType,\n              functionalSub = item.functionalSub,\n              aromaticSub = item.aromaticSub,\n              blendsWellWith = item.blendsWellWith,\n              aromaticDescription = item.aromaticDescription,\n              aromaType = item.aromaType,\n              classifications = item.classifications,\n              note = item.note;\n          var shortcutActions = [{\n            content: __jsx(Icon, {\n              source: EditMajorMonotone,\n              color: \"red\"\n            }),\n            onAction: function onAction() {\n              return _this2.editImage(id, supplierName, media, oilName, oilType, functionalSub, aromaticSub, blendsWellWith, aromaticDescription, aromaType, classifications, note);\n            }\n          }, {\n            content: __jsx(Icon, {\n              source: DeleteMajorMonotone,\n              color: \"red\"\n            }),\n            onAction: function onAction() {\n              return _this2.deleteImage(id);\n            }\n          }];\n          return __jsx(ResourceList.Item, {\n            id: id,\n            media: media,\n            accessibilityLabel: \"View details for \".concat(name),\n            shortcutActions: shortcutActions,\n            persistActions: true\n          }, __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Supplier Name:\", \" \"), supplierName)), __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Oil Name: \"), oilName)), __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Oil Type: \"), oilType)), __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Functional Sub:\", \" \"), functionalSub)), __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Aromatic Sub: \"), aromaticSub)), __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Blends Well With:\", \" \"), blendsWellWith)), __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Aromatic Description:\", \" \"), aromaticDescription)), __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Aroma Type: \"), aromaType)), __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Classifications:\", \" \"), classifications)), __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Note: \"), note)));\n        }\n      }))))), __jsx(Modal, {\n        open: this.state.activeModal,\n        onClose: this.closeModal,\n        title: \"Add Image\",\n        primaryAction: this.state.modalAction,\n        style: {\n          padding: \"20px\"\n        },\n        loading: this.state.loading\n      }, __jsx(Modal.Section, null, __jsx(Stack, {\n        alignment: \"center\"\n      }, __jsx(Stack.Item, null, __jsx(\"div\", {\n        style: {\n          width: 100,\n          height: 100\n        }\n      }, __jsx(DropZone, {\n        openFileDialog: this.state.openFileDialog,\n        onDrop: this.handleDropZoneDrop,\n        onFileDialogClose: this.toggleOpenFileDialog\n      }, fileUpload, uploadedFile), __jsx(InlineError, {\n        message: this.state.fileError\n      }))), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Supplier Name\",\n        value: this.state.supplierName,\n        onChange: this.updateSupplierName,\n        placeholder: \"Enter Supplier Name\",\n        error: this.state.supplierNameError\n      })), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Oil Name\",\n        value: this.state.oilName,\n        onChange: this.updateOilName,\n        placeholder: \"Enter Oil Name\",\n        error: this.state.oilNameError\n      })), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Oil Type\",\n        value: this.state.oilType,\n        onChange: this.updateOilType,\n        placeholder: \"Enter Oil Type\",\n        error: this.state.oilTypeError\n      })), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Functional Sub\",\n        value: this.state.functionalSub,\n        onChange: this.updateFunctionalSub,\n        placeholder: \"Enter Functional Sub\",\n        error: this.state.functionalSubError\n      })), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Aromatic Sub\",\n        value: this.state.aromaticSub,\n        onChange: this.updateAromaticSub,\n        placeholder: \"Enter Aromatic Sub\",\n        error: this.state.aromaticSubError\n      })), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Blends well with\",\n        value: this.state.blendsWellWith,\n        onChange: this.updateBlendWellWith,\n        placeholder: \"Enter Blend well with\",\n        error: this.state.blendWellWithError\n      })), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Aromatic Descriptions\",\n        value: this.state.aromaticDescription,\n        onChange: this.updateAromaticDescription,\n        placeholder: \"Enter Aromatic Description\",\n        error: this.state.aromaticDescriptionError\n      })), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Aroma Type\",\n        value: this.state.aromaType,\n        onChange: this.updateAromaType,\n        placeholder: \"Enter Aroma Type\",\n        error: this.state.aromaTypeError\n      })), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Classifications\",\n        value: this.state.classifications,\n        onChange: this.updateClassifications,\n        placeholder: \"Enter Classifications\",\n        error: this.state.classificationsError\n      })), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Note\",\n        value: this.state.note,\n        onChange: this.updateNote,\n        placeholder: \"Enter Note\",\n        error: this.state.noteError\n      }))))), __jsx(Modal, {\n        open: this.state.activeDeleteModal,\n        onClose: this.handleDeleteModalChange,\n        title: \"Do you really want to delete?\",\n        loading: this.state.loading,\n        primaryAction: {\n          content: \"Yes\",\n          onAction: this.confirmDelete\n        },\n        secondaryActions: {\n          content: \"No\",\n          onAction: function onAction() {\n            _this2.setState({\n              activeDeleteModal: false\n            });\n          }\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["E:/Lenny/blendapp/pages/Drop.js"],"names":["React","axios","Layout","Card","ResourceList","TextStyle","Icon","Thumbnail","Modal","Stack","DropZone","InlineError","TextField","DeleteMajorMonotone","EditMajorMonotone","App","props","get","host","response","setState","allImageData","data","imageListItemsData","i","item","push","id","_id","supplierName","oilName","oilType","functionalSub","aromaticSub","blendsWellWith","aromaticDescription","aromaType","classifications","note","media","filepath","filename","imageListItems","listItemCount","length","console","log","activeModal","file","fileURL","fileError","supplierNameError","oilNameError","oilTypeError","functionalSubError","aromaticSubError","blendWellWithError","aromaticDescriptionError","aromaTypeError","classificationsError","noteError","modalAction","content","onAction","handleAddImages","items","handleEditImages","source","fileFlag","activeDeleteModal","loading","state","getList","_dropFiles","acceptedFiles","_rejectedFiles","openFileDialog","value","popularFlag","oilNameFlag","formdata","FormData","append","post","headers","then","res","selectedListItems","validImageTypes","fileUpload","uploadedFile","name","indexOf","type","window","URL","createObjectURL","addNewImage","singular","plural","setSelectedListItems","shortcutActions","editImage","deleteImage","fontSize","closeModal","padding","width","height","handleDropZoneDrop","toggleOpenFileDialog","updateSupplierName","updateOilName","updateOilType","updateFunctionalSub","updateAromaticSub","updateBlendWellWith","updateAromaticDescription","updateAromaType","updateClassifications","updateNote","handleDeleteModalChange","confirmDelete","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Layout,\r\n  Card,\r\n  ResourceList,\r\n  TextStyle,\r\n  Icon,\r\n  Thumbnail,\r\n  Modal,\r\n  Stack,\r\n  DropZone,\r\n  InlineError,\r\n  TextField\r\n} from \"@shopify/polaris\";\r\nimport { DeleteMajorMonotone, EditMajorMonotone } from \"@shopify/polaris-icons\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allImageData: [],\r\n      listItemCount: 0,\r\n      imageListItems: [],\r\n      selectedListItems: [],\r\n      activeModal: false,\r\n      modalAction: {\r\n        content: \"Add\",\r\n        onAction: this.handleAddImages\r\n      },\r\n      loading: false,\r\n      file: null,\r\n      validImageTypes: [\"image/gif\", \"image/jpeg\", \"image/png\"],\r\n      openFileDialog: false,\r\n      fileUpload: \"\",\r\n      uploadedFile: \"\",\r\n      fileError: \"\",\r\n      id: \"\",\r\n      fileURL: \"\",\r\n      fileFlag: false,\r\n      oilNameFlag: false,\r\n      popularFlag: false,\r\n      activeDeleteModal: false,\r\n      supplierName: \"\",\r\n      oilName: \"\",\r\n      oilType: \"\",\r\n      functionalSub: \"\",\r\n      aromaticSub: \"\",\r\n      blendsWellWith: \"\",\r\n      aromaticDescription: \"\",\r\n      aromaType: \"\",\r\n      classifications: \"\",\r\n      note: \"\",\r\n      supplierNameError: \"\",\r\n      oilNameError: \"\",\r\n      oilTypeError: \"\",\r\n      functionalSubError: \"\",\r\n      aromaticSubError: \"\",\r\n      blendWellWithError: \"\",\r\n      aromaticDescriptionError: \"\",\r\n      aromaTypeError: \"\",\r\n      classificationsError: \"\",\r\n      noteError: \"\"\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.getList();\r\n  }\r\n\r\n  getList = async () => {\r\n    try {\r\n      let response = await axios.get(\"https://\" + host + \"/drop\");\r\n      this.setState({ allImageData: response.data });\r\n      let allImageData = response.data;\r\n\r\n      let imageListItemsData = [];\r\n      for (let i in allImageData) {\r\n        let item = allImageData[i];\r\n        imageListItemsData.push({\r\n          id: item._id,\r\n          supplierName: item.supplierName,\r\n          oilName: item.oilName,\r\n          oilType: item.oilType,\r\n          functionalSub: item.functionalSub,\r\n          aromaticSub: item.aromaticSub,\r\n          blendsWellWith: item.blendsWellWith,\r\n          aromaticDescription: item.aromaticDescription,\r\n          aromaType: item.aromaType,\r\n          classifications: item.classifications,\r\n          note: item.note,\r\n          media: <Thumbnail source={item.filepath} alt={item.filename} />\r\n        });\r\n      }\r\n      this.setState({\r\n        imageListItems: imageListItemsData,\r\n        listItemCount: imageListItemsData.length\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  addNewImage = () => {\r\n    this.setState({\r\n      activeModal: true,\r\n      file: null,\r\n      fileURL: \"\",\r\n      supplierName: \"\",\r\n      oilName: \"\",\r\n      oilType: \"\",\r\n      functionalSub: \"\",\r\n      aromaticSub: \"\",\r\n      blendsWellWith: \"\",\r\n      aromaticDescription: \"\",\r\n      aromaType: \"\",\r\n      classifications: \"\",\r\n      note: \"\",\r\n      fileError: \"\",\r\n      supplierNameError: \"\",\r\n      oilNameError: \"\",\r\n      oilTypeError: \"\",\r\n      functionalSubError: \"\",\r\n      aromaticSubError: \"\",\r\n      blendWellWithError: \"\",\r\n      aromaticDescriptionError: \"\",\r\n      aromaTypeError: \"\",\r\n      classificationsError: \"\",\r\n      noteError: \"\",\r\n      modalAction: {\r\n        content: \"Add\",\r\n        onAction: this.handleAddImages\r\n      }\r\n    });\r\n  };\r\n\r\n  setSelectedListItems = items => {\r\n    console.log(items);\r\n  };\r\n\r\n  editImage = (\r\n    id,\r\n    supplierName,\r\n    media,\r\n    oilName,\r\n    oilType,\r\n    functionalSub,\r\n    aromaticSub,\r\n    blendsWellWith,\r\n    aromaticDescription,\r\n    aromaType,\r\n    classifications,\r\n    note\r\n  ) => {\r\n    console.log(\r\n      id,\r\n      supplierName,\r\n      media,\r\n      oilName,\r\n      oilType,\r\n      functionalSub,\r\n      aromaticSub,\r\n      blendsWellWith,\r\n      aromaticDescription,\r\n      aromaType,\r\n      classifications,\r\n      note\r\n    );\r\n    this.setState({\r\n      modalAction: {\r\n        content: \"Save\",\r\n        onAction: this.handleEditImages\r\n      },\r\n      fileError: \"\",\r\n      supplierNameError: \"\",\r\n      oilNameError: \"\",\r\n      oilTypeError: \"\",\r\n      functionalSubError: \"\",\r\n      aromaticSubError: \"\",\r\n      blendWellWithError: \"\",\r\n      aromaticDescriptionError: \"\",\r\n      aromaTypeError: \"\",\r\n      classificationsError: \"\",\r\n      noteError: \"\",\r\n      id: id,\r\n      file: null,\r\n      fileURL: media.props.source,\r\n      supplierName: supplierName,\r\n      oilName: oilName,\r\n      oilType: oilType,\r\n      functionalSub: functionalSub,\r\n      aromaticSub: aromaticSub,\r\n      blendsWellWith: blendsWellWith,\r\n      aromaticDescription: aromaticDescription,\r\n      aromaType: aromaType,\r\n      classifications: classifications,\r\n      note: note,\r\n      activeModal: true,\r\n      fileFlag: false\r\n    });\r\n  };\r\n\r\n  deleteImage = id => {\r\n    this.setState({\r\n      id: id,\r\n      activeDeleteModal: true\r\n    });\r\n    console.log(id);\r\n  };\r\n\r\n  confirmDelete = async () => {\r\n    this.setState({ loading: true });\r\n    let response = await axios.get(\r\n      `https://${host}/drop/deleteImage?id=${this.state.id}`\r\n    );\r\n    console.log(response.data);\r\n    if (response.data === \"success\") {\r\n      this.getList();\r\n      this.setState({\r\n        loading: false,\r\n        activeDeleteModal: false\r\n      });\r\n    } else {\r\n      console.log(response.data);\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ activeModal: false });\r\n  };\r\n\r\n  handleDropZoneDrop = (_dropFiles, acceptedFiles, _rejectedFiles) => {\r\n    this.setState({\r\n      file: acceptedFiles[0],\r\n      fileError: \"\",\r\n      fileFlag: true,\r\n      fileURL: \"\"\r\n    });\r\n  };\r\n\r\n  toggleOpenFileDialog = () => {\r\n    this.setState({ openFileDialog: !this.state.openFileDialog });\r\n    console.log(\"toggle\");\r\n  };\r\n\r\n  updateSupplierName = value => {\r\n    if (this.state.supplierName !== value) this.setState({ popularFlag: true });\r\n    this.setState({\r\n      supplierName: value,\r\n      supplierNameError: \"\"\r\n    });\r\n  };\r\n\r\n  updateOilName = value => {\r\n    if (this.state.oilName !== value) this.setState({ oilNameFlag: true });\r\n    this.setState({\r\n      oilName: value,\r\n      oilNameError: \"\"\r\n    });\r\n  };\r\n  updateOilType = value => {\r\n    if (this.state.oilType !== value) this.setState({ popularFlag: true });\r\n    this.setState({\r\n      oilType: value,\r\n      oilTypeError: \"\"\r\n    });\r\n  };\r\n  updateFunctionalSub = value => {\r\n    console.log(\"pre:\" + this.state.functionalSub + \"new:\" + value);\r\n    if (this.state.functionalSub !== value)\r\n      this.setState({ popularFlag: true });\r\n    this.setState({\r\n      functionalSub: value,\r\n      functionalSubError: \"\"\r\n    });\r\n  };\r\n  updateAromaticSub = value => {\r\n    if (this.state.aromaticSub !== value) this.setState({ popularFlag: true });\r\n    this.setState({\r\n      aromaticSub: value,\r\n      aromaticSubError: \"\"\r\n    });\r\n  };\r\n  updateBlendWellWith = value => {\r\n    if (this.state.blendsWellWith !== value)\r\n      this.setState({ popularFlag: true });\r\n    this.setState({\r\n      blendsWellWith: value,\r\n      blendWellWithError: \"\"\r\n    });\r\n  };\r\n  updateAromaticDescription = value => {\r\n    if (this.state.aromaticDescription !== value)\r\n      this.setState({ popularFlag: true });\r\n    this.setState({\r\n      aromaticDescription: value,\r\n      aromaticDescriptionError: \"\"\r\n    });\r\n  };\r\n  updateAromaType = value => {\r\n    if (this.state.aromaType !== value) this.setState({ popularFlag: true });\r\n    this.setState({\r\n      aromaType: value,\r\n      aromaTypeError: \"\"\r\n    });\r\n  };\r\n  updateClassifications = value => {\r\n    if (this.state.classifications !== value)\r\n      this.setState({ popularFlag: true });\r\n    this.setState({\r\n      classifications: value,\r\n      classificationsError: \"\"\r\n    });\r\n  };\r\n  updateNote = value => {\r\n    if (this.state.note !== value) this.setState({ popularFlag: true });\r\n    this.setState({\r\n      note: value,\r\n      noteError: \"\"\r\n    });\r\n  };\r\n\r\n  handleAddImages = () => {\r\n    if (\r\n      this.state.file === null &&\r\n      this.state.supplierName === \"\" &&\r\n      this.state.oilName === \"\" &&\r\n      this.state.oilType === \"\" &&\r\n      this.state.aromaType === \"\" &&\r\n      this.state.classifications === \"\" &&\r\n      this.state.note === \"\"\r\n    ) {\r\n      this.setState({\r\n        fileError: \"Need Image\",\r\n        supplierNameError: \"Need Supplier Name\",\r\n        oilNameError: \"Need Oil Name\",\r\n        oilTypeError: \"Need Oil Type\",\r\n        aromaTypeError: \"Need Aroma Type\",\r\n        classificationsError: \"Need Classifications\",\r\n        noteError: \"Need Note\"\r\n      });\r\n      return;\r\n    } else if (this.state.file === null) {\r\n      this.setState({\r\n        fileError: \"Need Image\"\r\n      });\r\n      return;\r\n    } else if (this.state.supplierName === \"\") {\r\n      this.setState({\r\n        supplierNameError: \"Need Supplier Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.oilName === \"\") {\r\n      this.setState({\r\n        oilNameError: \"Need Oil Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.oilType === \"\") {\r\n      this.setState({\r\n        oilTypeError: \"Need Oil Type\"\r\n      });\r\n      return;\r\n    } else if (this.state.aromaType === \"\") {\r\n      this.setState({\r\n        aromaTypeError: \"Need Aroma Type\"\r\n      });\r\n      return;\r\n    } else if (this.state.classifications === \"\") {\r\n      this.setState({\r\n        classificationsError: \"Need Classifications\"\r\n      });\r\n      return;\r\n    } else if (this.state.note === \"\") {\r\n      this.setState({\r\n        noteError: \"Need Note\"\r\n      });\r\n      return;\r\n    }\r\n    for (let i in this.state.allImageData) {\r\n      let item = this.state.allImageData[i];\r\n      if (item.filename === this.state.oilName) {\r\n        this.setState({\r\n          oilNameError: \"Oil Name Exist\"\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.setState({ loading: true });\r\n    let formdata = new FormData();\r\n    formdata.append(\"file\", this.state.file);\r\n    formdata.append(\"supplierName\", this.state.supplierName);\r\n    formdata.append(\"oilName\", this.state.oilName);\r\n    formdata.append(\"oilType\", this.state.oilType);\r\n    formdata.append(\"functionalSub\", this.state.functionalSub);\r\n    formdata.append(\"aromaticSub\", this.state.aromaticSub);\r\n    formdata.append(\"blendsWellWith\", this.state.blendsWellWith);\r\n    formdata.append(\"aromaticDescription\", this.state.aromaticDescription);\r\n    formdata.append(\"aromaType\", this.state.aromaType);\r\n    formdata.append(\"classifications\", this.state.classifications);\r\n    formdata.append(\"note\", this.state.note);\r\n\r\n    axios\r\n      .post(\"https://\" + host + \"/drop\", formdata, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.data === \"success\") {\r\n          this.setState({ activeModal: false });\r\n          this.getList();\r\n          this.setState({ loading: false });\r\n          console.log(res.data);\r\n        } else {\r\n          console.log(res.data);\r\n        }\r\n      });\r\n  };\r\n\r\n  handleEditImages = () => {\r\n    console.log(\r\n      this.state.file,\r\n      this.state.supplierName,\r\n      this.state.oilName,\r\n      this.state.oilType,\r\n      this.state.functionalSub,\r\n      this.state.aromaticSub,\r\n      this.state.blendsWellWith,\r\n      this.state.aromaticDescription,\r\n      this.state.aromaType,\r\n      this.state.classifications,\r\n      this.state.note\r\n    );\r\n    if (\r\n      this.state.file === null &&\r\n      this.state.supplierName === \"\" &&\r\n      this.state.oilName === \"\" &&\r\n      this.state.oilType === \"\" &&\r\n      this.state.aromaType === \"\" &&\r\n      this.state.classifications === \"\" &&\r\n      this.state.note === \"\"\r\n    ) {\r\n      this.setState({\r\n        fileError: \"Need Image\",\r\n        supplierNameError: \"Need Supplier Name\",\r\n        oilNameError: \"Need Oil Name\",\r\n        oilTypeError: \"Need Oil Type\",\r\n        aromaTypeError: \"Need Aroma Type\",\r\n        classificationsError: \"Need Classifications\",\r\n        noteError: \"Need Note\"\r\n      });\r\n      return;\r\n    } else if (this.state.supplierName === \"\") {\r\n      this.setState({\r\n        supplierNameError: \"Need Supplier Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.oilName === \"\") {\r\n      this.setState({\r\n        oilNameError: \"Need Oil Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.oilType === \"\") {\r\n      this.setState({\r\n        oilTypeError: \"Need Oil Type\"\r\n      });\r\n      return;\r\n    } else if (this.state.aromaType === \"\") {\r\n      this.setState({\r\n        aromaTypeError: \"Need Aroma Type\"\r\n      });\r\n      return;\r\n    } else if (this.state.classifications === \"\") {\r\n      this.setState({\r\n        classificationsError: \"Need Classifications\"\r\n      });\r\n      return;\r\n    } else if (this.state.note === \"\") {\r\n      this.setState({\r\n        noteError: \"Need Note\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (\r\n      !this.state.fileFlag &&\r\n      !this.state.oilNameFlag &&\r\n      !this.state.popularFlag\r\n    ) {\r\n      this.setState({ activeModal: false });\r\n      return;\r\n    }\r\n\r\n    if (this.state.fileFlag) {\r\n      this.setState({ loading: true });\r\n      let formdata = new FormData();\r\n      formdata.append(\"file\", this.state.file);\r\n      formdata.append(\"supplierName\", this.state.supplierName);\r\n      formdata.append(\"oilName\", this.state.oilName);\r\n      formdata.append(\"oilType\", this.state.oilType);\r\n      formdata.append(\"functionalSub\", this.state.functionalSub);\r\n      formdata.append(\"aromaticSub\", this.state.aromaticSub);\r\n      formdata.append(\"blendsWellWith\", this.state.blendsWellWith);\r\n      formdata.append(\"aromaticDescription\", this.state.aromaticDescription);\r\n      formdata.append(\"aromaType\", this.state.aromaType);\r\n      formdata.append(\"classifications\", this.state.classifications);\r\n      formdata.append(\"note\", this.state.note);\r\n      formdata.append(\"id\", this.state.id);\r\n      axios\r\n        .post(\"https://\" + host + \"/drop/editWithFile\", formdata, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\"\r\n          }\r\n        })\r\n        .then(res => {\r\n          if (res.data === \"success\") {\r\n            this.getList();\r\n            this.setState({\r\n              activeModal: false,\r\n              loading: false\r\n            });\r\n            console.log(res.data);\r\n          } else {\r\n            console.log(res.data);\r\n          }\r\n        });\r\n    } else {\r\n      if (this.state.oilNameFlag) {\r\n        this.setState({ loading: true });\r\n        axios\r\n          .post(\"https://\" + host + \"/drop/editWithoutFile\", {\r\n            id: this.state.id,\r\n            supplierName: this.state.supplierName,\r\n            oilName: this.state.oilName,\r\n            oilType: this.state.oilType,\r\n            functionalSub: this.state.functionalSub,\r\n            aromaticSub: this.state.aromaticSub,\r\n            blendsWellWith: this.state.blendsWellWith,\r\n            aromaticDescription: this.state.aromaticDescription,\r\n            aromaType: this.state.aromaType,\r\n            classifications: this.state.classifications,\r\n            note: this.state.note\r\n          })\r\n          .then(res => {\r\n            if (res.data === \"success\") {\r\n              this.getList();\r\n              this.setState({\r\n                activeModal: false,\r\n                loading: false\r\n              });\r\n              console.log(res.data);\r\n            } else {\r\n              console.log(res.data);\r\n            }\r\n          });\r\n      } else if (this.state.popularFlag) {\r\n        this.setState({ loading: true });\r\n        axios\r\n          .post(\"https://\" + host + \"/drop/editWithoutFile\", {\r\n            id: this.state.id,\r\n            supplierName: this.state.supplierName,\r\n            oilType: this.state.oilType,\r\n            functionalSub: this.state.functionalSub,\r\n            aromaticSub: this.state.aromaticSub,\r\n            blendsWellWith: this.state.blendsWellWith,\r\n            aromaticDescription: this.state.aromaticDescription,\r\n            aromaType: this.state.aromaType,\r\n            classifications: this.state.classifications,\r\n            note: this.state.note\r\n          })\r\n          .then(res => {\r\n            if (res.data === \"success\") {\r\n              this.getList();\r\n              this.setState({\r\n                activeModal: false,\r\n                loading: false\r\n              });\r\n              console.log(res.data);\r\n            } else {\r\n              console.log(res.data);\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const fileUpload =\r\n      this.state.fileURL === \"\" ? (\r\n        !this.state.file && <DropZone.FileUpload />\r\n      ) : (\r\n        <Stack>\r\n          <Thumbnail size=\"large\" alt=\"edit\" source={this.state.fileURL} />\r\n        </Stack>\r\n      );\r\n\r\n    const uploadedFile = this.state.file && (\r\n      <Stack>\r\n        <Thumbnail\r\n          size=\"large\"\r\n          alt={this.state.file.name}\r\n          source={\r\n            this.state.validImageTypes.indexOf(this.state.file.type) > 0\r\n              ? window.URL.createObjectURL(this.state.file)\r\n              : \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\r\n          }\r\n        />\r\n      </Stack>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Layout.Section>\r\n            <Card\r\n              title=\"Drop Images\"\r\n              actions={[\r\n                {\r\n                  content: \"Add Drop Image\",\r\n                  onAction: this.addNewImage\r\n                }\r\n              ]}\r\n            >\r\n              <Card.Section>\r\n                <TextStyle variation=\"subdued\">\r\n                  {this.state.listItemCount} Drop Images\r\n                </TextStyle>\r\n              </Card.Section>\r\n              <Card.Section>\r\n                <ResourceList\r\n                  resourceName={{ singular: \"image\", plural: \"images\" }}\r\n                  items={this.state.imageListItems}\r\n                  selectedItems={this.state.selectedListItems}\r\n                  onSelectionChange={this.setSelectedListItems}\r\n                  renderItem={item => {\r\n                    const {\r\n                      id,\r\n                      supplierName,\r\n                      media,\r\n                      oilName,\r\n                      oilType,\r\n                      functionalSub,\r\n                      aromaticSub,\r\n                      blendsWellWith,\r\n                      aromaticDescription,\r\n                      aromaType,\r\n                      classifications,\r\n                      note\r\n                    } = item;\r\n                    const shortcutActions = [\r\n                      {\r\n                        content: (\r\n                          <Icon source={EditMajorMonotone} color=\"red\" />\r\n                        ),\r\n                        onAction: () =>\r\n                          this.editImage(\r\n                            id,\r\n                            supplierName,\r\n                            media,\r\n                            oilName,\r\n                            oilType,\r\n                            functionalSub,\r\n                            aromaticSub,\r\n                            blendsWellWith,\r\n                            aromaticDescription,\r\n                            aromaType,\r\n                            classifications,\r\n                            note\r\n                          )\r\n                      },\r\n                      {\r\n                        content: (\r\n                          <Icon source={DeleteMajorMonotone} color=\"red\" />\r\n                        ),\r\n                        onAction: () => this.deleteImage(id)\r\n                      }\r\n                    ];\r\n\r\n                    return (\r\n                      <ResourceList.Item\r\n                        id={id}\r\n                        media={media}\r\n                        accessibilityLabel={`View details for ${name}`}\r\n                        shortcutActions={shortcutActions}\r\n                        persistActions\r\n                      >\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>\r\n                              Supplier Name:{\" \"}\r\n                            </span>\r\n                            {supplierName}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Oil Name: </span>\r\n                            {oilName}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Oil Type: </span>\r\n                            {oilType}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>\r\n                              Functional Sub:{\" \"}\r\n                            </span>\r\n                            {functionalSub}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Aromatic Sub: </span>\r\n                            {aromaticSub}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>\r\n                              Blends Well With:{\" \"}\r\n                            </span>\r\n                            {blendsWellWith}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>\r\n                              Aromatic Description:{\" \"}\r\n                            </span>\r\n                            {aromaticDescription}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Aroma Type: </span>\r\n                            {aromaType}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>\r\n                              Classifications:{\" \"}\r\n                            </span>\r\n                            {classifications}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Note: </span>\r\n                            {note}\r\n                          </TextStyle>\r\n                        </h3>\r\n                      </ResourceList.Item>\r\n                    );\r\n                  }}\r\n                />\r\n              </Card.Section>\r\n            </Card>\r\n          </Layout.Section>\r\n        </Layout>\r\n        <Modal\r\n          open={this.state.activeModal}\r\n          onClose={this.closeModal}\r\n          title=\"Add Image\"\r\n          primaryAction={this.state.modalAction}\r\n          style={{ padding: \"20px\" }}\r\n          loading={this.state.loading}\r\n        >\r\n          <Modal.Section>\r\n            <Stack alignment=\"center\">\r\n              <Stack.Item>\r\n                <div style={{ width: 100, height: 100 }}>\r\n                  <DropZone\r\n                    openFileDialog={this.state.openFileDialog}\r\n                    onDrop={this.handleDropZoneDrop}\r\n                    onFileDialogClose={this.toggleOpenFileDialog}\r\n                  >\r\n                    {fileUpload}\r\n                    {uploadedFile}\r\n                  </DropZone>\r\n                  <InlineError message={this.state.fileError} />\r\n                </div>\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Supplier Name\"\r\n                  value={this.state.supplierName}\r\n                  onChange={this.updateSupplierName}\r\n                  placeholder=\"Enter Supplier Name\"\r\n                  error={this.state.supplierNameError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Oil Name\"\r\n                  value={this.state.oilName}\r\n                  onChange={this.updateOilName}\r\n                  placeholder=\"Enter Oil Name\"\r\n                  error={this.state.oilNameError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Oil Type\"\r\n                  value={this.state.oilType}\r\n                  onChange={this.updateOilType}\r\n                  placeholder=\"Enter Oil Type\"\r\n                  error={this.state.oilTypeError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Functional Sub\"\r\n                  value={this.state.functionalSub}\r\n                  onChange={this.updateFunctionalSub}\r\n                  placeholder=\"Enter Functional Sub\"\r\n                  error={this.state.functionalSubError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Aromatic Sub\"\r\n                  value={this.state.aromaticSub}\r\n                  onChange={this.updateAromaticSub}\r\n                  placeholder=\"Enter Aromatic Sub\"\r\n                  error={this.state.aromaticSubError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Blends well with\"\r\n                  value={this.state.blendsWellWith}\r\n                  onChange={this.updateBlendWellWith}\r\n                  placeholder=\"Enter Blend well with\"\r\n                  error={this.state.blendWellWithError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Aromatic Descriptions\"\r\n                  value={this.state.aromaticDescription}\r\n                  onChange={this.updateAromaticDescription}\r\n                  placeholder=\"Enter Aromatic Description\"\r\n                  error={this.state.aromaticDescriptionError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Aroma Type\"\r\n                  value={this.state.aromaType}\r\n                  onChange={this.updateAromaType}\r\n                  placeholder=\"Enter Aroma Type\"\r\n                  error={this.state.aromaTypeError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Classifications\"\r\n                  value={this.state.classifications}\r\n                  onChange={this.updateClassifications}\r\n                  placeholder=\"Enter Classifications\"\r\n                  error={this.state.classificationsError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Note\"\r\n                  value={this.state.note}\r\n                  onChange={this.updateNote}\r\n                  placeholder=\"Enter Note\"\r\n                  error={this.state.noteError}\r\n                />\r\n              </Stack.Item>\r\n            </Stack>\r\n          </Modal.Section>\r\n        </Modal>\r\n        <Modal\r\n          open={this.state.activeDeleteModal}\r\n          onClose={this.handleDeleteModalChange}\r\n          title=\"Do you really want to delete?\"\r\n          loading={this.state.loading}\r\n          primaryAction={{\r\n            content: \"Yes\",\r\n            onAction: this.confirmDelete\r\n          }}\r\n          secondaryActions={{\r\n            content: \"No\",\r\n            onAction: () => {\r\n              this.setState({ activeDeleteModal: false });\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}