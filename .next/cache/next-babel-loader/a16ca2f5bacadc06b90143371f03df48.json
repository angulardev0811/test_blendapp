{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { Modal, Autocomplete, InlineError, Stack, DropZone, TextField, Layout, Card, TextStyle, ResourceList, Thumbnail } from \"@shopify/polaris\";\nexport default function Background() {\n  //Get Image Data\n  var _useState = useState(0),\n      flag = _useState[0],\n      setFlag = _useState[1];\n\n  var _useState2 = useState(0),\n      imageCount = _useState2[0],\n      setImageCount = _useState2[1];\n\n  var _useState3 = useState([]),\n      backgroundData = _useState3[0],\n      setBackgroundData = _useState3[1];\n\n  var _useState4 = useState([]),\n      backgroundCategory = _useState4[0],\n      setBackgroundCategory = _useState4[1];\n\n  var _useState5 = useState([]),\n      imageItems = _useState5[0],\n      setimageItems = _useState5[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var response, allCategorys, i, filterCategory, categoryArr, _i, item, imageItemsData, _i2, _item;\n\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              if (flag) {\n                _context.next = 19;\n                break;\n              }\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(axios.get('http://localhost:3000/background'));\n\n            case 4:\n              response = _context.sent;\n              setBackgroundData(response.data);\n              console.log(backgroundData);\n              allCategorys = [];\n\n              for (i in backgroundData) {\n                allCategorys.push(backgroundData[i].category);\n              }\n\n              filterCategory = allCategorys.filter(function (elem, index, self) {\n                return index === self.indexOf(elem);\n              });\n              categoryArr = [];\n\n              for (_i in filterCategory) {\n                item = filterCategory[_i];\n                categoryArr.push({\n                  value: item,\n                  label: item\n                });\n              }\n\n              console.log(categoryArr);\n              setBackgroundCategory(categoryArr);\n              imageItemsData = [];\n\n              for (_i2 in backgroundData) {\n                _item = backgroundData[_i2];\n                imageItemsData.push({\n                  id: _item._id,\n                  name: _item.filename,\n                  category: _item.category,\n                  media: __jsx(Thumbnail, {\n                    source: _item.filepath,\n                    alt: _item.filename\n                  })\n                });\n              }\n\n              setimageItems(imageItemsData);\n              setImageCount(imageItemsData.length);\n              setFlag(1);\n\n            case 19:\n              _context.next = 24;\n              break;\n\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"Axios request failed: \".concat(_context.t0));\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 21]], Promise);\n    }\n\n    fetchData();\n  }); // Modal\n\n  var _useState6 = useState(false),\n      activeModal = _useState6[0],\n      setActiveModal = _useState6[1];\n\n  var handleChange = useCallback(function () {\n    return setActiveModal(!activeModal);\n  }, [activeModal]); //Modal Upload File\n\n  var _useState7 = useState(false),\n      openFileDialog = _useState7[0],\n      setOpenFileDialog = _useState7[1];\n\n  var _useState8 = useState(),\n      file = _useState8[0],\n      setFile = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      imageError = _useState9[0],\n      setImageError = _useState9[1];\n\n  function handleImageError(txt) {\n    setImageError(txt);\n  }\n\n  var toggleOpenFileDialog = useCallback(function () {\n    return setOpenFileDialog(function (openFileDialog) {\n      return !openFileDialog;\n    });\n  }, []);\n  var validImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\n  var handleDropZoneDrop = useCallback(function (_dropFiles, acceptedFiles, _rejectedFiles) {\n    setFile(function (file) {\n      return acceptedFiles[0];\n    });\n    setImageError(\"\");\n  }, []);\n\n  var fileUpload = !file && __jsx(DropZone.FileUpload, null);\n\n  var uploadedFile = file && __jsx(Stack, null, __jsx(Thumbnail, {\n    size: \"large\",\n    alt: file.name,\n    source: validImageTypes.indexOf(file.type) > 0 ? window.URL.createObjectURL(file) : \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\n  })); //Modal Image Name\n\n\n  var _useState10 = useState(\"\"),\n      imageName = _useState10[0],\n      setimageName = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      imageNameError = _useState11[0],\n      setImageNameError = _useState11[1];\n\n  var handleImageName = useCallback(function (newValue) {\n    setimageName(newValue);\n    handleImageNameError(\"\");\n  }, []);\n\n  function handleImageNameError(txt) {\n    setImageNameError(txt);\n  } //Modal Category\n\n\n  var _useState12 = useState([]),\n      selectedOptions = _useState12[0],\n      setSelectedOptions = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      categoryValue = _useState13[0],\n      setCategoryValue = _useState13[1];\n\n  var _useState14 = useState(backgroundCategory),\n      options = _useState14[0],\n      setOptions = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      imageCategoryError = _useState15[0],\n      setCategoryError = _useState15[1];\n\n  function handleCategoryError(txt) {\n    setCategoryError(txt);\n  }\n\n  var updateText = useCallback(function (value) {\n    setCategoryValue(value);\n\n    if (value === \"\") {\n      setOptions(backgroundCategory);\n      return;\n    }\n\n    try {\n      var filterRegex = new RegExp(value, \"i\");\n      var resultOptions = backgroundCategory.filter(function (option) {\n        return option.label.match(filterRegex);\n      });\n      setOptions(resultOptions);\n    } catch (err) {\n      console.log(err.message);\n    }\n\n    setCategoryError(\"\");\n  }, [backgroundCategory]);\n  var updateSelection = useCallback(function (selected) {\n    updateText(selected[0]);\n    setSelectedOptions(selected);\n    setCategoryValue(selected[0]);\n  }, []);\n\n  var textField = __jsx(Autocomplete.TextField, {\n    onChange: updateText,\n    label: \"Image Category\",\n    value: categoryValue,\n    placeholder: \"Enter category\",\n    error: imageCategoryError\n  }); //Submit Image Data\n\n\n  var handleImages = function handleImages() {\n    if (file === undefined && imageName === \"\" && categoryValue === \"\") {\n      handleImageError(\"Need Image\");\n      handleImageNameError(\"Need Image Name\");\n      handleCategoryError(\"Need Category\");\n      return;\n    } else if (file === undefined && imageName === \"\") {\n      handleImageError(\"Need Image\");\n      handleImageNameError(\"Need Image Name\");\n    } else if (file === undefined && categoryValue === \"\") {\n      handleImageError(\"Need Image\");\n      handleCategoryError(\"Need Category\");\n    } else if (imageName === \"\" && categoryValue === \"\") {\n      handleImageNameError(\"Need Image Name\");\n      handleCategoryError(\"Need Category\");\n    } else if (file === undefined) {\n      handleImageError(\"Need Image\");\n      return;\n    } else if (imageName === \"\") {\n      handleImageNameError(\"Need Image Name\");\n      return;\n    } else if (categoryValue === \"\") {\n      handleCategoryError(\"Need Category\");\n      return;\n    }\n\n    for (var i in backgroundData) {\n      var item = backgroundData[i]; // console.log(item)\n\n      if (item.filename === imageName) {\n        handleImageNameError(\"Image Name Exist\");\n        return;\n      }\n    }\n\n    var formdata = new FormData();\n    formdata.append(\"file\", file);\n    formdata.append(\"filename\", imageName);\n    formdata.append(\"category\", categoryValue);\n    axios.post(\"http://localhost:3000/background\", formdata, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(function (res) {\n      if (res.data === \"success\") {\n        setFlag(0);\n        setActiveModal(false);\n        setFile();\n        setimageName('');\n        setCategoryValue('');\n        console.log(res.data);\n      } else {\n        console.log(res.data);\n      }\n    });\n  };\n\n  return __jsx(\"div\", null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"Background Images\",\n    actions: [{\n      content: \"Add Background Image\",\n      onAction: handleChange\n    }]\n  }, __jsx(Card.Section, null, __jsx(TextStyle, {\n    variation: \"subdued\"\n  }, \"Total \", imageCount, \" Images\")), __jsx(Card.Section, {\n    title: \"Items\"\n  }, __jsx(ResourceList, {\n    resourceName: {\n      singular: \"image\",\n      plural: \"images\"\n    },\n    items: imageItems,\n    renderItem: function renderItem(item) {\n      var id = item.id,\n          name = item.name,\n          media = item.media,\n          category = item.category;\n      return __jsx(ResourceList.Item, {\n        id: id,\n        media: media,\n        accessibilityLabel: \"View details for \".concat(name)\n      }, __jsx(\"h3\", null, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, __jsx(\"span\", {\n        style: {\n          fontSize: 12\n        }\n      }, \"Name: \"), name)), __jsx(\"h3\", null, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, __jsx(\"span\", {\n        style: {\n          fontSize: 12\n        }\n      }, \"Category: \"), category)));\n    }\n  }))))), __jsx(Modal, {\n    open: activeModal,\n    onClose: handleChange,\n    title: \"Add Image\",\n    primaryAction: {\n      content: \"Add\",\n      onAction: handleImages\n    },\n    style: {\n      padding: \"20px\"\n    }\n  }, __jsx(Modal.Section, null, __jsx(Stack, {\n    alignment: \"center\"\n  }, __jsx(Stack.Item, null, __jsx(\"div\", {\n    style: {\n      width: 100,\n      height: 100\n    }\n  }, __jsx(DropZone, {\n    openFileDialog: openFileDialog,\n    onDrop: handleDropZoneDrop,\n    onFileDialogClose: toggleOpenFileDialog\n  }, fileUpload, uploadedFile), __jsx(InlineError, {\n    message: imageError\n  }))), __jsx(Stack.Item, null, __jsx(TextField, {\n    label: \"Image Name\",\n    value: imageName,\n    onChange: handleImageName,\n    placeholder: \"Enter image name\",\n    error: imageNameError\n  })), __jsx(Stack.Item, null, __jsx(Autocomplete, {\n    options: options,\n    selected: selectedOptions,\n    onSelect: updateSelection,\n    textField: textField\n  }))))));\n}","map":{"version":3,"sources":["E:/Lenny/blendapp/pages/index.js"],"names":["React","useCallback","useState","useEffect","useRef","axios","Modal","Autocomplete","InlineError","Stack","DropZone","TextField","Layout","Card","TextStyle","ResourceList","Thumbnail","Background","flag","setFlag","imageCount","setImageCount","backgroundData","setBackgroundData","backgroundCategory","setBackgroundCategory","imageItems","setimageItems","fetchData","get","response","data","console","log","allCategorys","i","push","category","filterCategory","filter","elem","index","self","indexOf","categoryArr","item","value","label","imageItemsData","id","_id","name","filename","media","filepath","length","activeModal","setActiveModal","handleChange","openFileDialog","setOpenFileDialog","file","setFile","imageError","setImageError","handleImageError","txt","toggleOpenFileDialog","validImageTypes","handleDropZoneDrop","_dropFiles","acceptedFiles","_rejectedFiles","fileUpload","uploadedFile","type","window","URL","createObjectURL","imageName","setimageName","imageNameError","setImageNameError","handleImageName","newValue","handleImageNameError","selectedOptions","setSelectedOptions","categoryValue","setCategoryValue","options","setOptions","imageCategoryError","setCategoryError","handleCategoryError","updateText","filterRegex","RegExp","resultOptions","option","match","err","message","updateSelection","selected","textField","handleImages","undefined","formdata","FormData","append","post","headers","then","res","content","onAction","singular","plural","fontSize","padding","width","height"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Modal,\r\n  Autocomplete,\r\n  InlineError,\r\n  Stack,\r\n  DropZone,\r\n  TextField,\r\n  Layout,\r\n  Card,\r\n  TextStyle,\r\n  ResourceList,\r\n  Thumbnail\r\n} from \"@shopify/polaris\";\r\n\r\nexport default function Background() {\r\n\r\n  //Get Image Data\r\n  const [flag, setFlag] = useState(0)\r\n  const [imageCount, setImageCount] = useState(0)\r\n  const [backgroundData, setBackgroundData] = useState([])\r\n  const [backgroundCategory, setBackgroundCategory] = useState([])\r\n  const [imageItems, setimageItems] = useState([])\r\n  \r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        if (!flag) {\r\n          let response = await axios.get('http://localhost:3000/background');\r\n          setBackgroundData(response.data);\r\n          console.log(backgroundData)\r\n          let allCategorys = [];\r\n          for (let i in backgroundData) {\r\n            allCategorys.push(backgroundData[i].category);\r\n          }\r\n          let filterCategory = allCategorys.filter(function(elem, index, self) {\r\n            return index === self.indexOf(elem)\r\n          });\r\n          let categoryArr = []\r\n          for(let i in filterCategory) {\r\n            let item = filterCategory[i];\r\n            categoryArr.push({\r\n              value: item,\r\n              label: item\r\n            })\r\n          }\r\n          console.log(categoryArr)\r\n          setBackgroundCategory(categoryArr)\r\n          let imageItemsData=[];\r\n          for (let i in backgroundData) {\r\n            let item = backgroundData[i];\r\n            imageItemsData.push({\r\n              id: item._id,\r\n              name: item.filename,\r\n              category: item.category,\r\n              media: <Thumbnail source={item.filepath} alt={item.filename} />\r\n            });\r\n          }\r\n          setimageItems(imageItemsData);\r\n          setImageCount(imageItemsData.length)\r\n          setFlag(1);\r\n        }\r\n      } catch (e) {\r\n        console.log(`Axios request failed: ${e}`);\r\n      }\r\n    }\r\n    fetchData();\r\n  });\r\n  \r\n  // Modal\r\n  const [activeModal, setActiveModal] = useState(false);\r\n  const handleChange = useCallback(() => setActiveModal(!activeModal), [\r\n    activeModal\r\n  ]);\r\n\r\n  //Modal Upload File\r\n  const [openFileDialog, setOpenFileDialog] = useState(false);\r\n  const [file, setFile] = useState();\r\n  const [imageError, setImageError] = useState(\"\");\r\n  function handleImageError(txt) {\r\n    setImageError(txt);\r\n  }\r\n  const toggleOpenFileDialog = useCallback(\r\n    () => setOpenFileDialog(openFileDialog => !openFileDialog),\r\n    []\r\n  );\r\n  const validImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\r\n  const handleDropZoneDrop = useCallback(\r\n    (_dropFiles, acceptedFiles, _rejectedFiles) => {\r\n      setFile(file => acceptedFiles[0]);\r\n      setImageError(\"\");\r\n    },\r\n    []\r\n  );\r\n  const fileUpload = !file && <DropZone.FileUpload />;\r\n  const uploadedFile = file && (\r\n    <Stack>\r\n      <Thumbnail\r\n        size=\"large\"\r\n        alt={file.name}\r\n        source={\r\n          validImageTypes.indexOf(file.type) > 0\r\n            ? window.URL.createObjectURL(file)\r\n            : \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\r\n        }\r\n      />\r\n    </Stack>\r\n  );\r\n\r\n  //Modal Image Name\r\n  const [imageName, setimageName] = useState(\"\");\r\n  const [imageNameError, setImageNameError] = useState(\"\");\r\n  const handleImageName = useCallback(newValue => {\r\n    setimageName(newValue);\r\n    handleImageNameError(\"\");\r\n  }, []);\r\n  function handleImageNameError(txt) {\r\n    setImageNameError(txt);\r\n  }\r\n\r\n  //Modal Category\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [categoryValue, setCategoryValue] = useState(\"\");\r\n  const [options, setOptions] = useState(backgroundCategory);\r\n  const [imageCategoryError, setCategoryError] = useState(\"\");\r\n\r\n  function handleCategoryError(txt) {\r\n    setCategoryError(txt);\r\n  }\r\n  const updateText = useCallback(\r\n    value => {\r\n      setCategoryValue(value);\r\n      if (value === \"\") {\r\n        setOptions(backgroundCategory);\r\n        return;\r\n      }\r\n      try {\r\n        const filterRegex = new RegExp(value, \"i\");\r\n        const resultOptions = backgroundCategory.filter(option =>\r\n          option.label.match(filterRegex)\r\n        );\r\n        setOptions(resultOptions);\r\n      }\r\n      catch(err) {\r\n        console.log(err.message);\r\n      }\r\n      setCategoryError(\"\");\r\n    },\r\n    [backgroundCategory]\r\n  );\r\n\r\n  const updateSelection = useCallback(selected => {\r\n    updateText(selected[0]);\r\n    setSelectedOptions(selected);\r\n    setCategoryValue(selected[0]);\r\n  }, []);\r\n\r\n  const textField = (\r\n    <Autocomplete.TextField\r\n      onChange={updateText}\r\n      label=\"Image Category\"\r\n      value={categoryValue}\r\n      placeholder=\"Enter category\"\r\n      error={imageCategoryError}\r\n    />\r\n  );\r\n\r\n  //Submit Image Data\r\n  const handleImages = () => {\r\n    if (file === undefined && imageName === \"\" && categoryValue === \"\") {\r\n      handleImageError(\"Need Image\");\r\n      handleImageNameError(\"Need Image Name\");\r\n      handleCategoryError(\"Need Category\");\r\n      return;\r\n    } else if (file === undefined && imageName === \"\") {\r\n      handleImageError(\"Need Image\");\r\n      handleImageNameError(\"Need Image Name\");\r\n    } else if (file === undefined && categoryValue === \"\") {\r\n      handleImageError(\"Need Image\");\r\n      handleCategoryError(\"Need Category\");\r\n    } else if (imageName === \"\" && categoryValue === \"\") {\r\n      handleImageNameError(\"Need Image Name\");\r\n      handleCategoryError(\"Need Category\");\r\n    } else if (file === undefined) {\r\n      handleImageError(\"Need Image\");\r\n      return;\r\n    } else if (imageName === \"\") {\r\n      handleImageNameError(\"Need Image Name\");\r\n      return;\r\n    } else if (categoryValue === \"\") {\r\n      handleCategoryError(\"Need Category\");\r\n      return;\r\n    }\r\n  \r\n    for (let i in backgroundData) {\r\n      let item = backgroundData[i];\r\n      // console.log(item)\r\n      if(item.filename === imageName){\r\n        handleImageNameError(\"Image Name Exist\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    let formdata = new FormData();\r\n    formdata.append(\"file\", file);\r\n    formdata.append(\"filename\", imageName);\r\n    formdata.append(\"category\", categoryValue);\r\n    axios\r\n      .post(\"http://localhost:3000/background\", formdata, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.data === \"success\") {\r\n          setFlag(0)\r\n          setActiveModal(false);\r\n          setFile();\r\n          setimageName('');\r\n          setCategoryValue('');\r\n          console.log(res.data)\r\n        } else {\r\n          console.log(res.data);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Layout>\r\n        <Layout.Section>\r\n          <Card\r\n            title=\"Background Images\"\r\n            actions={[\r\n              {\r\n                content: \"Add Background Image\",\r\n                onAction: handleChange\r\n              }\r\n            ]}\r\n          >\r\n            <Card.Section>\r\n              <TextStyle variation=\"subdued\">Total {imageCount} Images</TextStyle>\r\n            </Card.Section>\r\n            <Card.Section title=\"Items\">\r\n              <ResourceList\r\n                resourceName={{ singular: \"image\", plural: \"images\" }}\r\n                items={imageItems}\r\n                renderItem={item => {\r\n                  const { id, name, media, category } = item;\r\n\r\n                  return (\r\n                    <ResourceList.Item\r\n                      id={id}\r\n                      media={media}\r\n                      accessibilityLabel={`View details for ${name}`}\r\n                    >\r\n                      <h3>\r\n                        <TextStyle variation=\"strong\">\r\n                          <span style={{ fontSize: 12 }}>Name: </span>\r\n                          {name}\r\n                        </TextStyle>\r\n                      </h3>\r\n                      <h3>\r\n                        <TextStyle variation=\"strong\">\r\n                          <span style={{ fontSize: 12 }}>Category: </span>\r\n                          {category}\r\n                        </TextStyle>\r\n                      </h3>\r\n                    </ResourceList.Item>\r\n                  );\r\n                }}\r\n              />\r\n            </Card.Section>\r\n          </Card>\r\n        </Layout.Section>\r\n      </Layout>\r\n      <Modal\r\n        open={activeModal}\r\n        onClose={handleChange}\r\n        title=\"Add Image\"\r\n        primaryAction={{\r\n          content: \"Add\",\r\n          onAction: handleImages\r\n        }}\r\n        style={{ padding: \"20px\" }}\r\n      >\r\n        <Modal.Section>\r\n          <Stack alignment=\"center\">\r\n            <Stack.Item>\r\n              <div style={{ width: 100, height: 100 }}>\r\n                <DropZone\r\n                  openFileDialog={openFileDialog}\r\n                  onDrop={handleDropZoneDrop}\r\n                  onFileDialogClose={toggleOpenFileDialog}\r\n                >\r\n                  {fileUpload}\r\n                  {uploadedFile}\r\n                </DropZone>\r\n                <InlineError message={imageError} />\r\n              </div>\r\n            </Stack.Item>\r\n            <Stack.Item>\r\n              <TextField\r\n                label=\"Image Name\"\r\n                value={imageName}\r\n                onChange={handleImageName}\r\n                placeholder=\"Enter image name\"\r\n                error={imageNameError}\r\n              />\r\n            </Stack.Item>\r\n            <Stack.Item>\r\n              <Autocomplete\r\n                options={options}\r\n                selected={selectedOptions}\r\n                onSelect={updateSelection}\r\n                textField={textField}\r\n              />\r\n            </Stack.Item>\r\n          </Stack>\r\n        </Modal.Section>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}