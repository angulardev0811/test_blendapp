{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Layout, Card, ResourceList, TextStyle, Icon, Thumbnail, Modal, Stack, DropZone, InlineError, TextField } from \"@shopify/polaris\";\nimport { DeleteMajorMonotone, EditMajorMonotone } from \"@shopify/polaris-icons\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getList\", async () => {\n      try {\n        let response = await axios.get(\"https://\" + host + \"/drop\");\n        this.setState({\n          allImageData: response.data\n        });\n        let allImageData = response.data;\n        let imageListItemsData = [];\n\n        for (let i in allImageData) {\n          let item = allImageData[i];\n          imageListItemsData.push({\n            id: item._id,\n            supplierName: item.supplierName,\n            oilName: item.oilName,\n            oilType: item.oilType,\n            functionalSub: item.functionalSub,\n            aromaticSub: item.aromaticSub,\n            blendsWellWith: item.blendsWellWith,\n            aromaticDescription: item.aromaticDescription,\n            aromaType: item.aromaType,\n            classifications: item.classifications,\n            note: item.note,\n            media: __jsx(Thumbnail, {\n              source: item.filepath,\n              alt: item.filename\n            })\n          });\n        }\n\n        this.setState({\n          imageListItems: imageListItemsData,\n          listItemCount: imageListItemsData.length\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    _defineProperty(this, \"addNewImage\", () => {\n      this.setState({\n        activeModal: true,\n        file: null,\n        fileURL: \"\",\n        supplierName: \"\",\n        oilName: \"\",\n        oilType: \"\",\n        functionalSub: \"\",\n        aromaticSub: \"\",\n        blendsWellWith: \"\",\n        aromaticDescription: \"\",\n        aromaType: \"\",\n        classifications: \"\",\n        note: \"\",\n        fileError: \"\",\n        supplierNameError: \"\",\n        oilNameError: \"\",\n        oilTypeError: \"\",\n        functionalSubError: \"\",\n        aromaticSubError: \"\",\n        blendWellWithError: \"\",\n        aromaticDescriptionError: \"\",\n        aromaTypeError: \"\",\n        classificationsError: \"\",\n        noteError: \"\",\n        modalAction: {\n          content: \"Add\",\n          onAction: this.handleAddImages\n        }\n      });\n    });\n\n    _defineProperty(this, \"setSelectedListItems\", items => {\n      console.log(items);\n    });\n\n    _defineProperty(this, \"editImage\", (id, supplierName, media, oilName, oilType, functionalSub, aromaticSub, blendsWellWith, aromaticDescription, aromaType, classifications, note) => {\n      console.log(id, supplierName, media, oilName, oilType, functionalSub, aromaticSub, blendsWellWith, aromaticDescription, aromaType, classifications, note);\n      this.setState({\n        modalAction: {\n          content: \"Save\",\n          onAction: this.handleEditImages\n        },\n        fileError: \"\",\n        supplierNameError: \"\",\n        oilNameError: \"\",\n        oilTypeError: \"\",\n        functionalSubError: \"\",\n        aromaticSubError: \"\",\n        blendWellWithError: \"\",\n        aromaticDescriptionError: \"\",\n        aromaTypeError: \"\",\n        classificationsError: \"\",\n        noteError: \"\",\n        id: id,\n        file: null,\n        fileURL: media.props.source,\n        supplierName: supplierName,\n        oilName: oilName,\n        oilType: oilType,\n        functionalSub: functionalSub,\n        aromaticSub: aromaticSub,\n        blendsWellWith: blendsWellWith,\n        aromaticDescription: aromaticDescription,\n        aromaType: aromaType,\n        classifications: classifications,\n        note: note,\n        activeModal: true,\n        fileFlag: false\n      });\n    });\n\n    _defineProperty(this, \"deleteImage\", id => {\n      this.setState({\n        id: id,\n        activeDeleteModal: true\n      });\n      console.log(id);\n    });\n\n    _defineProperty(this, \"confirmDelete\", async () => {\n      this.setState({\n        loading: true\n      });\n      let response = await axios.get(`https://${host}/drop/deleteImage?id=${this.state.id}`);\n      console.log(response.data);\n\n      if (response.data === \"success\") {\n        this.getList();\n        this.setState({\n          loading: false,\n          activeDeleteModal: false\n        });\n      } else {\n        console.log(response.data);\n      }\n    });\n\n    _defineProperty(this, \"closeModal\", () => {\n      this.setState({\n        activeModal: false\n      });\n    });\n\n    _defineProperty(this, \"handleDropZoneDrop\", (_dropFiles, acceptedFiles, _rejectedFiles) => {\n      this.setState({\n        file: acceptedFiles[0],\n        fileError: \"\",\n        fileFlag: true,\n        fileURL: \"\"\n      });\n    });\n\n    _defineProperty(this, \"toggleOpenFileDialog\", () => {\n      this.setState({\n        openFileDialog: !this.state.openFileDialog\n      });\n      console.log(\"toggle\");\n    });\n\n    _defineProperty(this, \"updateSupplierName\", value => {\n      if (this.state.supplierName !== value) this.setState({\n        popularFlag: true\n      });\n      this.setState({\n        supplierName: value,\n        supplierNameError: \"\"\n      });\n    });\n\n    _defineProperty(this, \"updateOilName\", value => {\n      if (this.state.oilName !== value) this.setState({\n        oilNameFlag: true\n      });\n      this.setState({\n        oilName: value,\n        oilNameError: \"\"\n      });\n    });\n\n    _defineProperty(this, \"updateOilType\", value => {\n      if (this.state.oilType !== value) this.setState({\n        popularFlag: true\n      });\n      this.setState({\n        oilType: value,\n        oilTypeError: \"\"\n      });\n    });\n\n    _defineProperty(this, \"updateFunctionalSub\", value => {\n      console.log(\"pre:\" + this.state.functionalSub + \"new:\" + value);\n      if (this.state.functionalSub !== value) this.setState({\n        popularFlag: true\n      });\n      this.setState({\n        functionalSub: value,\n        functionalSubError: \"\"\n      });\n    });\n\n    _defineProperty(this, \"updateAromaticSub\", value => {\n      if (this.state.aromaticSub !== value) this.setState({\n        popularFlag: true\n      });\n      this.setState({\n        aromaticSub: value,\n        aromaticSubError: \"\"\n      });\n    });\n\n    _defineProperty(this, \"updateBlendWellWith\", value => {\n      if (this.state.blendsWellWith !== value) this.setState({\n        popularFlag: true\n      });\n      this.setState({\n        blendsWellWith: value,\n        blendWellWithError: \"\"\n      });\n    });\n\n    _defineProperty(this, \"updateAromaticDescription\", value => {\n      if (this.state.aromaticDescription !== value) this.setState({\n        popularFlag: true\n      });\n      this.setState({\n        aromaticDescription: value,\n        aromaticDescriptionError: \"\"\n      });\n    });\n\n    _defineProperty(this, \"updateAromaType\", value => {\n      if (this.state.aromaType !== value) this.setState({\n        popularFlag: true\n      });\n      this.setState({\n        aromaType: value,\n        aromaTypeError: \"\"\n      });\n    });\n\n    _defineProperty(this, \"updateClassifications\", value => {\n      if (this.state.classifications !== value) this.setState({\n        popularFlag: true\n      });\n      this.setState({\n        classifications: value,\n        classificationsError: \"\"\n      });\n    });\n\n    _defineProperty(this, \"updateNote\", value => {\n      if (this.state.note !== value) this.setState({\n        popularFlag: true\n      });\n      this.setState({\n        note: value,\n        noteError: \"\"\n      });\n    });\n\n    _defineProperty(this, \"handleAddImages\", () => {\n      if (this.state.file === null && this.state.supplierName === \"\" && this.state.oilName === \"\" && this.state.oilType === \"\" && this.state.aromaType === \"\" && this.state.classifications === \"\" && this.state.note === \"\") {\n        this.setState({\n          fileError: \"Need Image\",\n          supplierNameError: \"Need Supplier Name\",\n          oilNameError: \"Need Oil Name\",\n          oilTypeError: \"Need Oil Type\",\n          aromaTypeError: \"Need Aroma Type\",\n          classificationsError: \"Need Classifications\",\n          noteError: \"Need Note\"\n        });\n        return;\n      } else if (this.state.file === null) {\n        this.setState({\n          fileError: \"Need Image\"\n        });\n        return;\n      } else if (this.state.supplierName === \"\") {\n        this.setState({\n          supplierNameError: \"Need Supplier Name\"\n        });\n        return;\n      } else if (this.state.oilName === \"\") {\n        this.setState({\n          oilNameError: \"Need Oil Name\"\n        });\n        return;\n      } else if (this.state.oilType === \"\") {\n        this.setState({\n          oilTypeError: \"Need Oil Type\"\n        });\n        return;\n      } else if (this.state.aromaType === \"\") {\n        this.setState({\n          aromaTypeError: \"Need Aroma Type\"\n        });\n        return;\n      } else if (this.state.classifications === \"\") {\n        this.setState({\n          classificationsError: \"Need Classifications\"\n        });\n        return;\n      } else if (this.state.note === \"\") {\n        this.setState({\n          noteError: \"Need Note\"\n        });\n        return;\n      }\n\n      for (let i in this.state.allImageData) {\n        let item = this.state.allImageData[i];\n\n        if (item.filename === this.state.oilName) {\n          this.setState({\n            oilNameError: \"Oil Name Exist\"\n          });\n          return;\n        }\n      }\n\n      this.setState({\n        loading: true\n      });\n      let formdata = new FormData();\n      formdata.append(\"file\", this.state.file);\n      formdata.append(\"supplierName\", this.state.supplierName);\n      formdata.append(\"oilName\", this.state.oilName);\n      formdata.append(\"oilType\", this.state.oilType);\n      formdata.append(\"functionalSub\", this.state.functionalSub);\n      formdata.append(\"aromaticSub\", this.state.aromaticSub);\n      formdata.append(\"blendsWellWith\", this.state.blendsWellWith);\n      formdata.append(\"aromaticDescription\", this.state.aromaticDescription);\n      formdata.append(\"aromaType\", this.state.aromaType);\n      formdata.append(\"classifications\", this.state.classifications);\n      formdata.append(\"note\", this.state.note);\n      axios.post(\"https://\" + host + \"/drop\", formdata, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        if (res.data === \"success\") {\n          this.setState({\n            activeModal: false\n          });\n          this.getList();\n          this.setState({\n            loading: false\n          });\n          console.log(res.data);\n        } else {\n          console.log(res.data);\n        }\n      });\n    });\n\n    _defineProperty(this, \"handleEditImages\", () => {\n      console.log(this.state.file, this.state.supplierName, this.state.oilName, this.state.oilType, this.state.functionalSub, this.state.aromaticSub, this.state.blendsWellWith, this.state.aromaticDescription, this.state.aromaType, this.state.classifications, this.state.note);\n\n      if (this.state.file === null && this.state.supplierName === \"\" && this.state.oilName === \"\" && this.state.oilType === \"\" && this.state.aromaType === \"\" && this.state.classifications === \"\" && this.state.note === \"\") {\n        this.setState({\n          fileError: \"Need Image\",\n          supplierNameError: \"Need Supplier Name\",\n          oilNameError: \"Need Oil Name\",\n          oilTypeError: \"Need Oil Type\",\n          aromaTypeError: \"Need Aroma Type\",\n          classificationsError: \"Need Classifications\",\n          noteError: \"Need Note\"\n        });\n        return;\n      } else if (this.state.supplierName === \"\") {\n        this.setState({\n          supplierNameError: \"Need Supplier Name\"\n        });\n        return;\n      } else if (this.state.oilName === \"\") {\n        this.setState({\n          oilNameError: \"Need Oil Name\"\n        });\n        return;\n      } else if (this.state.oilType === \"\") {\n        this.setState({\n          oilTypeError: \"Need Oil Type\"\n        });\n        return;\n      } else if (this.state.aromaType === \"\") {\n        this.setState({\n          aromaTypeError: \"Need Aroma Type\"\n        });\n        return;\n      } else if (this.state.classifications === \"\") {\n        this.setState({\n          classificationsError: \"Need Classifications\"\n        });\n        return;\n      } else if (this.state.note === \"\") {\n        this.setState({\n          noteError: \"Need Note\"\n        });\n        return;\n      }\n\n      if (!this.state.fileFlag && !this.state.oilNameFlag && !this.state.popularFlag) {\n        this.setState({\n          activeModal: false\n        });\n        return;\n      }\n\n      if (this.state.fileFlag) {\n        this.setState({\n          loading: true\n        });\n        let formdata = new FormData();\n        formdata.append(\"file\", this.state.file);\n        formdata.append(\"supplierName\", this.state.supplierName);\n        formdata.append(\"oilName\", this.state.oilName);\n        formdata.append(\"oilType\", this.state.oilType);\n        formdata.append(\"functionalSub\", this.state.functionalSub);\n        formdata.append(\"aromaticSub\", this.state.aromaticSub);\n        formdata.append(\"blendsWellWith\", this.state.blendsWellWith);\n        formdata.append(\"aromaticDescription\", this.state.aromaticDescription);\n        formdata.append(\"aromaType\", this.state.aromaType);\n        formdata.append(\"classifications\", this.state.classifications);\n        formdata.append(\"note\", this.state.note);\n        formdata.append(\"id\", this.state.id);\n        axios.post(\"https://\" + host + \"/drop/editWithFile\", formdata, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        }).then(res => {\n          if (res.data === \"success\") {\n            this.getList();\n            this.setState({\n              activeModal: false,\n              loading: false\n            });\n            console.log(res.data);\n          } else {\n            console.log(res.data);\n          }\n        });\n      } else {\n        if (this.state.oilNameFlag) {\n          this.setState({\n            loading: true\n          });\n          axios.post(\"https://\" + host + \"/drop/editWithoutFile\", {\n            id: this.state.id,\n            supplierName: this.state.supplierName,\n            oilName: this.state.oilName,\n            oilType: this.state.oilType,\n            functionalSub: this.state.functionalSub,\n            aromaticSub: this.state.aromaticSub,\n            blendsWellWith: this.state.blendsWellWith,\n            aromaticDescription: this.state.aromaticDescription,\n            aromaType: this.state.aromaType,\n            classifications: this.state.classifications,\n            note: this.state.note\n          }).then(res => {\n            if (res.data === \"success\") {\n              this.getList();\n              this.setState({\n                activeModal: false,\n                loading: false\n              });\n              console.log(res.data);\n            } else {\n              console.log(res.data);\n            }\n          });\n        } else if (this.state.popularFlag) {\n          this.setState({\n            loading: true\n          });\n          axios.post(\"https://\" + host + \"/drop/editWithoutFile\", {\n            id: this.state.id,\n            supplierName: this.state.supplierName,\n            oilType: this.state.oilType,\n            functionalSub: this.state.functionalSub,\n            aromaticSub: this.state.aromaticSub,\n            blendsWellWith: this.state.blendsWellWith,\n            aromaticDescription: this.state.aromaticDescription,\n            aromaType: this.state.aromaType,\n            classifications: this.state.classifications,\n            note: this.state.note\n          }).then(res => {\n            if (res.data === \"success\") {\n              this.getList();\n              this.setState({\n                activeModal: false,\n                loading: false\n              });\n              console.log(res.data);\n            } else {\n              console.log(res.data);\n            }\n          });\n        }\n      }\n    });\n\n    this.state = {\n      allImageData: [],\n      listItemCount: 0,\n      imageListItems: [],\n      selectedListItems: [],\n      activeModal: false,\n      modalAction: {\n        content: \"Add\",\n        onAction: this.handleAddImages\n      },\n      loading: false,\n      file: null,\n      validImageTypes: [\"image/gif\", \"image/jpeg\", \"image/png\"],\n      openFileDialog: false,\n      fileUpload: \"\",\n      uploadedFile: \"\",\n      fileError: \"\",\n      id: \"\",\n      fileURL: \"\",\n      fileFlag: false,\n      oilNameFlag: false,\n      popularFlag: false,\n      activeDeleteModal: false,\n      supplierName: \"\",\n      oilName: \"\",\n      oilType: \"\",\n      functionalSub: \"\",\n      aromaticSub: \"\",\n      blendsWellWith: \"\",\n      aromaticDescription: \"\",\n      aromaType: \"\",\n      classifications: \"\",\n      note: \"\",\n      supplierNameError: \"\",\n      oilNameError: \"\",\n      oilTypeError: \"\",\n      functionalSubError: \"\",\n      aromaticSubError: \"\",\n      blendWellWithError: \"\",\n      aromaticDescriptionError: \"\",\n      aromaTypeError: \"\",\n      classificationsError: \"\",\n      noteError: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    this.getList();\n  }\n\n  render() {\n    const fileUpload = this.state.fileURL === \"\" ? !this.state.file && __jsx(DropZone.FileUpload, null) : __jsx(Stack, null, __jsx(Thumbnail, {\n      size: \"large\",\n      alt: \"edit\",\n      source: this.state.fileURL\n    }));\n\n    const uploadedFile = this.state.file && __jsx(Stack, null, __jsx(Thumbnail, {\n      size: \"large\",\n      alt: this.state.file.name,\n      source: this.state.validImageTypes.indexOf(this.state.file.type) > 0 ? window.URL.createObjectURL(this.state.file) : \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\n    }));\n\n    return __jsx(\"div\", null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n      title: \"Drop Images\",\n      actions: [{\n        content: \"Add Drop Image\",\n        onAction: this.addNewImage\n      }]\n    }, __jsx(Card.Section, null, __jsx(TextStyle, {\n      variation: \"subdued\"\n    }, this.state.listItemCount, \" Drop Images\")), __jsx(Card.Section, null, __jsx(ResourceList, {\n      resourceName: {\n        singular: \"image\",\n        plural: \"images\"\n      },\n      items: this.state.imageListItems,\n      selectedItems: this.state.selectedListItems,\n      onSelectionChange: this.setSelectedListItems,\n      renderItem: item => {\n        const {\n          id,\n          supplierName,\n          media,\n          oilName,\n          oilType,\n          functionalSub,\n          aromaticSub,\n          blendsWellWith,\n          aromaticDescription,\n          aromaType,\n          classifications,\n          note\n        } = item;\n        const shortcutActions = [{\n          content: __jsx(Icon, {\n            source: EditMajorMonotone,\n            color: \"red\"\n          }),\n          onAction: () => this.editImage(id, supplierName, media, oilName, oilType, functionalSub, aromaticSub, blendsWellWith, aromaticDescription, aromaType, classifications, note)\n        }, {\n          content: __jsx(Icon, {\n            source: DeleteMajorMonotone,\n            color: \"red\"\n          }),\n          onAction: () => this.deleteImage(id)\n        }];\n        return __jsx(ResourceList.Item, {\n          id: id,\n          media: media,\n          accessibilityLabel: `View details for ${name}`,\n          shortcutActions: shortcutActions,\n          persistActions: true\n        }, __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Supplier Name:\", \" \"), supplierName)), __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Oil Name: \"), oilName)), __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Oil Type: \"), oilType)), __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Functional Sub:\", \" \"), functionalSub)), __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Aromatic Sub: \"), aromaticSub)), __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Blends Well With:\", \" \"), blendsWellWith)), __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Aromatic Description:\", \" \"), aromaticDescription)), __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Aroma Type: \"), aromaType)), __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Classifications:\", \" \"), classifications)), __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Note: \"), note)));\n      }\n    }))))), __jsx(Modal, {\n      open: this.state.activeModal,\n      onClose: this.closeModal,\n      title: \"Add Image\",\n      primaryAction: this.state.modalAction,\n      style: {\n        padding: \"20px\"\n      },\n      loading: this.state.loading\n    }, __jsx(Modal.Section, null, __jsx(Stack, {\n      alignment: \"center\"\n    }, __jsx(Stack.Item, null, __jsx(\"div\", {\n      style: {\n        width: 100,\n        height: 100\n      }\n    }, __jsx(DropZone, {\n      openFileDialog: this.state.openFileDialog,\n      onDrop: this.handleDropZoneDrop,\n      onFileDialogClose: this.toggleOpenFileDialog\n    }, fileUpload, uploadedFile), __jsx(InlineError, {\n      message: this.state.fileError\n    }))), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Supplier Name\",\n      value: this.state.supplierName,\n      onChange: this.updateSupplierName,\n      placeholder: \"Enter Supplier Name\",\n      error: this.state.supplierNameError\n    })), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Oil Name\",\n      value: this.state.oilName,\n      onChange: this.updateOilName,\n      placeholder: \"Enter Oil Name\",\n      error: this.state.oilNameError\n    })), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Oil Type\",\n      value: this.state.oilType,\n      onChange: this.updateOilType,\n      placeholder: \"Enter Oil Type\",\n      error: this.state.oilTypeError\n    })), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Functional Sub\",\n      value: this.state.functionalSub,\n      onChange: this.updateFunctionalSub,\n      placeholder: \"Enter Functional Sub\",\n      error: this.state.functionalSubError\n    })), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Aromatic Sub\",\n      value: this.state.aromaticSub,\n      onChange: this.updateAromaticSub,\n      placeholder: \"Enter Aromatic Sub\",\n      error: this.state.aromaticSubError\n    })), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Blends well with\",\n      value: this.state.blendsWellWith,\n      onChange: this.updateBlendWellWith,\n      placeholder: \"Enter Blend well with\",\n      error: this.state.blendWellWithError\n    })), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Aromatic Descriptions\",\n      value: this.state.aromaticDescription,\n      onChange: this.updateAromaticDescription,\n      placeholder: \"Enter Aromatic Description\",\n      error: this.state.aromaticDescriptionError\n    })), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Aroma Type\",\n      value: this.state.aromaType,\n      onChange: this.updateAromaType,\n      placeholder: \"Enter Aroma Type\",\n      error: this.state.aromaTypeError\n    })), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Classifications\",\n      value: this.state.classifications,\n      onChange: this.updateClassifications,\n      placeholder: \"Enter Classifications\",\n      error: this.state.classificationsError\n    })), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Note\",\n      value: this.state.note,\n      onChange: this.updateNote,\n      placeholder: \"Enter Note\",\n      error: this.state.noteError\n    }))))), __jsx(Modal, {\n      open: this.state.activeDeleteModal,\n      onClose: this.handleDeleteModalChange,\n      title: \"Do you really want to delete?\",\n      loading: this.state.loading,\n      primaryAction: {\n        content: \"Yes\",\n        onAction: this.confirmDelete\n      },\n      secondaryActions: {\n        content: \"No\",\n        onAction: () => {\n          this.setState({\n            activeDeleteModal: false\n          });\n        }\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["E:/Lenny/blendapp/pages/Drop.js"],"names":["React","axios","Layout","Card","ResourceList","TextStyle","Icon","Thumbnail","Modal","Stack","DropZone","InlineError","TextField","DeleteMajorMonotone","EditMajorMonotone","App","Component","constructor","props","response","get","host","setState","allImageData","data","imageListItemsData","i","item","push","id","_id","supplierName","oilName","oilType","functionalSub","aromaticSub","blendsWellWith","aromaticDescription","aromaType","classifications","note","media","filepath","filename","imageListItems","listItemCount","length","error","console","log","activeModal","file","fileURL","fileError","supplierNameError","oilNameError","oilTypeError","functionalSubError","aromaticSubError","blendWellWithError","aromaticDescriptionError","aromaTypeError","classificationsError","noteError","modalAction","content","onAction","handleAddImages","items","handleEditImages","source","fileFlag","activeDeleteModal","loading","state","getList","_dropFiles","acceptedFiles","_rejectedFiles","openFileDialog","value","popularFlag","oilNameFlag","formdata","FormData","append","post","headers","then","res","selectedListItems","validImageTypes","fileUpload","uploadedFile","componentDidMount","render","name","indexOf","type","window","URL","createObjectURL","addNewImage","singular","plural","setSelectedListItems","shortcutActions","editImage","deleteImage","fontSize","closeModal","padding","width","height","handleDropZoneDrop","toggleOpenFileDialog","updateSupplierName","updateOilName","updateOilType","updateFunctionalSub","updateAromaticSub","updateBlendWellWith","updateAromaticDescription","updateAromaType","updateClassifications","updateNote","handleDeleteModalChange","confirmDelete"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,YAHF,EAIEC,SAJF,EAKEC,IALF,EAMEC,SANF,EAOEC,KAPF,EAQEC,KARF,EASEC,QATF,EAUEC,WAVF,EAWEC,SAXF,QAYO,kBAZP;AAaA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAuD,wBAAvD;AAEA,eAAe,MAAMC,GAAN,SAAkBf,KAAK,CAACgB,SAAxB,CAAkC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,qCAqDT,YAAY;AACpB,UAAI;AACF,YAAIC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAU,aAAaC,IAAb,GAAoB,OAA9B,CAArB;AACA,aAAKC,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAEJ,QAAQ,CAACK;AAAzB,SAAd;AACA,YAAID,YAAY,GAAGJ,QAAQ,CAACK,IAA5B;AAEA,YAAIC,kBAAkB,GAAG,EAAzB;;AACA,aAAK,IAAIC,CAAT,IAAcH,YAAd,EAA4B;AAC1B,cAAII,IAAI,GAAGJ,YAAY,CAACG,CAAD,CAAvB;AACAD,UAAAA,kBAAkB,CAACG,IAAnB,CAAwB;AACtBC,YAAAA,EAAE,EAAEF,IAAI,CAACG,GADa;AAEtBC,YAAAA,YAAY,EAAEJ,IAAI,CAACI,YAFG;AAGtBC,YAAAA,OAAO,EAAEL,IAAI,CAACK,OAHQ;AAItBC,YAAAA,OAAO,EAAEN,IAAI,CAACM,OAJQ;AAKtBC,YAAAA,aAAa,EAAEP,IAAI,CAACO,aALE;AAMtBC,YAAAA,WAAW,EAAER,IAAI,CAACQ,WANI;AAOtBC,YAAAA,cAAc,EAAET,IAAI,CAACS,cAPC;AAQtBC,YAAAA,mBAAmB,EAAEV,IAAI,CAACU,mBARJ;AAStBC,YAAAA,SAAS,EAAEX,IAAI,CAACW,SATM;AAUtBC,YAAAA,eAAe,EAAEZ,IAAI,CAACY,eAVA;AAWtBC,YAAAA,IAAI,EAAEb,IAAI,CAACa,IAXW;AAYtBC,YAAAA,KAAK,EAAE,MAAC,SAAD;AAAW,cAAA,MAAM,EAAEd,IAAI,CAACe,QAAxB;AAAkC,cAAA,GAAG,EAAEf,IAAI,CAACgB;AAA5C;AAZe,WAAxB;AAcD;;AACD,aAAKrB,QAAL,CAAc;AACZsB,UAAAA,cAAc,EAAEnB,kBADJ;AAEZoB,UAAAA,aAAa,EAAEpB,kBAAkB,CAACqB;AAFtB,SAAd;AAID,OA3BD,CA2BE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,KApFkB;;AAAA,yCAsFL,MAAM;AAClB,WAAKzB,QAAL,CAAc;AACZ4B,QAAAA,WAAW,EAAE,IADD;AAEZC,QAAAA,IAAI,EAAE,IAFM;AAGZC,QAAAA,OAAO,EAAE,EAHG;AAIZrB,QAAAA,YAAY,EAAE,EAJF;AAKZC,QAAAA,OAAO,EAAE,EALG;AAMZC,QAAAA,OAAO,EAAE,EANG;AAOZC,QAAAA,aAAa,EAAE,EAPH;AAQZC,QAAAA,WAAW,EAAE,EARD;AASZC,QAAAA,cAAc,EAAE,EATJ;AAUZC,QAAAA,mBAAmB,EAAE,EAVT;AAWZC,QAAAA,SAAS,EAAE,EAXC;AAYZC,QAAAA,eAAe,EAAE,EAZL;AAaZC,QAAAA,IAAI,EAAE,EAbM;AAcZa,QAAAA,SAAS,EAAE,EAdC;AAeZC,QAAAA,iBAAiB,EAAE,EAfP;AAgBZC,QAAAA,YAAY,EAAE,EAhBF;AAiBZC,QAAAA,YAAY,EAAE,EAjBF;AAkBZC,QAAAA,kBAAkB,EAAE,EAlBR;AAmBZC,QAAAA,gBAAgB,EAAE,EAnBN;AAoBZC,QAAAA,kBAAkB,EAAE,EApBR;AAqBZC,QAAAA,wBAAwB,EAAE,EArBd;AAsBZC,QAAAA,cAAc,EAAE,EAtBJ;AAuBZC,QAAAA,oBAAoB,EAAE,EAvBV;AAwBZC,QAAAA,SAAS,EAAE,EAxBC;AAyBZC,QAAAA,WAAW,EAAE;AACXC,UAAAA,OAAO,EAAE,KADE;AAEXC,UAAAA,QAAQ,EAAE,KAAKC;AAFJ;AAzBD,OAAd;AA8BD,KArHkB;;AAAA,kDAuHIC,KAAK,IAAI;AAC9BpB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,KAAZ;AACD,KAzHkB;;AAAA,uCA2HP,CACVvC,EADU,EAEVE,YAFU,EAGVU,KAHU,EAIVT,OAJU,EAKVC,OALU,EAMVC,aANU,EAOVC,WAPU,EAQVC,cARU,EASVC,mBATU,EAUVC,SAVU,EAWVC,eAXU,EAYVC,IAZU,KAaP;AACHQ,MAAAA,OAAO,CAACC,GAAR,CACEpB,EADF,EAEEE,YAFF,EAGEU,KAHF,EAIET,OAJF,EAKEC,OALF,EAMEC,aANF,EAOEC,WAPF,EAQEC,cARF,EASEC,mBATF,EAUEC,SAVF,EAWEC,eAXF,EAYEC,IAZF;AAcA,WAAKlB,QAAL,CAAc;AACZ0C,QAAAA,WAAW,EAAE;AACXC,UAAAA,OAAO,EAAE,MADE;AAEXC,UAAAA,QAAQ,EAAE,KAAKG;AAFJ,SADD;AAKZhB,QAAAA,SAAS,EAAE,EALC;AAMZC,QAAAA,iBAAiB,EAAE,EANP;AAOZC,QAAAA,YAAY,EAAE,EAPF;AAQZC,QAAAA,YAAY,EAAE,EARF;AASZC,QAAAA,kBAAkB,EAAE,EATR;AAUZC,QAAAA,gBAAgB,EAAE,EAVN;AAWZC,QAAAA,kBAAkB,EAAE,EAXR;AAYZC,QAAAA,wBAAwB,EAAE,EAZd;AAaZC,QAAAA,cAAc,EAAE,EAbJ;AAcZC,QAAAA,oBAAoB,EAAE,EAdV;AAeZC,QAAAA,SAAS,EAAE,EAfC;AAgBZlC,QAAAA,EAAE,EAAEA,EAhBQ;AAiBZsB,QAAAA,IAAI,EAAE,IAjBM;AAkBZC,QAAAA,OAAO,EAAEX,KAAK,CAACvB,KAAN,CAAYoD,MAlBT;AAmBZvC,QAAAA,YAAY,EAAEA,YAnBF;AAoBZC,QAAAA,OAAO,EAAEA,OApBG;AAqBZC,QAAAA,OAAO,EAAEA,OArBG;AAsBZC,QAAAA,aAAa,EAAEA,aAtBH;AAuBZC,QAAAA,WAAW,EAAEA,WAvBD;AAwBZC,QAAAA,cAAc,EAAEA,cAxBJ;AAyBZC,QAAAA,mBAAmB,EAAEA,mBAzBT;AA0BZC,QAAAA,SAAS,EAAEA,SA1BC;AA2BZC,QAAAA,eAAe,EAAEA,eA3BL;AA4BZC,QAAAA,IAAI,EAAEA,IA5BM;AA6BZU,QAAAA,WAAW,EAAE,IA7BD;AA8BZqB,QAAAA,QAAQ,EAAE;AA9BE,OAAd;AAgCD,KAvLkB;;AAAA,yCAyLL1C,EAAE,IAAI;AAClB,WAAKP,QAAL,CAAc;AACZO,QAAAA,EAAE,EAAEA,EADQ;AAEZ2C,QAAAA,iBAAiB,EAAE;AAFP,OAAd;AAIAxB,MAAAA,OAAO,CAACC,GAAR,CAAYpB,EAAZ;AACD,KA/LkB;;AAAA,2CAiMH,YAAY;AAC1B,WAAKP,QAAL,CAAc;AAAEmD,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,UAAItD,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAClB,WAAUC,IAAK,wBAAuB,KAAKqD,KAAL,CAAW7C,EAAG,EADlC,CAArB;AAGAmB,MAAAA,OAAO,CAACC,GAAR,CAAY9B,QAAQ,CAACK,IAArB;;AACA,UAAIL,QAAQ,CAACK,IAAT,KAAkB,SAAtB,EAAiC;AAC/B,aAAKmD,OAAL;AACA,aAAKrD,QAAL,CAAc;AACZmD,UAAAA,OAAO,EAAE,KADG;AAEZD,UAAAA,iBAAiB,EAAE;AAFP,SAAd;AAID,OAND,MAMO;AACLxB,QAAAA,OAAO,CAACC,GAAR,CAAY9B,QAAQ,CAACK,IAArB;AACD;AACF,KAhNkB;;AAAA,wCAkNN,MAAM;AACjB,WAAKF,QAAL,CAAc;AAAE4B,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,KApNkB;;AAAA,gDAsNE,CAAC0B,UAAD,EAAaC,aAAb,EAA4BC,cAA5B,KAA+C;AAClE,WAAKxD,QAAL,CAAc;AACZ6B,QAAAA,IAAI,EAAE0B,aAAa,CAAC,CAAD,CADP;AAEZxB,QAAAA,SAAS,EAAE,EAFC;AAGZkB,QAAAA,QAAQ,EAAE,IAHE;AAIZnB,QAAAA,OAAO,EAAE;AAJG,OAAd;AAMD,KA7NkB;;AAAA,kDA+NI,MAAM;AAC3B,WAAK9B,QAAL,CAAc;AAAEyD,QAAAA,cAAc,EAAE,CAAC,KAAKL,KAAL,CAAWK;AAA9B,OAAd;AACA/B,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,KAlOkB;;AAAA,gDAoOE+B,KAAK,IAAI;AAC5B,UAAI,KAAKN,KAAL,CAAW3C,YAAX,KAA4BiD,KAAhC,EAAuC,KAAK1D,QAAL,CAAc;AAAE2D,QAAAA,WAAW,EAAE;AAAf,OAAd;AACvC,WAAK3D,QAAL,CAAc;AACZS,QAAAA,YAAY,EAAEiD,KADF;AAEZ1B,QAAAA,iBAAiB,EAAE;AAFP,OAAd;AAID,KA1OkB;;AAAA,2CA4OH0B,KAAK,IAAI;AACvB,UAAI,KAAKN,KAAL,CAAW1C,OAAX,KAAuBgD,KAA3B,EAAkC,KAAK1D,QAAL,CAAc;AAAE4D,QAAAA,WAAW,EAAE;AAAf,OAAd;AAClC,WAAK5D,QAAL,CAAc;AACZU,QAAAA,OAAO,EAAEgD,KADG;AAEZzB,QAAAA,YAAY,EAAE;AAFF,OAAd;AAID,KAlPkB;;AAAA,2CAmPHyB,KAAK,IAAI;AACvB,UAAI,KAAKN,KAAL,CAAWzC,OAAX,KAAuB+C,KAA3B,EAAkC,KAAK1D,QAAL,CAAc;AAAE2D,QAAAA,WAAW,EAAE;AAAf,OAAd;AAClC,WAAK3D,QAAL,CAAc;AACZW,QAAAA,OAAO,EAAE+C,KADG;AAEZxB,QAAAA,YAAY,EAAE;AAFF,OAAd;AAID,KAzPkB;;AAAA,iDA0PGwB,KAAK,IAAI;AAC7BhC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAS,KAAKyB,KAAL,CAAWxC,aAApB,GAAoC,MAApC,GAA6C8C,KAAzD;AACA,UAAI,KAAKN,KAAL,CAAWxC,aAAX,KAA6B8C,KAAjC,EACE,KAAK1D,QAAL,CAAc;AAAE2D,QAAAA,WAAW,EAAE;AAAf,OAAd;AACF,WAAK3D,QAAL,CAAc;AACZY,QAAAA,aAAa,EAAE8C,KADH;AAEZvB,QAAAA,kBAAkB,EAAE;AAFR,OAAd;AAID,KAlQkB;;AAAA,+CAmQCuB,KAAK,IAAI;AAC3B,UAAI,KAAKN,KAAL,CAAWvC,WAAX,KAA2B6C,KAA/B,EAAsC,KAAK1D,QAAL,CAAc;AAAE2D,QAAAA,WAAW,EAAE;AAAf,OAAd;AACtC,WAAK3D,QAAL,CAAc;AACZa,QAAAA,WAAW,EAAE6C,KADD;AAEZtB,QAAAA,gBAAgB,EAAE;AAFN,OAAd;AAID,KAzQkB;;AAAA,iDA0QGsB,KAAK,IAAI;AAC7B,UAAI,KAAKN,KAAL,CAAWtC,cAAX,KAA8B4C,KAAlC,EACE,KAAK1D,QAAL,CAAc;AAAE2D,QAAAA,WAAW,EAAE;AAAf,OAAd;AACF,WAAK3D,QAAL,CAAc;AACZc,QAAAA,cAAc,EAAE4C,KADJ;AAEZrB,QAAAA,kBAAkB,EAAE;AAFR,OAAd;AAID,KAjRkB;;AAAA,uDAkRSqB,KAAK,IAAI;AACnC,UAAI,KAAKN,KAAL,CAAWrC,mBAAX,KAAmC2C,KAAvC,EACE,KAAK1D,QAAL,CAAc;AAAE2D,QAAAA,WAAW,EAAE;AAAf,OAAd;AACF,WAAK3D,QAAL,CAAc;AACZe,QAAAA,mBAAmB,EAAE2C,KADT;AAEZpB,QAAAA,wBAAwB,EAAE;AAFd,OAAd;AAID,KAzRkB;;AAAA,6CA0RDoB,KAAK,IAAI;AACzB,UAAI,KAAKN,KAAL,CAAWpC,SAAX,KAAyB0C,KAA7B,EAAoC,KAAK1D,QAAL,CAAc;AAAE2D,QAAAA,WAAW,EAAE;AAAf,OAAd;AACpC,WAAK3D,QAAL,CAAc;AACZgB,QAAAA,SAAS,EAAE0C,KADC;AAEZnB,QAAAA,cAAc,EAAE;AAFJ,OAAd;AAID,KAhSkB;;AAAA,mDAiSKmB,KAAK,IAAI;AAC/B,UAAI,KAAKN,KAAL,CAAWnC,eAAX,KAA+ByC,KAAnC,EACE,KAAK1D,QAAL,CAAc;AAAE2D,QAAAA,WAAW,EAAE;AAAf,OAAd;AACF,WAAK3D,QAAL,CAAc;AACZiB,QAAAA,eAAe,EAAEyC,KADL;AAEZlB,QAAAA,oBAAoB,EAAE;AAFV,OAAd;AAID,KAxSkB;;AAAA,wCAySNkB,KAAK,IAAI;AACpB,UAAI,KAAKN,KAAL,CAAWlC,IAAX,KAAoBwC,KAAxB,EAA+B,KAAK1D,QAAL,CAAc;AAAE2D,QAAAA,WAAW,EAAE;AAAf,OAAd;AAC/B,WAAK3D,QAAL,CAAc;AACZkB,QAAAA,IAAI,EAAEwC,KADM;AAEZjB,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KA/SkB;;AAAA,6CAiTD,MAAM;AACtB,UACE,KAAKW,KAAL,CAAWvB,IAAX,KAAoB,IAApB,IACA,KAAKuB,KAAL,CAAW3C,YAAX,KAA4B,EAD5B,IAEA,KAAK2C,KAAL,CAAW1C,OAAX,KAAuB,EAFvB,IAGA,KAAK0C,KAAL,CAAWzC,OAAX,KAAuB,EAHvB,IAIA,KAAKyC,KAAL,CAAWpC,SAAX,KAAyB,EAJzB,IAKA,KAAKoC,KAAL,CAAWnC,eAAX,KAA+B,EAL/B,IAMA,KAAKmC,KAAL,CAAWlC,IAAX,KAAoB,EAPtB,EAQE;AACA,aAAKlB,QAAL,CAAc;AACZ+B,UAAAA,SAAS,EAAE,YADC;AAEZC,UAAAA,iBAAiB,EAAE,oBAFP;AAGZC,UAAAA,YAAY,EAAE,eAHF;AAIZC,UAAAA,YAAY,EAAE,eAJF;AAKZK,UAAAA,cAAc,EAAE,iBALJ;AAMZC,UAAAA,oBAAoB,EAAE,sBANV;AAOZC,UAAAA,SAAS,EAAE;AAPC,SAAd;AASA;AACD,OAnBD,MAmBO,IAAI,KAAKW,KAAL,CAAWvB,IAAX,KAAoB,IAAxB,EAA8B;AACnC,aAAK7B,QAAL,CAAc;AACZ+B,UAAAA,SAAS,EAAE;AADC,SAAd;AAGA;AACD,OALM,MAKA,IAAI,KAAKqB,KAAL,CAAW3C,YAAX,KAA4B,EAAhC,EAAoC;AACzC,aAAKT,QAAL,CAAc;AACZgC,UAAAA,iBAAiB,EAAE;AADP,SAAd;AAGA;AACD,OALM,MAKA,IAAI,KAAKoB,KAAL,CAAW1C,OAAX,KAAuB,EAA3B,EAA+B;AACpC,aAAKV,QAAL,CAAc;AACZiC,UAAAA,YAAY,EAAE;AADF,SAAd;AAGA;AACD,OALM,MAKA,IAAI,KAAKmB,KAAL,CAAWzC,OAAX,KAAuB,EAA3B,EAA+B;AACpC,aAAKX,QAAL,CAAc;AACZkC,UAAAA,YAAY,EAAE;AADF,SAAd;AAGA;AACD,OALM,MAKA,IAAI,KAAKkB,KAAL,CAAWpC,SAAX,KAAyB,EAA7B,EAAiC;AACtC,aAAKhB,QAAL,CAAc;AACZuC,UAAAA,cAAc,EAAE;AADJ,SAAd;AAGA;AACD,OALM,MAKA,IAAI,KAAKa,KAAL,CAAWnC,eAAX,KAA+B,EAAnC,EAAuC;AAC5C,aAAKjB,QAAL,CAAc;AACZwC,UAAAA,oBAAoB,EAAE;AADV,SAAd;AAGA;AACD,OALM,MAKA,IAAI,KAAKY,KAAL,CAAWlC,IAAX,KAAoB,EAAxB,EAA4B;AACjC,aAAKlB,QAAL,CAAc;AACZyC,UAAAA,SAAS,EAAE;AADC,SAAd;AAGA;AACD;;AACD,WAAK,IAAIrC,CAAT,IAAc,KAAKgD,KAAL,CAAWnD,YAAzB,EAAuC;AACrC,YAAII,IAAI,GAAG,KAAK+C,KAAL,CAAWnD,YAAX,CAAwBG,CAAxB,CAAX;;AACA,YAAIC,IAAI,CAACgB,QAAL,KAAkB,KAAK+B,KAAL,CAAW1C,OAAjC,EAA0C;AACxC,eAAKV,QAAL,CAAc;AACZiC,YAAAA,YAAY,EAAE;AADF,WAAd;AAGA;AACD;AACF;;AAED,WAAKjC,QAAL,CAAc;AAAEmD,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,UAAIU,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAKX,KAAL,CAAWvB,IAAnC;AACAgC,MAAAA,QAAQ,CAACE,MAAT,CAAgB,cAAhB,EAAgC,KAAKX,KAAL,CAAW3C,YAA3C;AACAoD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B,KAAKX,KAAL,CAAW1C,OAAtC;AACAmD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B,KAAKX,KAAL,CAAWzC,OAAtC;AACAkD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiC,KAAKX,KAAL,CAAWxC,aAA5C;AACAiD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+B,KAAKX,KAAL,CAAWvC,WAA1C;AACAgD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,gBAAhB,EAAkC,KAAKX,KAAL,CAAWtC,cAA7C;AACA+C,MAAAA,QAAQ,CAACE,MAAT,CAAgB,qBAAhB,EAAuC,KAAKX,KAAL,CAAWrC,mBAAlD;AACA8C,MAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6B,KAAKX,KAAL,CAAWpC,SAAxC;AACA6C,MAAAA,QAAQ,CAACE,MAAT,CAAgB,iBAAhB,EAAmC,KAAKX,KAAL,CAAWnC,eAA9C;AACA4C,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAKX,KAAL,CAAWlC,IAAnC;AAEAvC,MAAAA,KAAK,CACFqF,IADH,CACQ,aAAajE,IAAb,GAAoB,OAD5B,EACqC8D,QADrC,EAC+C;AAC3CI,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADkC,OAD/C,EAMGC,IANH,CAMQC,GAAG,IAAI;AACX,YAAIA,GAAG,CAACjE,IAAJ,KAAa,SAAjB,EAA4B;AAC1B,eAAKF,QAAL,CAAc;AAAE4B,YAAAA,WAAW,EAAE;AAAf,WAAd;AACA,eAAKyB,OAAL;AACA,eAAKrD,QAAL,CAAc;AAAEmD,YAAAA,OAAO,EAAE;AAAX,WAAd;AACAzB,UAAAA,OAAO,CAACC,GAAR,CAAYwC,GAAG,CAACjE,IAAhB;AACD,SALD,MAKO;AACLwB,UAAAA,OAAO,CAACC,GAAR,CAAYwC,GAAG,CAACjE,IAAhB;AACD;AACF,OAfH;AAgBD,KAjZkB;;AAAA,8CAmZA,MAAM;AACvBwB,MAAAA,OAAO,CAACC,GAAR,CACE,KAAKyB,KAAL,CAAWvB,IADb,EAEE,KAAKuB,KAAL,CAAW3C,YAFb,EAGE,KAAK2C,KAAL,CAAW1C,OAHb,EAIE,KAAK0C,KAAL,CAAWzC,OAJb,EAKE,KAAKyC,KAAL,CAAWxC,aALb,EAME,KAAKwC,KAAL,CAAWvC,WANb,EAOE,KAAKuC,KAAL,CAAWtC,cAPb,EAQE,KAAKsC,KAAL,CAAWrC,mBARb,EASE,KAAKqC,KAAL,CAAWpC,SATb,EAUE,KAAKoC,KAAL,CAAWnC,eAVb,EAWE,KAAKmC,KAAL,CAAWlC,IAXb;;AAaA,UACE,KAAKkC,KAAL,CAAWvB,IAAX,KAAoB,IAApB,IACA,KAAKuB,KAAL,CAAW3C,YAAX,KAA4B,EAD5B,IAEA,KAAK2C,KAAL,CAAW1C,OAAX,KAAuB,EAFvB,IAGA,KAAK0C,KAAL,CAAWzC,OAAX,KAAuB,EAHvB,IAIA,KAAKyC,KAAL,CAAWpC,SAAX,KAAyB,EAJzB,IAKA,KAAKoC,KAAL,CAAWnC,eAAX,KAA+B,EAL/B,IAMA,KAAKmC,KAAL,CAAWlC,IAAX,KAAoB,EAPtB,EAQE;AACA,aAAKlB,QAAL,CAAc;AACZ+B,UAAAA,SAAS,EAAE,YADC;AAEZC,UAAAA,iBAAiB,EAAE,oBAFP;AAGZC,UAAAA,YAAY,EAAE,eAHF;AAIZC,UAAAA,YAAY,EAAE,eAJF;AAKZK,UAAAA,cAAc,EAAE,iBALJ;AAMZC,UAAAA,oBAAoB,EAAE,sBANV;AAOZC,UAAAA,SAAS,EAAE;AAPC,SAAd;AASA;AACD,OAnBD,MAmBO,IAAI,KAAKW,KAAL,CAAW3C,YAAX,KAA4B,EAAhC,EAAoC;AACzC,aAAKT,QAAL,CAAc;AACZgC,UAAAA,iBAAiB,EAAE;AADP,SAAd;AAGA;AACD,OALM,MAKA,IAAI,KAAKoB,KAAL,CAAW1C,OAAX,KAAuB,EAA3B,EAA+B;AACpC,aAAKV,QAAL,CAAc;AACZiC,UAAAA,YAAY,EAAE;AADF,SAAd;AAGA;AACD,OALM,MAKA,IAAI,KAAKmB,KAAL,CAAWzC,OAAX,KAAuB,EAA3B,EAA+B;AACpC,aAAKX,QAAL,CAAc;AACZkC,UAAAA,YAAY,EAAE;AADF,SAAd;AAGA;AACD,OALM,MAKA,IAAI,KAAKkB,KAAL,CAAWpC,SAAX,KAAyB,EAA7B,EAAiC;AACtC,aAAKhB,QAAL,CAAc;AACZuC,UAAAA,cAAc,EAAE;AADJ,SAAd;AAGA;AACD,OALM,MAKA,IAAI,KAAKa,KAAL,CAAWnC,eAAX,KAA+B,EAAnC,EAAuC;AAC5C,aAAKjB,QAAL,CAAc;AACZwC,UAAAA,oBAAoB,EAAE;AADV,SAAd;AAGA;AACD,OALM,MAKA,IAAI,KAAKY,KAAL,CAAWlC,IAAX,KAAoB,EAAxB,EAA4B;AACjC,aAAKlB,QAAL,CAAc;AACZyC,UAAAA,SAAS,EAAE;AADC,SAAd;AAGA;AACD;;AAED,UACE,CAAC,KAAKW,KAAL,CAAWH,QAAZ,IACA,CAAC,KAAKG,KAAL,CAAWQ,WADZ,IAEA,CAAC,KAAKR,KAAL,CAAWO,WAHd,EAIE;AACA,aAAK3D,QAAL,CAAc;AAAE4B,UAAAA,WAAW,EAAE;AAAf,SAAd;AACA;AACD;;AAED,UAAI,KAAKwB,KAAL,CAAWH,QAAf,EAAyB;AACvB,aAAKjD,QAAL,CAAc;AAAEmD,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA,YAAIU,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,QAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAKX,KAAL,CAAWvB,IAAnC;AACAgC,QAAAA,QAAQ,CAACE,MAAT,CAAgB,cAAhB,EAAgC,KAAKX,KAAL,CAAW3C,YAA3C;AACAoD,QAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B,KAAKX,KAAL,CAAW1C,OAAtC;AACAmD,QAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B,KAAKX,KAAL,CAAWzC,OAAtC;AACAkD,QAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiC,KAAKX,KAAL,CAAWxC,aAA5C;AACAiD,QAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+B,KAAKX,KAAL,CAAWvC,WAA1C;AACAgD,QAAAA,QAAQ,CAACE,MAAT,CAAgB,gBAAhB,EAAkC,KAAKX,KAAL,CAAWtC,cAA7C;AACA+C,QAAAA,QAAQ,CAACE,MAAT,CAAgB,qBAAhB,EAAuC,KAAKX,KAAL,CAAWrC,mBAAlD;AACA8C,QAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6B,KAAKX,KAAL,CAAWpC,SAAxC;AACA6C,QAAAA,QAAQ,CAACE,MAAT,CAAgB,iBAAhB,EAAmC,KAAKX,KAAL,CAAWnC,eAA9C;AACA4C,QAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAKX,KAAL,CAAWlC,IAAnC;AACA2C,QAAAA,QAAQ,CAACE,MAAT,CAAgB,IAAhB,EAAsB,KAAKX,KAAL,CAAW7C,EAAjC;AACA5B,QAAAA,KAAK,CACFqF,IADH,CACQ,aAAajE,IAAb,GAAoB,oBAD5B,EACkD8D,QADlD,EAC4D;AACxDI,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAD+C,SAD5D,EAMGC,IANH,CAMQC,GAAG,IAAI;AACX,cAAIA,GAAG,CAACjE,IAAJ,KAAa,SAAjB,EAA4B;AAC1B,iBAAKmD,OAAL;AACA,iBAAKrD,QAAL,CAAc;AACZ4B,cAAAA,WAAW,EAAE,KADD;AAEZuB,cAAAA,OAAO,EAAE;AAFG,aAAd;AAIAzB,YAAAA,OAAO,CAACC,GAAR,CAAYwC,GAAG,CAACjE,IAAhB;AACD,WAPD,MAOO;AACLwB,YAAAA,OAAO,CAACC,GAAR,CAAYwC,GAAG,CAACjE,IAAhB;AACD;AACF,SAjBH;AAkBD,OAjCD,MAiCO;AACL,YAAI,KAAKkD,KAAL,CAAWQ,WAAf,EAA4B;AAC1B,eAAK5D,QAAL,CAAc;AAAEmD,YAAAA,OAAO,EAAE;AAAX,WAAd;AACAxE,UAAAA,KAAK,CACFqF,IADH,CACQ,aAAajE,IAAb,GAAoB,uBAD5B,EACqD;AACjDQ,YAAAA,EAAE,EAAE,KAAK6C,KAAL,CAAW7C,EADkC;AAEjDE,YAAAA,YAAY,EAAE,KAAK2C,KAAL,CAAW3C,YAFwB;AAGjDC,YAAAA,OAAO,EAAE,KAAK0C,KAAL,CAAW1C,OAH6B;AAIjDC,YAAAA,OAAO,EAAE,KAAKyC,KAAL,CAAWzC,OAJ6B;AAKjDC,YAAAA,aAAa,EAAE,KAAKwC,KAAL,CAAWxC,aALuB;AAMjDC,YAAAA,WAAW,EAAE,KAAKuC,KAAL,CAAWvC,WANyB;AAOjDC,YAAAA,cAAc,EAAE,KAAKsC,KAAL,CAAWtC,cAPsB;AAQjDC,YAAAA,mBAAmB,EAAE,KAAKqC,KAAL,CAAWrC,mBARiB;AASjDC,YAAAA,SAAS,EAAE,KAAKoC,KAAL,CAAWpC,SAT2B;AAUjDC,YAAAA,eAAe,EAAE,KAAKmC,KAAL,CAAWnC,eAVqB;AAWjDC,YAAAA,IAAI,EAAE,KAAKkC,KAAL,CAAWlC;AAXgC,WADrD,EAcGgD,IAdH,CAcQC,GAAG,IAAI;AACX,gBAAIA,GAAG,CAACjE,IAAJ,KAAa,SAAjB,EAA4B;AAC1B,mBAAKmD,OAAL;AACA,mBAAKrD,QAAL,CAAc;AACZ4B,gBAAAA,WAAW,EAAE,KADD;AAEZuB,gBAAAA,OAAO,EAAE;AAFG,eAAd;AAIAzB,cAAAA,OAAO,CAACC,GAAR,CAAYwC,GAAG,CAACjE,IAAhB;AACD,aAPD,MAOO;AACLwB,cAAAA,OAAO,CAACC,GAAR,CAAYwC,GAAG,CAACjE,IAAhB;AACD;AACF,WAzBH;AA0BD,SA5BD,MA4BO,IAAI,KAAKkD,KAAL,CAAWO,WAAf,EAA4B;AACjC,eAAK3D,QAAL,CAAc;AAAEmD,YAAAA,OAAO,EAAE;AAAX,WAAd;AACAxE,UAAAA,KAAK,CACFqF,IADH,CACQ,aAAajE,IAAb,GAAoB,uBAD5B,EACqD;AACjDQ,YAAAA,EAAE,EAAE,KAAK6C,KAAL,CAAW7C,EADkC;AAEjDE,YAAAA,YAAY,EAAE,KAAK2C,KAAL,CAAW3C,YAFwB;AAGjDE,YAAAA,OAAO,EAAE,KAAKyC,KAAL,CAAWzC,OAH6B;AAIjDC,YAAAA,aAAa,EAAE,KAAKwC,KAAL,CAAWxC,aAJuB;AAKjDC,YAAAA,WAAW,EAAE,KAAKuC,KAAL,CAAWvC,WALyB;AAMjDC,YAAAA,cAAc,EAAE,KAAKsC,KAAL,CAAWtC,cANsB;AAOjDC,YAAAA,mBAAmB,EAAE,KAAKqC,KAAL,CAAWrC,mBAPiB;AAQjDC,YAAAA,SAAS,EAAE,KAAKoC,KAAL,CAAWpC,SAR2B;AASjDC,YAAAA,eAAe,EAAE,KAAKmC,KAAL,CAAWnC,eATqB;AAUjDC,YAAAA,IAAI,EAAE,KAAKkC,KAAL,CAAWlC;AAVgC,WADrD,EAaGgD,IAbH,CAaQC,GAAG,IAAI;AACX,gBAAIA,GAAG,CAACjE,IAAJ,KAAa,SAAjB,EAA4B;AAC1B,mBAAKmD,OAAL;AACA,mBAAKrD,QAAL,CAAc;AACZ4B,gBAAAA,WAAW,EAAE,KADD;AAEZuB,gBAAAA,OAAO,EAAE;AAFG,eAAd;AAIAzB,cAAAA,OAAO,CAACC,GAAR,CAAYwC,GAAG,CAACjE,IAAhB;AACD,aAPD,MAOO;AACLwB,cAAAA,OAAO,CAACC,GAAR,CAAYwC,GAAG,CAACjE,IAAhB;AACD;AACF,WAxBH;AAyBD;AACF;AACF,KAxjBkB;;AAGjB,SAAKkD,KAAL,GAAa;AACXnD,MAAAA,YAAY,EAAE,EADH;AAEXsB,MAAAA,aAAa,EAAE,CAFJ;AAGXD,MAAAA,cAAc,EAAE,EAHL;AAIX8C,MAAAA,iBAAiB,EAAE,EAJR;AAKXxC,MAAAA,WAAW,EAAE,KALF;AAMXc,MAAAA,WAAW,EAAE;AACXC,QAAAA,OAAO,EAAE,KADE;AAEXC,QAAAA,QAAQ,EAAE,KAAKC;AAFJ,OANF;AAUXM,MAAAA,OAAO,EAAE,KAVE;AAWXtB,MAAAA,IAAI,EAAE,IAXK;AAYXwC,MAAAA,eAAe,EAAE,CAAC,WAAD,EAAc,YAAd,EAA4B,WAA5B,CAZN;AAaXZ,MAAAA,cAAc,EAAE,KAbL;AAcXa,MAAAA,UAAU,EAAE,EAdD;AAeXC,MAAAA,YAAY,EAAE,EAfH;AAgBXxC,MAAAA,SAAS,EAAE,EAhBA;AAiBXxB,MAAAA,EAAE,EAAE,EAjBO;AAkBXuB,MAAAA,OAAO,EAAE,EAlBE;AAmBXmB,MAAAA,QAAQ,EAAE,KAnBC;AAoBXW,MAAAA,WAAW,EAAE,KApBF;AAqBXD,MAAAA,WAAW,EAAE,KArBF;AAsBXT,MAAAA,iBAAiB,EAAE,KAtBR;AAuBXzC,MAAAA,YAAY,EAAE,EAvBH;AAwBXC,MAAAA,OAAO,EAAE,EAxBE;AAyBXC,MAAAA,OAAO,EAAE,EAzBE;AA0BXC,MAAAA,aAAa,EAAE,EA1BJ;AA2BXC,MAAAA,WAAW,EAAE,EA3BF;AA4BXC,MAAAA,cAAc,EAAE,EA5BL;AA6BXC,MAAAA,mBAAmB,EAAE,EA7BV;AA8BXC,MAAAA,SAAS,EAAE,EA9BA;AA+BXC,MAAAA,eAAe,EAAE,EA/BN;AAgCXC,MAAAA,IAAI,EAAE,EAhCK;AAiCXc,MAAAA,iBAAiB,EAAE,EAjCR;AAkCXC,MAAAA,YAAY,EAAE,EAlCH;AAmCXC,MAAAA,YAAY,EAAE,EAnCH;AAoCXC,MAAAA,kBAAkB,EAAE,EApCT;AAqCXC,MAAAA,gBAAgB,EAAE,EArCP;AAsCXC,MAAAA,kBAAkB,EAAE,EAtCT;AAuCXC,MAAAA,wBAAwB,EAAE,EAvCf;AAwCXC,MAAAA,cAAc,EAAE,EAxCL;AAyCXC,MAAAA,oBAAoB,EAAE,EAzCX;AA0CXC,MAAAA,SAAS,EAAE;AA1CA,KAAb;AA4CD;;AAED,QAAM+B,iBAAN,GAA0B;AACxB,SAAKnB,OAAL;AACD;;AAugBDoB,EAAAA,MAAM,GAAG;AACP,UAAMH,UAAU,GACd,KAAKlB,KAAL,CAAWtB,OAAX,KAAuB,EAAvB,GACE,CAAC,KAAKsB,KAAL,CAAWvB,IAAZ,IAAoB,MAAC,QAAD,CAAU,UAAV,OADtB,GAGE,MAAC,KAAD,QACE,MAAC,SAAD;AAAW,MAAA,IAAI,EAAC,OAAhB;AAAwB,MAAA,GAAG,EAAC,MAA5B;AAAmC,MAAA,MAAM,EAAE,KAAKuB,KAAL,CAAWtB;AAAtD,MADF,CAJJ;;AASA,UAAMyC,YAAY,GAAG,KAAKnB,KAAL,CAAWvB,IAAX,IACnB,MAAC,KAAD,QACE,MAAC,SAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,GAAG,EAAE,KAAKuB,KAAL,CAAWvB,IAAX,CAAgB6C,IAFvB;AAGE,MAAA,MAAM,EACJ,KAAKtB,KAAL,CAAWiB,eAAX,CAA2BM,OAA3B,CAAmC,KAAKvB,KAAL,CAAWvB,IAAX,CAAgB+C,IAAnD,IAA2D,CAA3D,GACIC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2B,KAAK3B,KAAL,CAAWvB,IAAtC,CADJ,GAEI;AANR,MADF,CADF;;AAcA,WACE,mBACE,MAAC,MAAD,QACE,MAAC,MAAD,CAAQ,OAAR,QACE,MAAC,IAAD;AACE,MAAA,KAAK,EAAC,aADR;AAEE,MAAA,OAAO,EAAE,CACP;AACEc,QAAAA,OAAO,EAAE,gBADX;AAEEC,QAAAA,QAAQ,EAAE,KAAKoC;AAFjB,OADO;AAFX,OASE,MAAC,IAAD,CAAM,OAAN,QACE,MAAC,SAAD;AAAW,MAAA,SAAS,EAAC;AAArB,OACG,KAAK5B,KAAL,CAAW7B,aADd,iBADF,CATF,EAcE,MAAC,IAAD,CAAM,OAAN,QACE,MAAC,YAAD;AACE,MAAA,YAAY,EAAE;AAAE0D,QAAAA,QAAQ,EAAE,OAAZ;AAAqBC,QAAAA,MAAM,EAAE;AAA7B,OADhB;AAEE,MAAA,KAAK,EAAE,KAAK9B,KAAL,CAAW9B,cAFpB;AAGE,MAAA,aAAa,EAAE,KAAK8B,KAAL,CAAWgB,iBAH5B;AAIE,MAAA,iBAAiB,EAAE,KAAKe,oBAJ1B;AAKE,MAAA,UAAU,EAAE9E,IAAI,IAAI;AAClB,cAAM;AACJE,UAAAA,EADI;AAEJE,UAAAA,YAFI;AAGJU,UAAAA,KAHI;AAIJT,UAAAA,OAJI;AAKJC,UAAAA,OALI;AAMJC,UAAAA,aANI;AAOJC,UAAAA,WAPI;AAQJC,UAAAA,cARI;AASJC,UAAAA,mBATI;AAUJC,UAAAA,SAVI;AAWJC,UAAAA,eAXI;AAYJC,UAAAA;AAZI,YAaFb,IAbJ;AAcA,cAAM+E,eAAe,GAAG,CACtB;AACEzC,UAAAA,OAAO,EACL,MAAC,IAAD;AAAM,YAAA,MAAM,EAAEnD,iBAAd;AAAiC,YAAA,KAAK,EAAC;AAAvC,YAFJ;AAIEoD,UAAAA,QAAQ,EAAE,MACR,KAAKyC,SAAL,CACE9E,EADF,EAEEE,YAFF,EAGEU,KAHF,EAIET,OAJF,EAKEC,OALF,EAMEC,aANF,EAOEC,WAPF,EAQEC,cARF,EASEC,mBATF,EAUEC,SAVF,EAWEC,eAXF,EAYEC,IAZF;AALJ,SADsB,EAqBtB;AACEyB,UAAAA,OAAO,EACL,MAAC,IAAD;AAAM,YAAA,MAAM,EAAEpD,mBAAd;AAAmC,YAAA,KAAK,EAAC;AAAzC,YAFJ;AAIEqD,UAAAA,QAAQ,EAAE,MAAM,KAAK0C,WAAL,CAAiB/E,EAAjB;AAJlB,SArBsB,CAAxB;AA6BA,eACE,MAAC,YAAD,CAAc,IAAd;AACE,UAAA,EAAE,EAAEA,EADN;AAEE,UAAA,KAAK,EAAEY,KAFT;AAGE,UAAA,kBAAkB,EAAG,oBAAmBuD,IAAK,EAH/C;AAIE,UAAA,eAAe,EAAEU,eAJnB;AAKE,UAAA,cAAc;AALhB,WAOE,kBACE,MAAC,SAAD;AAAW,UAAA,SAAS,EAAC;AAArB,WACE;AAAM,UAAA,KAAK,EAAE;AAAEG,YAAAA,QAAQ,EAAE;AAAZ;AAAb,6BACiB,GADjB,CADF,EAIG9E,YAJH,CADF,CAPF,EAeE,kBACE,MAAC,SAAD;AAAW,UAAA,SAAS,EAAC;AAArB,WACE;AAAM,UAAA,KAAK,EAAE;AAAE8E,YAAAA,QAAQ,EAAE;AAAZ;AAAb,wBADF,EAEG7E,OAFH,CADF,CAfF,EAqBE,kBACE,MAAC,SAAD;AAAW,UAAA,SAAS,EAAC;AAArB,WACE;AAAM,UAAA,KAAK,EAAE;AAAE6E,YAAAA,QAAQ,EAAE;AAAZ;AAAb,wBADF,EAEG5E,OAFH,CADF,CArBF,EA2BE,kBACE,MAAC,SAAD;AAAW,UAAA,SAAS,EAAC;AAArB,WACE;AAAM,UAAA,KAAK,EAAE;AAAE4E,YAAAA,QAAQ,EAAE;AAAZ;AAAb,8BACkB,GADlB,CADF,EAIG3E,aAJH,CADF,CA3BF,EAmCE,kBACE,MAAC,SAAD;AAAW,UAAA,SAAS,EAAC;AAArB,WACE;AAAM,UAAA,KAAK,EAAE;AAAE2E,YAAAA,QAAQ,EAAE;AAAZ;AAAb,4BADF,EAEG1E,WAFH,CADF,CAnCF,EAyCE,kBACE,MAAC,SAAD;AAAW,UAAA,SAAS,EAAC;AAArB,WACE;AAAM,UAAA,KAAK,EAAE;AAAE0E,YAAAA,QAAQ,EAAE;AAAZ;AAAb,gCACoB,GADpB,CADF,EAIGzE,cAJH,CADF,CAzCF,EAiDE,kBACE,MAAC,SAAD;AAAW,UAAA,SAAS,EAAC;AAArB,WACE;AAAM,UAAA,KAAK,EAAE;AAAEyE,YAAAA,QAAQ,EAAE;AAAZ;AAAb,oCACwB,GADxB,CADF,EAIGxE,mBAJH,CADF,CAjDF,EAyDE,kBACE,MAAC,SAAD;AAAW,UAAA,SAAS,EAAC;AAArB,WACE;AAAM,UAAA,KAAK,EAAE;AAAEwE,YAAAA,QAAQ,EAAE;AAAZ;AAAb,0BADF,EAEGvE,SAFH,CADF,CAzDF,EA+DE,kBACE,MAAC,SAAD;AAAW,UAAA,SAAS,EAAC;AAArB,WACE;AAAM,UAAA,KAAK,EAAE;AAAEuE,YAAAA,QAAQ,EAAE;AAAZ;AAAb,+BACmB,GADnB,CADF,EAIGtE,eAJH,CADF,CA/DF,EAuEE,kBACE,MAAC,SAAD;AAAW,UAAA,SAAS,EAAC;AAArB,WACE;AAAM,UAAA,KAAK,EAAE;AAAEsE,YAAAA,QAAQ,EAAE;AAAZ;AAAb,oBADF,EAEGrE,IAFH,CADF,CAvEF,CADF;AAgFD;AAjIH,MADF,CAdF,CADF,CADF,CADF,EAyJE,MAAC,KAAD;AACE,MAAA,IAAI,EAAE,KAAKkC,KAAL,CAAWxB,WADnB;AAEE,MAAA,OAAO,EAAE,KAAK4D,UAFhB;AAGE,MAAA,KAAK,EAAC,WAHR;AAIE,MAAA,aAAa,EAAE,KAAKpC,KAAL,CAAWV,WAJ5B;AAKE,MAAA,KAAK,EAAE;AAAE+C,QAAAA,OAAO,EAAE;AAAX,OALT;AAME,MAAA,OAAO,EAAE,KAAKrC,KAAL,CAAWD;AANtB,OAQE,MAAC,KAAD,CAAO,OAAP,QACE,MAAC,KAAD;AAAO,MAAA,SAAS,EAAC;AAAjB,OACE,MAAC,KAAD,CAAO,IAAP,QACE;AAAK,MAAA,KAAK,EAAE;AAAEuC,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB;AAAZ,OACE,MAAC,QAAD;AACE,MAAA,cAAc,EAAE,KAAKvC,KAAL,CAAWK,cAD7B;AAEE,MAAA,MAAM,EAAE,KAAKmC,kBAFf;AAGE,MAAA,iBAAiB,EAAE,KAAKC;AAH1B,OAKGvB,UALH,EAMGC,YANH,CADF,EASE,MAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWrB;AAAjC,MATF,CADF,CADF,EAcE,MAAC,KAAD,CAAO,IAAP,QACE,MAAC,SAAD;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,KAAK,EAAE,KAAKqB,KAAL,CAAW3C,YAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKqF,kBAHjB;AAIE,MAAA,WAAW,EAAC,qBAJd;AAKE,MAAA,KAAK,EAAE,KAAK1C,KAAL,CAAWpB;AALpB,MADF,CAdF,EAuBE,MAAC,KAAD,CAAO,IAAP,QACE,MAAC,SAAD;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,KAAK,EAAE,KAAKoB,KAAL,CAAW1C,OAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKqF,aAHjB;AAIE,MAAA,WAAW,EAAC,gBAJd;AAKE,MAAA,KAAK,EAAE,KAAK3C,KAAL,CAAWnB;AALpB,MADF,CAvBF,EAgCE,MAAC,KAAD,CAAO,IAAP,QACE,MAAC,SAAD;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,KAAK,EAAE,KAAKmB,KAAL,CAAWzC,OAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKqF,aAHjB;AAIE,MAAA,WAAW,EAAC,gBAJd;AAKE,MAAA,KAAK,EAAE,KAAK5C,KAAL,CAAWlB;AALpB,MADF,CAhCF,EAyCE,MAAC,KAAD,CAAO,IAAP,QACE,MAAC,SAAD;AACE,MAAA,KAAK,EAAC,gBADR;AAEE,MAAA,KAAK,EAAE,KAAKkB,KAAL,CAAWxC,aAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKqF,mBAHjB;AAIE,MAAA,WAAW,EAAC,sBAJd;AAKE,MAAA,KAAK,EAAE,KAAK7C,KAAL,CAAWjB;AALpB,MADF,CAzCF,EAkDE,MAAC,KAAD,CAAO,IAAP,QACE,MAAC,SAAD;AACE,MAAA,KAAK,EAAC,cADR;AAEE,MAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWvC,WAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKqF,iBAHjB;AAIE,MAAA,WAAW,EAAC,oBAJd;AAKE,MAAA,KAAK,EAAE,KAAK9C,KAAL,CAAWhB;AALpB,MADF,CAlDF,EA2DE,MAAC,KAAD,CAAO,IAAP,QACE,MAAC,SAAD;AACE,MAAA,KAAK,EAAC,kBADR;AAEE,MAAA,KAAK,EAAE,KAAKgB,KAAL,CAAWtC,cAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKqF,mBAHjB;AAIE,MAAA,WAAW,EAAC,uBAJd;AAKE,MAAA,KAAK,EAAE,KAAK/C,KAAL,CAAWf;AALpB,MADF,CA3DF,EAoEE,MAAC,KAAD,CAAO,IAAP,QACE,MAAC,SAAD;AACE,MAAA,KAAK,EAAC,uBADR;AAEE,MAAA,KAAK,EAAE,KAAKe,KAAL,CAAWrC,mBAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKqF,yBAHjB;AAIE,MAAA,WAAW,EAAC,4BAJd;AAKE,MAAA,KAAK,EAAE,KAAKhD,KAAL,CAAWd;AALpB,MADF,CApEF,EA6EE,MAAC,KAAD,CAAO,IAAP,QACE,MAAC,SAAD;AACE,MAAA,KAAK,EAAC,YADR;AAEE,MAAA,KAAK,EAAE,KAAKc,KAAL,CAAWpC,SAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKqF,eAHjB;AAIE,MAAA,WAAW,EAAC,kBAJd;AAKE,MAAA,KAAK,EAAE,KAAKjD,KAAL,CAAWb;AALpB,MADF,CA7EF,EAsFE,MAAC,KAAD,CAAO,IAAP,QACE,MAAC,SAAD;AACE,MAAA,KAAK,EAAC,iBADR;AAEE,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWnC,eAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKqF,qBAHjB;AAIE,MAAA,WAAW,EAAC,uBAJd;AAKE,MAAA,KAAK,EAAE,KAAKlD,KAAL,CAAWZ;AALpB,MADF,CAtFF,EA+FE,MAAC,KAAD,CAAO,IAAP,QACE,MAAC,SAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,KAAK,EAAE,KAAKY,KAAL,CAAWlC,IAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKqF,UAHjB;AAIE,MAAA,WAAW,EAAC,YAJd;AAKE,MAAA,KAAK,EAAE,KAAKnD,KAAL,CAAWX;AALpB,MADF,CA/FF,CADF,CARF,CAzJF,EA6QE,MAAC,KAAD;AACE,MAAA,IAAI,EAAE,KAAKW,KAAL,CAAWF,iBADnB;AAEE,MAAA,OAAO,EAAE,KAAKsD,uBAFhB;AAGE,MAAA,KAAK,EAAC,+BAHR;AAIE,MAAA,OAAO,EAAE,KAAKpD,KAAL,CAAWD,OAJtB;AAKE,MAAA,aAAa,EAAE;AACbR,QAAAA,OAAO,EAAE,KADI;AAEbC,QAAAA,QAAQ,EAAE,KAAK6D;AAFF,OALjB;AASE,MAAA,gBAAgB,EAAE;AAChB9D,QAAAA,OAAO,EAAE,IADO;AAEhBC,QAAAA,QAAQ,EAAE,MAAM;AACd,eAAK5C,QAAL,CAAc;AAAEkD,YAAAA,iBAAiB,EAAE;AAArB,WAAd;AACD;AAJe;AATpB,MA7QF,CADF;AAgSD;;AAn3B8C","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Layout,\r\n  Card,\r\n  ResourceList,\r\n  TextStyle,\r\n  Icon,\r\n  Thumbnail,\r\n  Modal,\r\n  Stack,\r\n  DropZone,\r\n  InlineError,\r\n  TextField\r\n} from \"@shopify/polaris\";\r\nimport { DeleteMajorMonotone, EditMajorMonotone } from \"@shopify/polaris-icons\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allImageData: [],\r\n      listItemCount: 0,\r\n      imageListItems: [],\r\n      selectedListItems: [],\r\n      activeModal: false,\r\n      modalAction: {\r\n        content: \"Add\",\r\n        onAction: this.handleAddImages\r\n      },\r\n      loading: false,\r\n      file: null,\r\n      validImageTypes: [\"image/gif\", \"image/jpeg\", \"image/png\"],\r\n      openFileDialog: false,\r\n      fileUpload: \"\",\r\n      uploadedFile: \"\",\r\n      fileError: \"\",\r\n      id: \"\",\r\n      fileURL: \"\",\r\n      fileFlag: false,\r\n      oilNameFlag: false,\r\n      popularFlag: false,\r\n      activeDeleteModal: false,\r\n      supplierName: \"\",\r\n      oilName: \"\",\r\n      oilType: \"\",\r\n      functionalSub: \"\",\r\n      aromaticSub: \"\",\r\n      blendsWellWith: \"\",\r\n      aromaticDescription: \"\",\r\n      aromaType: \"\",\r\n      classifications: \"\",\r\n      note: \"\",\r\n      supplierNameError: \"\",\r\n      oilNameError: \"\",\r\n      oilTypeError: \"\",\r\n      functionalSubError: \"\",\r\n      aromaticSubError: \"\",\r\n      blendWellWithError: \"\",\r\n      aromaticDescriptionError: \"\",\r\n      aromaTypeError: \"\",\r\n      classificationsError: \"\",\r\n      noteError: \"\"\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.getList();\r\n  }\r\n\r\n  getList = async () => {\r\n    try {\r\n      let response = await axios.get(\"https://\" + host + \"/drop\");\r\n      this.setState({ allImageData: response.data });\r\n      let allImageData = response.data;\r\n\r\n      let imageListItemsData = [];\r\n      for (let i in allImageData) {\r\n        let item = allImageData[i];\r\n        imageListItemsData.push({\r\n          id: item._id,\r\n          supplierName: item.supplierName,\r\n          oilName: item.oilName,\r\n          oilType: item.oilType,\r\n          functionalSub: item.functionalSub,\r\n          aromaticSub: item.aromaticSub,\r\n          blendsWellWith: item.blendsWellWith,\r\n          aromaticDescription: item.aromaticDescription,\r\n          aromaType: item.aromaType,\r\n          classifications: item.classifications,\r\n          note: item.note,\r\n          media: <Thumbnail source={item.filepath} alt={item.filename} />\r\n        });\r\n      }\r\n      this.setState({\r\n        imageListItems: imageListItemsData,\r\n        listItemCount: imageListItemsData.length\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  addNewImage = () => {\r\n    this.setState({\r\n      activeModal: true,\r\n      file: null,\r\n      fileURL: \"\",\r\n      supplierName: \"\",\r\n      oilName: \"\",\r\n      oilType: \"\",\r\n      functionalSub: \"\",\r\n      aromaticSub: \"\",\r\n      blendsWellWith: \"\",\r\n      aromaticDescription: \"\",\r\n      aromaType: \"\",\r\n      classifications: \"\",\r\n      note: \"\",\r\n      fileError: \"\",\r\n      supplierNameError: \"\",\r\n      oilNameError: \"\",\r\n      oilTypeError: \"\",\r\n      functionalSubError: \"\",\r\n      aromaticSubError: \"\",\r\n      blendWellWithError: \"\",\r\n      aromaticDescriptionError: \"\",\r\n      aromaTypeError: \"\",\r\n      classificationsError: \"\",\r\n      noteError: \"\",\r\n      modalAction: {\r\n        content: \"Add\",\r\n        onAction: this.handleAddImages\r\n      }\r\n    });\r\n  };\r\n\r\n  setSelectedListItems = items => {\r\n    console.log(items);\r\n  };\r\n\r\n  editImage = (\r\n    id,\r\n    supplierName,\r\n    media,\r\n    oilName,\r\n    oilType,\r\n    functionalSub,\r\n    aromaticSub,\r\n    blendsWellWith,\r\n    aromaticDescription,\r\n    aromaType,\r\n    classifications,\r\n    note\r\n  ) => {\r\n    console.log(\r\n      id,\r\n      supplierName,\r\n      media,\r\n      oilName,\r\n      oilType,\r\n      functionalSub,\r\n      aromaticSub,\r\n      blendsWellWith,\r\n      aromaticDescription,\r\n      aromaType,\r\n      classifications,\r\n      note\r\n    );\r\n    this.setState({\r\n      modalAction: {\r\n        content: \"Save\",\r\n        onAction: this.handleEditImages\r\n      },\r\n      fileError: \"\",\r\n      supplierNameError: \"\",\r\n      oilNameError: \"\",\r\n      oilTypeError: \"\",\r\n      functionalSubError: \"\",\r\n      aromaticSubError: \"\",\r\n      blendWellWithError: \"\",\r\n      aromaticDescriptionError: \"\",\r\n      aromaTypeError: \"\",\r\n      classificationsError: \"\",\r\n      noteError: \"\",\r\n      id: id,\r\n      file: null,\r\n      fileURL: media.props.source,\r\n      supplierName: supplierName,\r\n      oilName: oilName,\r\n      oilType: oilType,\r\n      functionalSub: functionalSub,\r\n      aromaticSub: aromaticSub,\r\n      blendsWellWith: blendsWellWith,\r\n      aromaticDescription: aromaticDescription,\r\n      aromaType: aromaType,\r\n      classifications: classifications,\r\n      note: note,\r\n      activeModal: true,\r\n      fileFlag: false\r\n    });\r\n  };\r\n\r\n  deleteImage = id => {\r\n    this.setState({\r\n      id: id,\r\n      activeDeleteModal: true\r\n    });\r\n    console.log(id);\r\n  };\r\n\r\n  confirmDelete = async () => {\r\n    this.setState({ loading: true });\r\n    let response = await axios.get(\r\n      `https://${host}/drop/deleteImage?id=${this.state.id}`\r\n    );\r\n    console.log(response.data);\r\n    if (response.data === \"success\") {\r\n      this.getList();\r\n      this.setState({\r\n        loading: false,\r\n        activeDeleteModal: false\r\n      });\r\n    } else {\r\n      console.log(response.data);\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ activeModal: false });\r\n  };\r\n\r\n  handleDropZoneDrop = (_dropFiles, acceptedFiles, _rejectedFiles) => {\r\n    this.setState({\r\n      file: acceptedFiles[0],\r\n      fileError: \"\",\r\n      fileFlag: true,\r\n      fileURL: \"\"\r\n    });\r\n  };\r\n\r\n  toggleOpenFileDialog = () => {\r\n    this.setState({ openFileDialog: !this.state.openFileDialog });\r\n    console.log(\"toggle\");\r\n  };\r\n\r\n  updateSupplierName = value => {\r\n    if (this.state.supplierName !== value) this.setState({ popularFlag: true });\r\n    this.setState({\r\n      supplierName: value,\r\n      supplierNameError: \"\"\r\n    });\r\n  };\r\n\r\n  updateOilName = value => {\r\n    if (this.state.oilName !== value) this.setState({ oilNameFlag: true });\r\n    this.setState({\r\n      oilName: value,\r\n      oilNameError: \"\"\r\n    });\r\n  };\r\n  updateOilType = value => {\r\n    if (this.state.oilType !== value) this.setState({ popularFlag: true });\r\n    this.setState({\r\n      oilType: value,\r\n      oilTypeError: \"\"\r\n    });\r\n  };\r\n  updateFunctionalSub = value => {\r\n    console.log(\"pre:\" + this.state.functionalSub + \"new:\" + value);\r\n    if (this.state.functionalSub !== value)\r\n      this.setState({ popularFlag: true });\r\n    this.setState({\r\n      functionalSub: value,\r\n      functionalSubError: \"\"\r\n    });\r\n  };\r\n  updateAromaticSub = value => {\r\n    if (this.state.aromaticSub !== value) this.setState({ popularFlag: true });\r\n    this.setState({\r\n      aromaticSub: value,\r\n      aromaticSubError: \"\"\r\n    });\r\n  };\r\n  updateBlendWellWith = value => {\r\n    if (this.state.blendsWellWith !== value)\r\n      this.setState({ popularFlag: true });\r\n    this.setState({\r\n      blendsWellWith: value,\r\n      blendWellWithError: \"\"\r\n    });\r\n  };\r\n  updateAromaticDescription = value => {\r\n    if (this.state.aromaticDescription !== value)\r\n      this.setState({ popularFlag: true });\r\n    this.setState({\r\n      aromaticDescription: value,\r\n      aromaticDescriptionError: \"\"\r\n    });\r\n  };\r\n  updateAromaType = value => {\r\n    if (this.state.aromaType !== value) this.setState({ popularFlag: true });\r\n    this.setState({\r\n      aromaType: value,\r\n      aromaTypeError: \"\"\r\n    });\r\n  };\r\n  updateClassifications = value => {\r\n    if (this.state.classifications !== value)\r\n      this.setState({ popularFlag: true });\r\n    this.setState({\r\n      classifications: value,\r\n      classificationsError: \"\"\r\n    });\r\n  };\r\n  updateNote = value => {\r\n    if (this.state.note !== value) this.setState({ popularFlag: true });\r\n    this.setState({\r\n      note: value,\r\n      noteError: \"\"\r\n    });\r\n  };\r\n\r\n  handleAddImages = () => {\r\n    if (\r\n      this.state.file === null &&\r\n      this.state.supplierName === \"\" &&\r\n      this.state.oilName === \"\" &&\r\n      this.state.oilType === \"\" &&\r\n      this.state.aromaType === \"\" &&\r\n      this.state.classifications === \"\" &&\r\n      this.state.note === \"\"\r\n    ) {\r\n      this.setState({\r\n        fileError: \"Need Image\",\r\n        supplierNameError: \"Need Supplier Name\",\r\n        oilNameError: \"Need Oil Name\",\r\n        oilTypeError: \"Need Oil Type\",\r\n        aromaTypeError: \"Need Aroma Type\",\r\n        classificationsError: \"Need Classifications\",\r\n        noteError: \"Need Note\"\r\n      });\r\n      return;\r\n    } else if (this.state.file === null) {\r\n      this.setState({\r\n        fileError: \"Need Image\"\r\n      });\r\n      return;\r\n    } else if (this.state.supplierName === \"\") {\r\n      this.setState({\r\n        supplierNameError: \"Need Supplier Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.oilName === \"\") {\r\n      this.setState({\r\n        oilNameError: \"Need Oil Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.oilType === \"\") {\r\n      this.setState({\r\n        oilTypeError: \"Need Oil Type\"\r\n      });\r\n      return;\r\n    } else if (this.state.aromaType === \"\") {\r\n      this.setState({\r\n        aromaTypeError: \"Need Aroma Type\"\r\n      });\r\n      return;\r\n    } else if (this.state.classifications === \"\") {\r\n      this.setState({\r\n        classificationsError: \"Need Classifications\"\r\n      });\r\n      return;\r\n    } else if (this.state.note === \"\") {\r\n      this.setState({\r\n        noteError: \"Need Note\"\r\n      });\r\n      return;\r\n    }\r\n    for (let i in this.state.allImageData) {\r\n      let item = this.state.allImageData[i];\r\n      if (item.filename === this.state.oilName) {\r\n        this.setState({\r\n          oilNameError: \"Oil Name Exist\"\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.setState({ loading: true });\r\n    let formdata = new FormData();\r\n    formdata.append(\"file\", this.state.file);\r\n    formdata.append(\"supplierName\", this.state.supplierName);\r\n    formdata.append(\"oilName\", this.state.oilName);\r\n    formdata.append(\"oilType\", this.state.oilType);\r\n    formdata.append(\"functionalSub\", this.state.functionalSub);\r\n    formdata.append(\"aromaticSub\", this.state.aromaticSub);\r\n    formdata.append(\"blendsWellWith\", this.state.blendsWellWith);\r\n    formdata.append(\"aromaticDescription\", this.state.aromaticDescription);\r\n    formdata.append(\"aromaType\", this.state.aromaType);\r\n    formdata.append(\"classifications\", this.state.classifications);\r\n    formdata.append(\"note\", this.state.note);\r\n\r\n    axios\r\n      .post(\"https://\" + host + \"/drop\", formdata, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.data === \"success\") {\r\n          this.setState({ activeModal: false });\r\n          this.getList();\r\n          this.setState({ loading: false });\r\n          console.log(res.data);\r\n        } else {\r\n          console.log(res.data);\r\n        }\r\n      });\r\n  };\r\n\r\n  handleEditImages = () => {\r\n    console.log(\r\n      this.state.file,\r\n      this.state.supplierName,\r\n      this.state.oilName,\r\n      this.state.oilType,\r\n      this.state.functionalSub,\r\n      this.state.aromaticSub,\r\n      this.state.blendsWellWith,\r\n      this.state.aromaticDescription,\r\n      this.state.aromaType,\r\n      this.state.classifications,\r\n      this.state.note\r\n    );\r\n    if (\r\n      this.state.file === null &&\r\n      this.state.supplierName === \"\" &&\r\n      this.state.oilName === \"\" &&\r\n      this.state.oilType === \"\" &&\r\n      this.state.aromaType === \"\" &&\r\n      this.state.classifications === \"\" &&\r\n      this.state.note === \"\"\r\n    ) {\r\n      this.setState({\r\n        fileError: \"Need Image\",\r\n        supplierNameError: \"Need Supplier Name\",\r\n        oilNameError: \"Need Oil Name\",\r\n        oilTypeError: \"Need Oil Type\",\r\n        aromaTypeError: \"Need Aroma Type\",\r\n        classificationsError: \"Need Classifications\",\r\n        noteError: \"Need Note\"\r\n      });\r\n      return;\r\n    } else if (this.state.supplierName === \"\") {\r\n      this.setState({\r\n        supplierNameError: \"Need Supplier Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.oilName === \"\") {\r\n      this.setState({\r\n        oilNameError: \"Need Oil Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.oilType === \"\") {\r\n      this.setState({\r\n        oilTypeError: \"Need Oil Type\"\r\n      });\r\n      return;\r\n    } else if (this.state.aromaType === \"\") {\r\n      this.setState({\r\n        aromaTypeError: \"Need Aroma Type\"\r\n      });\r\n      return;\r\n    } else if (this.state.classifications === \"\") {\r\n      this.setState({\r\n        classificationsError: \"Need Classifications\"\r\n      });\r\n      return;\r\n    } else if (this.state.note === \"\") {\r\n      this.setState({\r\n        noteError: \"Need Note\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (\r\n      !this.state.fileFlag &&\r\n      !this.state.oilNameFlag &&\r\n      !this.state.popularFlag\r\n    ) {\r\n      this.setState({ activeModal: false });\r\n      return;\r\n    }\r\n\r\n    if (this.state.fileFlag) {\r\n      this.setState({ loading: true });\r\n      let formdata = new FormData();\r\n      formdata.append(\"file\", this.state.file);\r\n      formdata.append(\"supplierName\", this.state.supplierName);\r\n      formdata.append(\"oilName\", this.state.oilName);\r\n      formdata.append(\"oilType\", this.state.oilType);\r\n      formdata.append(\"functionalSub\", this.state.functionalSub);\r\n      formdata.append(\"aromaticSub\", this.state.aromaticSub);\r\n      formdata.append(\"blendsWellWith\", this.state.blendsWellWith);\r\n      formdata.append(\"aromaticDescription\", this.state.aromaticDescription);\r\n      formdata.append(\"aromaType\", this.state.aromaType);\r\n      formdata.append(\"classifications\", this.state.classifications);\r\n      formdata.append(\"note\", this.state.note);\r\n      formdata.append(\"id\", this.state.id);\r\n      axios\r\n        .post(\"https://\" + host + \"/drop/editWithFile\", formdata, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\"\r\n          }\r\n        })\r\n        .then(res => {\r\n          if (res.data === \"success\") {\r\n            this.getList();\r\n            this.setState({\r\n              activeModal: false,\r\n              loading: false\r\n            });\r\n            console.log(res.data);\r\n          } else {\r\n            console.log(res.data);\r\n          }\r\n        });\r\n    } else {\r\n      if (this.state.oilNameFlag) {\r\n        this.setState({ loading: true });\r\n        axios\r\n          .post(\"https://\" + host + \"/drop/editWithoutFile\", {\r\n            id: this.state.id,\r\n            supplierName: this.state.supplierName,\r\n            oilName: this.state.oilName,\r\n            oilType: this.state.oilType,\r\n            functionalSub: this.state.functionalSub,\r\n            aromaticSub: this.state.aromaticSub,\r\n            blendsWellWith: this.state.blendsWellWith,\r\n            aromaticDescription: this.state.aromaticDescription,\r\n            aromaType: this.state.aromaType,\r\n            classifications: this.state.classifications,\r\n            note: this.state.note\r\n          })\r\n          .then(res => {\r\n            if (res.data === \"success\") {\r\n              this.getList();\r\n              this.setState({\r\n                activeModal: false,\r\n                loading: false\r\n              });\r\n              console.log(res.data);\r\n            } else {\r\n              console.log(res.data);\r\n            }\r\n          });\r\n      } else if (this.state.popularFlag) {\r\n        this.setState({ loading: true });\r\n        axios\r\n          .post(\"https://\" + host + \"/drop/editWithoutFile\", {\r\n            id: this.state.id,\r\n            supplierName: this.state.supplierName,\r\n            oilType: this.state.oilType,\r\n            functionalSub: this.state.functionalSub,\r\n            aromaticSub: this.state.aromaticSub,\r\n            blendsWellWith: this.state.blendsWellWith,\r\n            aromaticDescription: this.state.aromaticDescription,\r\n            aromaType: this.state.aromaType,\r\n            classifications: this.state.classifications,\r\n            note: this.state.note\r\n          })\r\n          .then(res => {\r\n            if (res.data === \"success\") {\r\n              this.getList();\r\n              this.setState({\r\n                activeModal: false,\r\n                loading: false\r\n              });\r\n              console.log(res.data);\r\n            } else {\r\n              console.log(res.data);\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const fileUpload =\r\n      this.state.fileURL === \"\" ? (\r\n        !this.state.file && <DropZone.FileUpload />\r\n      ) : (\r\n        <Stack>\r\n          <Thumbnail size=\"large\" alt=\"edit\" source={this.state.fileURL} />\r\n        </Stack>\r\n      );\r\n\r\n    const uploadedFile = this.state.file && (\r\n      <Stack>\r\n        <Thumbnail\r\n          size=\"large\"\r\n          alt={this.state.file.name}\r\n          source={\r\n            this.state.validImageTypes.indexOf(this.state.file.type) > 0\r\n              ? window.URL.createObjectURL(this.state.file)\r\n              : \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\r\n          }\r\n        />\r\n      </Stack>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Layout.Section>\r\n            <Card\r\n              title=\"Drop Images\"\r\n              actions={[\r\n                {\r\n                  content: \"Add Drop Image\",\r\n                  onAction: this.addNewImage\r\n                }\r\n              ]}\r\n            >\r\n              <Card.Section>\r\n                <TextStyle variation=\"subdued\">\r\n                  {this.state.listItemCount} Drop Images\r\n                </TextStyle>\r\n              </Card.Section>\r\n              <Card.Section>\r\n                <ResourceList\r\n                  resourceName={{ singular: \"image\", plural: \"images\" }}\r\n                  items={this.state.imageListItems}\r\n                  selectedItems={this.state.selectedListItems}\r\n                  onSelectionChange={this.setSelectedListItems}\r\n                  renderItem={item => {\r\n                    const {\r\n                      id,\r\n                      supplierName,\r\n                      media,\r\n                      oilName,\r\n                      oilType,\r\n                      functionalSub,\r\n                      aromaticSub,\r\n                      blendsWellWith,\r\n                      aromaticDescription,\r\n                      aromaType,\r\n                      classifications,\r\n                      note\r\n                    } = item;\r\n                    const shortcutActions = [\r\n                      {\r\n                        content: (\r\n                          <Icon source={EditMajorMonotone} color=\"red\" />\r\n                        ),\r\n                        onAction: () =>\r\n                          this.editImage(\r\n                            id,\r\n                            supplierName,\r\n                            media,\r\n                            oilName,\r\n                            oilType,\r\n                            functionalSub,\r\n                            aromaticSub,\r\n                            blendsWellWith,\r\n                            aromaticDescription,\r\n                            aromaType,\r\n                            classifications,\r\n                            note\r\n                          )\r\n                      },\r\n                      {\r\n                        content: (\r\n                          <Icon source={DeleteMajorMonotone} color=\"red\" />\r\n                        ),\r\n                        onAction: () => this.deleteImage(id)\r\n                      }\r\n                    ];\r\n\r\n                    return (\r\n                      <ResourceList.Item\r\n                        id={id}\r\n                        media={media}\r\n                        accessibilityLabel={`View details for ${name}`}\r\n                        shortcutActions={shortcutActions}\r\n                        persistActions\r\n                      >\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>\r\n                              Supplier Name:{\" \"}\r\n                            </span>\r\n                            {supplierName}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Oil Name: </span>\r\n                            {oilName}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Oil Type: </span>\r\n                            {oilType}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>\r\n                              Functional Sub:{\" \"}\r\n                            </span>\r\n                            {functionalSub}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Aromatic Sub: </span>\r\n                            {aromaticSub}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>\r\n                              Blends Well With:{\" \"}\r\n                            </span>\r\n                            {blendsWellWith}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>\r\n                              Aromatic Description:{\" \"}\r\n                            </span>\r\n                            {aromaticDescription}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Aroma Type: </span>\r\n                            {aromaType}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>\r\n                              Classifications:{\" \"}\r\n                            </span>\r\n                            {classifications}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Note: </span>\r\n                            {note}\r\n                          </TextStyle>\r\n                        </h3>\r\n                      </ResourceList.Item>\r\n                    );\r\n                  }}\r\n                />\r\n              </Card.Section>\r\n            </Card>\r\n          </Layout.Section>\r\n        </Layout>\r\n        <Modal\r\n          open={this.state.activeModal}\r\n          onClose={this.closeModal}\r\n          title=\"Add Image\"\r\n          primaryAction={this.state.modalAction}\r\n          style={{ padding: \"20px\" }}\r\n          loading={this.state.loading}\r\n        >\r\n          <Modal.Section>\r\n            <Stack alignment=\"center\">\r\n              <Stack.Item>\r\n                <div style={{ width: 100, height: 100 }}>\r\n                  <DropZone\r\n                    openFileDialog={this.state.openFileDialog}\r\n                    onDrop={this.handleDropZoneDrop}\r\n                    onFileDialogClose={this.toggleOpenFileDialog}\r\n                  >\r\n                    {fileUpload}\r\n                    {uploadedFile}\r\n                  </DropZone>\r\n                  <InlineError message={this.state.fileError} />\r\n                </div>\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Supplier Name\"\r\n                  value={this.state.supplierName}\r\n                  onChange={this.updateSupplierName}\r\n                  placeholder=\"Enter Supplier Name\"\r\n                  error={this.state.supplierNameError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Oil Name\"\r\n                  value={this.state.oilName}\r\n                  onChange={this.updateOilName}\r\n                  placeholder=\"Enter Oil Name\"\r\n                  error={this.state.oilNameError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Oil Type\"\r\n                  value={this.state.oilType}\r\n                  onChange={this.updateOilType}\r\n                  placeholder=\"Enter Oil Type\"\r\n                  error={this.state.oilTypeError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Functional Sub\"\r\n                  value={this.state.functionalSub}\r\n                  onChange={this.updateFunctionalSub}\r\n                  placeholder=\"Enter Functional Sub\"\r\n                  error={this.state.functionalSubError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Aromatic Sub\"\r\n                  value={this.state.aromaticSub}\r\n                  onChange={this.updateAromaticSub}\r\n                  placeholder=\"Enter Aromatic Sub\"\r\n                  error={this.state.aromaticSubError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Blends well with\"\r\n                  value={this.state.blendsWellWith}\r\n                  onChange={this.updateBlendWellWith}\r\n                  placeholder=\"Enter Blend well with\"\r\n                  error={this.state.blendWellWithError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Aromatic Descriptions\"\r\n                  value={this.state.aromaticDescription}\r\n                  onChange={this.updateAromaticDescription}\r\n                  placeholder=\"Enter Aromatic Description\"\r\n                  error={this.state.aromaticDescriptionError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Aroma Type\"\r\n                  value={this.state.aromaType}\r\n                  onChange={this.updateAromaType}\r\n                  placeholder=\"Enter Aroma Type\"\r\n                  error={this.state.aromaTypeError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Classifications\"\r\n                  value={this.state.classifications}\r\n                  onChange={this.updateClassifications}\r\n                  placeholder=\"Enter Classifications\"\r\n                  error={this.state.classificationsError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Note\"\r\n                  value={this.state.note}\r\n                  onChange={this.updateNote}\r\n                  placeholder=\"Enter Note\"\r\n                  error={this.state.noteError}\r\n                />\r\n              </Stack.Item>\r\n            </Stack>\r\n          </Modal.Section>\r\n        </Modal>\r\n        <Modal\r\n          open={this.state.activeDeleteModal}\r\n          onClose={this.handleDeleteModalChange}\r\n          title=\"Do you really want to delete?\"\r\n          loading={this.state.loading}\r\n          primaryAction={{\r\n            content: \"Yes\",\r\n            onAction: this.confirmDelete\r\n          }}\r\n          secondaryActions={{\r\n            content: \"No\",\r\n            onAction: () => {\r\n              this.setState({ activeDeleteModal: false });\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}