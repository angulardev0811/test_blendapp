{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Layout, Card, ResourceList, TextStyle, Icon, Thumbnail, Modal, Stack, DropZone, InlineError, TextField, Autocomplete } from \"@shopify/polaris\";\nimport { DeleteMajorMonotone, EditMajorMonotone } from \"@shopify/polaris-icons\";\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getList\", function _callee() {\n      var response, allImageData, allCategorys, i, filterCategory, categoryArray, _i, item, imageListItemsData, _i2, _item;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(\"https://\" + host + \"/drop\"));\n\n            case 3:\n              response = _context.sent;\n\n              _this.setState({\n                allImageData: response.data\n              });\n\n              allImageData = response.data;\n              allCategorys = [];\n\n              for (i in allImageData) {\n                allCategorys.push(allImageData[i].category);\n              }\n\n              filterCategory = allCategorys.filter(function (elem, index, self) {\n                return index === self.indexOf(elem);\n              });\n              categoryArray = [];\n\n              for (_i in filterCategory) {\n                item = filterCategory[_i];\n                categoryArray.push({\n                  value: item,\n                  label: item\n                });\n              }\n\n              _this.setState({\n                categoryInitOptions: categoryArray,\n                categoryOptions: categoryArray\n              });\n\n              imageListItemsData = [];\n\n              for (_i2 in allImageData) {\n                _item = allImageData[_i2];\n                imageListItemsData.push({\n                  id: _item._id,\n                  supplierName: _item.supplierName,\n                  oilName: _item.oilName,\n                  oilType: _item.oilType,\n                  functionalSub: _item.functionalSub,\n                  aromaticSub: _item.aromaticSub,\n                  blendsWellWith: _item.blendsWellWith,\n                  aromaticDescription: _item.aromaticDescription,\n                  aromaType: _item.aromaType,\n                  classifications: _item.classifications,\n                  note: _item.note,\n                  media: __jsx(Thumbnail, {\n                    source: _item.filepath,\n                    alt: _item.filename\n                  })\n                });\n              }\n\n              _this.setState({\n                imageListItems: imageListItemsData,\n                listItemCount: imageListItemsData.length\n              });\n\n              _context.next = 20;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 17]], Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addNewImage\", function () {\n      _this.setState({\n        activeModal: true,\n        file: null,\n        fileURL: \"\",\n        supplierName: \"\",\n        oilName: \"\",\n        oilType: \"\",\n        functionalSub: \"\",\n        aromaticSub: \"\",\n        blendsWellWith: \"\",\n        aromaticDescription: \"\",\n        aromaType: \"\",\n        classifications: \"\",\n        note: \"\",\n        fileError: \"\",\n        supplierNameError: \"\",\n        oilNameError: \"\",\n        oilTypeError: \"\",\n        functionalSubError: \"\",\n        aromaticSubError: \"\",\n        blendWellWithError: \"\",\n        aromaticDescriptionError: \"\",\n        aromaTypeError: \"\",\n        classificationsError: \"\",\n        noteError: \"\",\n        modalAction: {\n          content: \"Add\",\n          onAction: _this.handleAddImages\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setSelectedListItems\", function (items) {\n      console.log(items);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"editImage\", function (id, name, media, category) {\n      console.log(id, name, media, category);\n\n      _this.setState({\n        modalAction: {\n          content: \"Save\",\n          onAction: _this.handleEditImages\n        },\n        fileError: \"\",\n        imageNameError: \"\",\n        imageCategoryError: \"\",\n        id: id,\n        imageName: name,\n        file: null,\n        fileURL: media.props.source,\n        categoryValue: category,\n        activeModal: true,\n        fileFlag: false,\n        nameFlag: false,\n        categoryFlag: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteImage\", function (id) {\n      _this.setState({\n        id: id,\n        activeDeleteModal: true\n      });\n\n      console.log(id);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"confirmDelete\", function _callee2() {\n      var response;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(\"https://\".concat(host, \"/drop/deleteImage?id=\").concat(_this.state.id)));\n\n            case 3:\n              response = _context2.sent;\n              console.log(response.data);\n\n              if (response.data === \"success\") {\n                _this.getList();\n\n                _this.setState({\n                  loading: false,\n                  activeDeleteModal: false\n                });\n              } else {\n                console.log(response.data);\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeModal\", function () {\n      _this.setState({\n        activeModal: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropZoneDrop\", function (_dropFiles, acceptedFiles, _rejectedFiles) {\n      _this.setState({\n        file: acceptedFiles[0],\n        fileError: \"\",\n        fileFlag: true,\n        fileURL: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleOpenFileDialog\", function () {\n      _this.setState({\n        openFileDialog: !_this.state.openFileDialog\n      });\n\n      console.log(\"toggle\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateImageName\", function (value) {\n      _this.setState({\n        imageName: value,\n        imageNameError: \"\",\n        nameFlag: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateCategoryOptions\", function (selected) {\n      var selectedValue = selected.map(function (selectedItem) {\n        var matchedOption = _this.state.categoryOptions.find(function (option) {\n          return option.value.match(selectedItem);\n        });\n\n        return matchedOption && matchedOption.label;\n      });\n\n      _this.setState({\n        categorySelectedOptions: []\n      });\n\n      _this.updateCategoryName(selectedValue[0]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateCategoryName\", function (value) {\n      _this.setState({\n        categoryValue: value,\n        imageCategoryError: \"\",\n        categoryFlag: true\n      });\n\n      if (_this.state.categoryValue === \"\") {\n        _this.setState({\n          categorySelectedOptions: _this.state.categoryOptions\n        });\n      }\n\n      var filterRegex = new RegExp(value, \"i\");\n\n      var resultOptions = _this.state.categoryInitOptions.filter(function (option) {\n        return option.label.match(filterRegex);\n      });\n\n      _this.setState({\n        categoryOptions: resultOptions\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateSupplierName\", function (value) {\n      _this.setState({\n        supplierName: value,\n        supplierNameError: \"\" // nameFlag: true\n\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateOilName\", function (value) {\n      _this.setState({\n        oilName: value,\n        oilNameError: \"\" // nameFlag: true\n\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateOilType\", function (value) {\n      _this.setState({\n        oilType: value,\n        oilTypeError: \"\" // nameFlag: true\n\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateFunctionalSub\", function (value) {\n      _this.setState({\n        functionalSub: value,\n        functionalSubError: \"\" // nameFlag: true\n\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateAromaticSub\", function (value) {\n      _this.setState({\n        aromaticSub: value,\n        aromaticSubError: \"\" // nameFlag: true\n\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateBlendWellWith\", function (value) {\n      _this.setState({\n        blendsWellWith: value,\n        blendWellWithError: \"\" // nameFlag: true\n\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateAromaticDescription\", function (value) {\n      _this.setState({\n        aromaticDescription: value,\n        aromaticDescriptionError: \"\" // nameFlag: true\n\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateAromaType\", function (value) {\n      _this.setState({\n        aromaType: value,\n        aromaTypeError: \"\" // nameFlag: true\n\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateClassifications\", function (value) {\n      _this.setState({\n        classifications: value,\n        classificationsError: \"\" // nameFlag: true\n\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateNote\", function (value) {\n      _this.setState({\n        note: value,\n        noteError: \"\" // nameFlag: true\n\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAddImages\", function () {\n      console.log(_this.state.file, _this.state.imageName, _this.state.categoryValue);\n\n      if (_this.state.file === null && _this.state.supplierName === \"\" && _this.state.oilName === \"\" && _this.state.oilType === \"\" && _this.state.aromaType === \"\" && _this.state.classifications === \"\" && _this.state.note === \"\") {\n        _this.setState({\n          fileError: \"Need Image\",\n          supplierNameError: \"Need Supplier Name\",\n          oilNameError: \"Need Oil Name\",\n          oilTypeError: \"Need Oil Type\",\n          aromaTypeError: \"Need Aroma Type\",\n          classificationsError: \"Need Classifications\",\n          noteError: \"Need Note\"\n        });\n\n        return;\n      } else if (_this.state.file === null) {\n        _this.setState({\n          fileError: \"Need Image\"\n        });\n\n        return;\n      } else if (_this.state.supplierName === \"\") {\n        _this.setState({\n          supplierNameError: \"Need Supplier Name\"\n        });\n\n        return;\n      } else if (_this.state.oilName === \"\") {\n        _this.setState({\n          oilNameError: \"Need Oil Name\"\n        });\n\n        return;\n      } else if (_this.state.oilType === \"\") {\n        _this.setState({\n          oilTypeError: \"Need Oil Type\"\n        });\n\n        return;\n      } else if (_this.state.aromaType === \"\") {\n        _this.setState({\n          aromaTypeError: \"Need Aroma Type\"\n        });\n\n        return;\n      } else if (_this.state.classifications === \"\") {\n        _this.setState({\n          classificationsError: \"Need Classifications\"\n        });\n\n        return;\n      } else if (_this.state.note === \"\") {\n        _this.setState({\n          noteError: \"Need Note\"\n        });\n\n        return;\n      }\n\n      for (var i in _this.state.allImageData) {\n        var item = _this.state.allImageData[i];\n\n        if (item.filename === _this.state.oilName) {\n          _this.setState({\n            oilNameError: \"Oil Name Exist\"\n          });\n\n          return;\n        }\n      }\n\n      _this.setState({\n        loading: true\n      });\n\n      var formdata = new FormData();\n      formdata.append(\"file\", _this.state.file);\n      formdata.append(\"supplierName\", _this.state.supplierName);\n      formdata.append(\"oilName\", _this.state.oilName);\n      formdata.append(\"oilType\", _this.state.oilType);\n      formdata.append(\"functionalSub\", _this.state.functionalSub);\n      formdata.append(\"aromaticSub\", _this.state.aromaticSub);\n      formdata.append(\"blendsWellWith\", _this.state.blendsWellWith);\n      formdata.append(\"aromaticDescription\", _this.state.aromaticDescription);\n      formdata.append(\"aromaType\", _this.state.aromaType);\n      formdata.append(\"classifications\", _this.state.classifications);\n      formdata.append(\"note\", _this.state.note);\n      axios.post(\"https://\" + host + \"/drop\", formdata, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (res) {\n        if (res.data === \"success\") {\n          _this.setState({\n            activeModal: false\n          });\n\n          _this.getList();\n\n          _this.setState({\n            loading: false\n          });\n\n          console.log(res.data);\n        } else {\n          console.log(res.data);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEditImages\", function () {\n      if (_this.state.imageName === \"\" && _this.state.categoryValue === \"\") {\n        _this.setState({\n          imageNameError: \"Need Image Name\",\n          imageCategoryError: \"Need Category\"\n        });\n\n        return;\n      } else if (_this.state.imageName === \"\") {\n        _this.setState({\n          imageNameError: \"Need Image Name\"\n        });\n\n        return;\n      } else if (_this.state.categoryValue === \"\") {\n        _this.setState({\n          imageCategoryError: \"Need Category\"\n        });\n\n        return;\n      }\n\n      for (var i in _this.state.allImageData) {\n        var item = _this.state.allImageData[i];\n\n        if (item.filename === _this.state.imageName) {\n          if (_this.state.nameFlag) {\n            _this.setState({\n              imageNameError: \"Image Name Exist\"\n            });\n\n            return;\n          }\n        }\n      }\n\n      if (!_this.state.fileFlag && !_this.state.nameFlag && !_this.state.categoryFlag) {\n        _this.setState({\n          activeModal: false\n        });\n\n        return;\n      }\n\n      if (_this.state.fileFlag) {\n        _this.setState({\n          loading: true\n        });\n\n        var formdata = new FormData();\n        formdata.append(\"file\", _this.state.file);\n        formdata.append(\"filename\", _this.state.imageName);\n        formdata.append(\"category\", _this.state.categoryValue);\n        formdata.append(\"id\", _this.state.id);\n        axios.post(\"https://\" + host + \"/drop/editWithFile\", formdata, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        }).then(function (res) {\n          if (res.data === \"success\") {\n            _this.getList();\n\n            _this.setState({\n              activeModal: false,\n              loading: false\n            });\n\n            console.log(res.data);\n          } else {\n            console.log(res.data);\n          }\n        });\n      } else {\n        if (_this.state.nameFlag) {\n          console.log(\"edit both\");\n\n          _this.setState({\n            loading: true\n          });\n\n          var _formdata = {\n            id: _this.state.id,\n            filename: _this.state.imageName,\n            category: _this.state.categoryValue\n          };\n          axios.post(\"https://\" + host + \"/drop/editWithoutFile\", {\n            data: _formdata\n          }).then(function (res) {\n            if (res.data === \"success\") {\n              _this.getList();\n\n              _this.setState({\n                activeModal: false,\n                loading: false\n              });\n\n              console.log(res.data);\n            } else {\n              console.log(res.data);\n            }\n          });\n        } else if (_this.state.categoryFlag) {\n          console.log(\"edit Category\");\n\n          _this.setState({\n            loading: true\n          });\n\n          var _formdata2 = {\n            id: _this.state.id,\n            category: _this.state.categoryValue\n          };\n          axios.post(\"https://\" + host + \"/drop/editWithoutFile\", {\n            data: _formdata2\n          }).then(function (res) {\n            if (res.data === \"success\") {\n              _this.getList();\n\n              _this.setState({\n                activeModal: false,\n                loading: false\n              });\n\n              console.log(res.data);\n            } else {\n              console.log(res.data);\n            }\n          });\n        }\n      }\n    });\n\n    _this.state = {\n      allImageData: [],\n      listItemCount: 0,\n      imageListItems: [],\n      selectedListItems: [],\n      activeModal: false,\n      modalAction: {\n        content: \"Add\",\n        onAction: _this.handleAddImages\n      },\n      loading: false,\n      file: null,\n      validImageTypes: [\"image/gif\", \"image/jpeg\", \"image/png\"],\n      openFileDialog: false,\n      fileUpload: \"\",\n      uploadedFile: \"\",\n      fileError: \"\",\n      imageNameError: \"\",\n      imageCategoryError: \"\",\n      imageName: \"\",\n      categoryInitOptions: [],\n      categoryOptions: [],\n      categorySelectedOptions: [],\n      categoryTextField: \"\",\n      categoryValue: \"\",\n      id: \"\",\n      fileURL: \"\",\n      fileFlag: false,\n      nameFlag: false,\n      categoryFlag: false,\n      activeDeleteModal: false,\n      host: \"8b430148.ngrok.io\",\n      supplierName: \"\",\n      oilName: \"\",\n      oilType: \"\",\n      functionalSub: \"\",\n      aromaticSub: \"\",\n      blendsWellWith: \"\",\n      aromaticDescription: \"\",\n      aromaType: \"\",\n      classifications: \"\",\n      note: \"\",\n      supplierNameError: \"\",\n      oilNameError: \"\",\n      oilTypeError: \"\",\n      functionalSubError: \"\",\n      aromaticSubError: \"\",\n      blendWellWithError: \"\",\n      aromaticDescriptionError: \"\",\n      aromaTypeError: \"\",\n      classificationsError: \"\",\n      noteError: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              this.getList();\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var categoryTextField = __jsx(Autocomplete.TextField, {\n        onChange: this.updateCategoryName,\n        label: \"Image Category\",\n        value: this.state.categoryValue,\n        placeholder: \"Enter category\",\n        error: this.state.imageCategoryError\n      });\n\n      var fileUpload = this.state.fileURL === \"\" ? !this.state.file && __jsx(DropZone.FileUpload, null) : __jsx(Stack, null, __jsx(Thumbnail, {\n        size: \"large\",\n        alt: \"edit\",\n        source: this.state.fileURL\n      }));\n\n      var uploadedFile = this.state.file && __jsx(Stack, null, __jsx(Thumbnail, {\n        size: \"large\",\n        alt: this.state.file.name,\n        source: this.state.validImageTypes.indexOf(this.state.file.type) > 0 ? window.URL.createObjectURL(this.state.file) : \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\n      }));\n\n      return __jsx(\"div\", null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n        title: \"Drop Images\",\n        actions: [{\n          content: \"Add Drop Image\",\n          onAction: this.addNewImage\n        }]\n      }, __jsx(Card.Section, null, __jsx(TextStyle, {\n        variation: \"subdued\"\n      }, this.state.listItemCount, \" Drop Images\")), __jsx(Card.Section, null, __jsx(ResourceList, {\n        resourceName: {\n          singular: \"image\",\n          plural: \"images\"\n        },\n        items: this.state.imageListItems,\n        selectedItems: this.state.selectedListItems,\n        onSelectionChange: this.setSelectedListItems,\n        renderItem: function renderItem(item) {\n          var id = item.id,\n              supplierName = item.supplierName,\n              media = item.media,\n              oilName = item.oilName,\n              oilType = item.oilType,\n              functionalSub = item.functionalSub,\n              aromaticSub = item.aromaticSub,\n              blendsWellWith = item.blendsWellWith,\n              aromaticDescription = item.aromaticDescription,\n              aromaType = item.aromaType,\n              classifications = item.classifications,\n              note = item.note;\n          var shortcutActions = [{\n            content: __jsx(Icon, {\n              source: EditMajorMonotone,\n              color: \"red\"\n            }),\n            onAction: function onAction() {\n              return _this2.editImage(id, supplierName, media, oilName, oilType, functionalSub, aromaticSub, blendsWellWith, aromaticDescription, aromaType, classifications, note);\n            }\n          }, {\n            content: __jsx(Icon, {\n              source: DeleteMajorMonotone,\n              color: \"red\"\n            }),\n            onAction: function onAction() {\n              return _this2.deleteImage(id);\n            }\n          }];\n          return __jsx(ResourceList.Item, {\n            id: id,\n            media: media,\n            accessibilityLabel: \"View details for \".concat(name),\n            shortcutActions: shortcutActions,\n            persistActions: true\n          }, __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Supplier Name: \"), supplierName)), __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Oil Name: \"), oilName)), __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Oil Type: \"), oilType)), __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Functional Sub: \"), functionalSub)), __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Aromatic Sub: \"), aromaticSub)), __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Blends Well With: \"), blendsWellWith)), __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Aromatic Description: \"), aromaticDescription)), __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Aroma Type: \"), aromaType)), __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Classifications: \"), classifications)), __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Note: \"), note)));\n        }\n      }))))), __jsx(Modal, {\n        open: this.state.activeModal,\n        onClose: this.closeModal,\n        title: \"Add Image\",\n        primaryAction: this.state.modalAction,\n        style: {\n          padding: \"20px\"\n        },\n        loading: this.state.loading\n      }, __jsx(Modal.Section, null, __jsx(Stack, {\n        alignment: \"center\"\n      }, __jsx(Stack.Item, null, __jsx(\"div\", {\n        style: {\n          width: 100,\n          height: 100\n        }\n      }, __jsx(DropZone, {\n        openFileDialog: this.state.openFileDialog,\n        onDrop: this.handleDropZoneDrop,\n        onFileDialogClose: this.toggleOpenFileDialog\n      }, fileUpload, uploadedFile), __jsx(InlineError, {\n        message: this.state.fileError\n      }))), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Supplier Name\",\n        value: this.state.supplierName,\n        onChange: this.updateSupplierName,\n        placeholder: \"Enter Supplier Name\",\n        error: this.state.supplierNameError\n      })), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Oil Name\",\n        value: this.state.oilName,\n        onChange: this.updateOilName,\n        placeholder: \"Enter Oil Name\",\n        error: this.state.oilNameError\n      })), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Oil Type\",\n        value: this.state.oilType,\n        onChange: this.updateOilType,\n        placeholder: \"Enter Oil Type\",\n        error: this.state.oilTypeError\n      })), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Functional Sub\",\n        value: this.state.functionalSub,\n        onChange: this.updateFunctionalSub,\n        placeholder: \"Enter Functional Sub\",\n        error: this.state.functionalSubError\n      })), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Aromatic Sub\",\n        value: this.state.aromaticSub,\n        onChange: this.updateAromaticSub,\n        placeholder: \"Enter Aromatic Sub\",\n        error: this.state.aromaticSubError\n      })), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Blends well with\",\n        value: this.state.blendsWellWith,\n        onChange: this.updateBlendWellWith,\n        placeholder: \"Enter Blend well with\",\n        error: this.state.blendWellWithError\n      })), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Aromatic Descriptions\",\n        value: this.state.aromaticDescription,\n        onChange: this.updateAromaticDescription,\n        placeholder: \"Enter Aromatic Description\",\n        error: this.state.aromaticDescriptionError\n      })), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Aroma Type\",\n        value: this.state.aromaType,\n        onChange: this.updateAromaType,\n        placeholder: \"Enter Aroma Type\",\n        error: this.state.aromaTypeError\n      })), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Classifications\",\n        value: this.state.classifications,\n        onChange: this.updateClassifications,\n        placeholder: \"Enter Classifications\",\n        error: this.state.imageNameError\n      })), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Note\",\n        value: this.state.note,\n        onChange: this.updateNote,\n        placeholder: \"Enter Note\",\n        error: this.state.noteError\n      }))))), __jsx(Modal, {\n        open: this.state.activeDeleteModal,\n        onClose: this.handleDeleteModalChange,\n        title: \"Do you really want to delete?\",\n        loading: this.state.loading,\n        primaryAction: {\n          content: \"Yes\",\n          onAction: this.confirmDelete\n        },\n        secondaryActions: {\n          content: \"No\",\n          onAction: function onAction() {\n            _this2.setState({\n              activeDeleteModal: false\n            });\n          }\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["E:/Lenny/blendapp/pages/Drop.js"],"names":["React","axios","Layout","Card","ResourceList","TextStyle","Icon","Thumbnail","Modal","Stack","DropZone","InlineError","TextField","Autocomplete","DeleteMajorMonotone","EditMajorMonotone","App","props","get","host","response","setState","allImageData","data","allCategorys","i","push","category","filterCategory","filter","elem","index","self","indexOf","categoryArray","item","value","label","categoryInitOptions","categoryOptions","imageListItemsData","id","_id","supplierName","oilName","oilType","functionalSub","aromaticSub","blendsWellWith","aromaticDescription","aromaType","classifications","note","media","filepath","filename","imageListItems","listItemCount","length","console","log","activeModal","file","fileURL","fileError","supplierNameError","oilNameError","oilTypeError","functionalSubError","aromaticSubError","blendWellWithError","aromaticDescriptionError","aromaTypeError","classificationsError","noteError","modalAction","content","onAction","handleAddImages","items","name","handleEditImages","imageNameError","imageCategoryError","imageName","source","categoryValue","fileFlag","nameFlag","categoryFlag","activeDeleteModal","loading","state","getList","_dropFiles","acceptedFiles","_rejectedFiles","openFileDialog","selected","selectedValue","map","selectedItem","matchedOption","find","option","match","categorySelectedOptions","updateCategoryName","filterRegex","RegExp","resultOptions","formdata","FormData","append","post","headers","then","res","selectedListItems","validImageTypes","fileUpload","uploadedFile","categoryTextField","type","window","URL","createObjectURL","addNewImage","singular","plural","setSelectedListItems","shortcutActions","editImage","deleteImage","fontSize","closeModal","padding","width","height","handleDropZoneDrop","toggleOpenFileDialog","updateSupplierName","updateOilName","updateOilType","updateFunctionalSub","updateAromaticSub","updateBlendWellWith","updateAromaticDescription","updateAromaType","updateClassifications","updateNote","handleDeleteModalChange","confirmDelete","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Layout,\r\n  Card,\r\n  ResourceList,\r\n  TextStyle,\r\n  Icon,\r\n  Thumbnail,\r\n  Modal,\r\n  Stack,\r\n  DropZone,\r\n  InlineError,\r\n  TextField,\r\n  Autocomplete\r\n} from \"@shopify/polaris\";\r\nimport { DeleteMajorMonotone, EditMajorMonotone } from \"@shopify/polaris-icons\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allImageData: [],\r\n      listItemCount: 0,\r\n      imageListItems: [],\r\n      selectedListItems: [],\r\n      activeModal: false,\r\n      modalAction: {\r\n        content: \"Add\",\r\n        onAction: this.handleAddImages\r\n      },\r\n      loading: false,\r\n      file: null,\r\n      validImageTypes: [\"image/gif\", \"image/jpeg\", \"image/png\"],\r\n      openFileDialog: false,\r\n      fileUpload: \"\",\r\n      uploadedFile: \"\",\r\n      fileError: \"\",\r\n      imageNameError: \"\",\r\n      imageCategoryError: \"\",\r\n      imageName: \"\",\r\n      categoryInitOptions: [],\r\n      categoryOptions: [],\r\n      categorySelectedOptions: [],\r\n      categoryTextField: \"\",\r\n      categoryValue: \"\",\r\n      id: \"\",\r\n      fileURL: \"\",\r\n      fileFlag: false,\r\n      nameFlag: false,\r\n      categoryFlag: false,\r\n      activeDeleteModal: false,\r\n      host: \"8b430148.ngrok.io\",\r\n      supplierName: \"\",\r\n      oilName: \"\",\r\n      oilType: \"\",\r\n      functionalSub: \"\",\r\n      aromaticSub: \"\",\r\n      blendsWellWith: \"\",\r\n      aromaticDescription: \"\",\r\n      aromaType: \"\",\r\n      classifications: \"\",\r\n      note: \"\",\r\n      supplierNameError: \"\",\r\n      oilNameError: \"\",\r\n      oilTypeError: \"\",\r\n      functionalSubError: \"\",\r\n      aromaticSubError: \"\",\r\n      blendWellWithError: \"\",\r\n      aromaticDescriptionError: \"\",\r\n      aromaTypeError: \"\",\r\n      classificationsError: \"\",\r\n      noteError: \"\"\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.getList();\r\n  }\r\n\r\n  getList = async () => {\r\n    try {\r\n      let response = await axios.get(\"https://\" + host + \"/drop\");\r\n      this.setState({ allImageData: response.data });\r\n      let allImageData = response.data;\r\n      let allCategorys = [];\r\n      for (let i in allImageData) {\r\n        allCategorys.push(allImageData[i].category);\r\n      }\r\n      let filterCategory = allCategorys.filter(function(elem, index, self) {\r\n        return index === self.indexOf(elem);\r\n      });\r\n      let categoryArray = [];\r\n      for (let i in filterCategory) {\r\n        let item = filterCategory[i];\r\n        categoryArray.push({\r\n          value: item,\r\n          label: item\r\n        });\r\n      }\r\n      this.setState({\r\n        categoryInitOptions: categoryArray,\r\n        categoryOptions: categoryArray\r\n      });\r\n      \r\n      let imageListItemsData = [];\r\n      for (let i in allImageData) {\r\n        let item = allImageData[i];\r\n        imageListItemsData.push({\r\n          id: item._id,\r\n          supplierName: item.supplierName,\r\n          oilName: item.oilName,\r\n          oilType: item.oilType,\r\n          functionalSub: item.functionalSub,\r\n          aromaticSub: item.aromaticSub,\r\n          blendsWellWith: item.blendsWellWith,\r\n          aromaticDescription: item.aromaticDescription,\r\n          aromaType: item.aromaType,\r\n          classifications: item.classifications,\r\n          note: item.note,\r\n          media: <Thumbnail source={item.filepath} alt={item.filename} />\r\n        });\r\n      }\r\n      this.setState({\r\n        imageListItems: imageListItemsData,\r\n        listItemCount: imageListItemsData.length\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  addNewImage = () => {\r\n    this.setState({\r\n      activeModal: true,\r\n      file: null,\r\n      fileURL: \"\",\r\n      supplierName: \"\",\r\n      oilName: \"\",\r\n      oilType: \"\",\r\n      functionalSub: \"\",\r\n      aromaticSub: \"\",\r\n      blendsWellWith: \"\",\r\n      aromaticDescription: \"\",\r\n      aromaType: \"\",\r\n      classifications: \"\",\r\n      note: \"\",\r\n      fileError: \"\",\r\n      supplierNameError: \"\",\r\n      oilNameError: \"\",\r\n      oilTypeError: \"\",\r\n      functionalSubError: \"\",\r\n      aromaticSubError: \"\",\r\n      blendWellWithError: \"\",\r\n      aromaticDescriptionError: \"\",\r\n      aromaTypeError: \"\",\r\n      classificationsError: \"\",\r\n      noteError: \"\",\r\n      modalAction: {\r\n        content: \"Add\",\r\n        onAction: this.handleAddImages\r\n      }\r\n    });\r\n  };\r\n\r\n  setSelectedListItems = items => {\r\n    console.log(items);\r\n  };\r\n\r\n  editImage = (id, name, media, category) => {\r\n    console.log(id, name, media, category);\r\n    this.setState({\r\n      modalAction: {\r\n        content: \"Save\",\r\n        onAction: this.handleEditImages\r\n      },\r\n      fileError: \"\",\r\n      imageNameError: \"\",\r\n      imageCategoryError: \"\",\r\n      id: id,\r\n      imageName: name,\r\n      file: null,\r\n      fileURL: media.props.source,\r\n      categoryValue: category,\r\n      activeModal: true,\r\n      fileFlag: false,\r\n      nameFlag: false,\r\n      categoryFlag: false\r\n    });\r\n  };\r\n\r\n  deleteImage = id => {\r\n    this.setState({\r\n      id: id,\r\n      activeDeleteModal: true\r\n    });\r\n    console.log(id);\r\n  };\r\n\r\n  confirmDelete = async () => {\r\n    this.setState({ loading: true });\r\n    let response = await axios.get(\r\n      `https://${host}/drop/deleteImage?id=${this.state.id}`\r\n    );\r\n    console.log(response.data);\r\n    if (response.data === \"success\") {\r\n      this.getList();\r\n      this.setState({\r\n        loading: false,\r\n        activeDeleteModal: false\r\n      });\r\n    } else {\r\n      console.log(response.data);\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ activeModal: false });\r\n  };\r\n\r\n  handleDropZoneDrop = (_dropFiles, acceptedFiles, _rejectedFiles) => {\r\n    this.setState({\r\n      file: acceptedFiles[0],\r\n      fileError: \"\",\r\n      fileFlag: true,\r\n      fileURL: \"\"\r\n    });\r\n  };\r\n\r\n  toggleOpenFileDialog = () => {\r\n    this.setState({ openFileDialog: !this.state.openFileDialog });\r\n    console.log(\"toggle\");\r\n  };\r\n\r\n  updateImageName = value => {\r\n    this.setState({\r\n      imageName: value,\r\n      imageNameError: \"\",\r\n      nameFlag: true\r\n    });\r\n  };\r\n\r\n  updateCategoryOptions = selected => {\r\n    const selectedValue = selected.map(selectedItem => {\r\n      const matchedOption = this.state.categoryOptions.find(option => {\r\n        return option.value.match(selectedItem);\r\n      });\r\n      return matchedOption && matchedOption.label;\r\n    });\r\n    this.setState({ categorySelectedOptions: [] });\r\n    this.updateCategoryName(selectedValue[0]);\r\n  };\r\n\r\n  updateCategoryName = value => {\r\n    this.setState({\r\n      categoryValue: value,\r\n      imageCategoryError: \"\",\r\n      categoryFlag: true\r\n    });\r\n    if (this.state.categoryValue === \"\") {\r\n      this.setState({ categorySelectedOptions: this.state.categoryOptions });\r\n    }\r\n\r\n    const filterRegex = new RegExp(value, \"i\");\r\n    const resultOptions = this.state.categoryInitOptions.filter(option =>\r\n      option.label.match(filterRegex)\r\n    );\r\n    this.setState({ categoryOptions: resultOptions });\r\n  };\r\n\r\n  updateSupplierName = value => {\r\n    this.setState({\r\n      supplierName: value,\r\n      supplierNameError: \"\"\r\n      // nameFlag: true\r\n    });\r\n  };\r\n\r\n  updateOilName = value => {\r\n    this.setState({\r\n      oilName: value,\r\n      oilNameError: \"\"\r\n      // nameFlag: true\r\n    });\r\n  };\r\n  updateOilType = value => {\r\n    this.setState({\r\n      oilType: value,\r\n      oilTypeError: \"\"\r\n      // nameFlag: true\r\n    });\r\n  };\r\n  updateFunctionalSub = value => {\r\n    this.setState({\r\n      functionalSub: value,\r\n      functionalSubError: \"\"\r\n      // nameFlag: true\r\n    });\r\n  };\r\n  updateAromaticSub = value => {\r\n    this.setState({\r\n      aromaticSub: value,\r\n      aromaticSubError: \"\"\r\n      // nameFlag: true\r\n    });\r\n  };\r\n  updateBlendWellWith = value => {\r\n    this.setState({\r\n      blendsWellWith: value,\r\n      blendWellWithError: \"\"\r\n      // nameFlag: true\r\n    });\r\n  };\r\n  updateAromaticDescription = value => {\r\n    this.setState({\r\n      aromaticDescription: value,\r\n      aromaticDescriptionError: \"\"\r\n      // nameFlag: true\r\n    });\r\n  };\r\n  updateAromaType = value => {\r\n    this.setState({\r\n      aromaType: value,\r\n      aromaTypeError: \"\"\r\n      // nameFlag: true\r\n    });\r\n  };\r\n  updateClassifications = value => {\r\n    this.setState({\r\n      classifications: value,\r\n      classificationsError: \"\"\r\n      // nameFlag: true\r\n    });\r\n  };\r\n  updateNote = value => {\r\n    this.setState({\r\n      note: value,\r\n      noteError: \"\"\r\n      // nameFlag: true\r\n    });\r\n  };\r\n\r\n  handleAddImages = () => {\r\n    console.log(\r\n      this.state.file,\r\n      this.state.imageName,\r\n      this.state.categoryValue\r\n    );\r\n    if (\r\n      this.state.file === null &&\r\n      this.state.supplierName === \"\" &&\r\n      this.state.oilName === \"\" &&\r\n      this.state.oilType === \"\" &&\r\n      this.state.aromaType === \"\" &&\r\n      this.state.classifications === \"\" &&\r\n      this.state.note === \"\"\r\n    ) {\r\n      this.setState({\r\n        fileError: \"Need Image\",\r\n        supplierNameError: \"Need Supplier Name\",\r\n        oilNameError: \"Need Oil Name\",\r\n        oilTypeError: \"Need Oil Type\",\r\n        aromaTypeError: \"Need Aroma Type\",\r\n        classificationsError: \"Need Classifications\",\r\n        noteError: \"Need Note\"\r\n      });\r\n      return;\r\n    } else if (this.state.file === null) {\r\n      this.setState({\r\n        fileError: \"Need Image\"\r\n      });\r\n      return;\r\n    } else if (this.state.supplierName === \"\") {\r\n      this.setState({\r\n        supplierNameError: \"Need Supplier Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.oilName === \"\") {\r\n      this.setState({\r\n        oilNameError: \"Need Oil Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.oilType === \"\") {\r\n      this.setState({\r\n        oilTypeError: \"Need Oil Type\"\r\n      });\r\n      return;\r\n    } else if (this.state.aromaType === \"\") {\r\n      this.setState({\r\n        aromaTypeError: \"Need Aroma Type\"\r\n      });\r\n      return;\r\n    } else if (this.state.classifications === \"\") {\r\n      this.setState({\r\n        classificationsError: \"Need Classifications\"\r\n      });\r\n      return;\r\n    } else if (this.state.note === \"\") {\r\n      this.setState({\r\n        noteError: \"Need Note\"\r\n      });\r\n      return;\r\n    }\r\n    for (let i in this.state.allImageData) {\r\n      let item = this.state.allImageData[i];\r\n      if (item.filename === this.state.oilName) {\r\n        this.setState({\r\n          oilNameError: \"Oil Name Exist\"\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.setState({ loading: true });\r\n    let formdata = new FormData();\r\n    formdata.append(\"file\", this.state.file);\r\n    formdata.append(\"supplierName\", this.state.supplierName);\r\n    formdata.append(\"oilName\", this.state.oilName);\r\n    formdata.append(\"oilType\", this.state.oilType);\r\n    formdata.append(\"functionalSub\", this.state.functionalSub);\r\n    formdata.append(\"aromaticSub\", this.state.aromaticSub);\r\n    formdata.append(\"blendsWellWith\", this.state.blendsWellWith);\r\n    formdata.append(\"aromaticDescription\", this.state.aromaticDescription);\r\n    formdata.append(\"aromaType\", this.state.aromaType);\r\n    formdata.append(\"classifications\", this.state.classifications);\r\n    formdata.append(\"note\", this.state.note);\r\n\r\n    axios\r\n      .post(\"https://\" + host + \"/drop\", formdata, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.data === \"success\") {\r\n          this.setState({ activeModal: false });\r\n          this.getList();\r\n          this.setState({ loading: false });\r\n          console.log(res.data);\r\n        } else {\r\n          console.log(res.data);\r\n        }\r\n      });\r\n  };\r\n\r\n  handleEditImages = () => {\r\n    if (this.state.imageName === \"\" && this.state.categoryValue === \"\") {\r\n      this.setState({\r\n        imageNameError: \"Need Image Name\",\r\n        imageCategoryError: \"Need Category\"\r\n      });\r\n      return;\r\n    } else if (this.state.imageName === \"\") {\r\n      this.setState({\r\n        imageNameError: \"Need Image Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.categoryValue === \"\") {\r\n      this.setState({\r\n        imageCategoryError: \"Need Category\"\r\n      });\r\n      return;\r\n    }\r\n    for (let i in this.state.allImageData) {\r\n      let item = this.state.allImageData[i];\r\n      if (item.filename === this.state.imageName) {\r\n        if (this.state.nameFlag) {\r\n          this.setState({\r\n            imageNameError: \"Image Name Exist\"\r\n          });\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      !this.state.fileFlag &&\r\n      !this.state.nameFlag &&\r\n      !this.state.categoryFlag\r\n    ) {\r\n      this.setState({ activeModal: false });\r\n      return;\r\n    }\r\n\r\n    if (this.state.fileFlag) {\r\n      this.setState({ loading: true });\r\n      let formdata = new FormData();\r\n      formdata.append(\"file\", this.state.file);\r\n      formdata.append(\"filename\", this.state.imageName);\r\n      formdata.append(\"category\", this.state.categoryValue);\r\n      formdata.append(\"id\", this.state.id);\r\n      axios\r\n        .post(\"https://\" + host + \"/drop/editWithFile\", formdata, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\"\r\n          }\r\n        })\r\n        .then(res => {\r\n          if (res.data === \"success\") {\r\n            this.getList();\r\n            this.setState({\r\n              activeModal: false,\r\n              loading: false\r\n            });\r\n            console.log(res.data);\r\n          } else {\r\n            console.log(res.data);\r\n          }\r\n        });\r\n    } else {\r\n      if (this.state.nameFlag) {\r\n        console.log(\"edit both\");\r\n        this.setState({ loading: true });\r\n        let formdata = {\r\n          id: this.state.id,\r\n          filename: this.state.imageName,\r\n          category: this.state.categoryValue\r\n        };\r\n        axios\r\n          .post(\"https://\" + host + \"/drop/editWithoutFile\", {\r\n            data: formdata\r\n          })\r\n          .then(res => {\r\n            if (res.data === \"success\") {\r\n              this.getList();\r\n              this.setState({\r\n                activeModal: false,\r\n                loading: false\r\n              });\r\n              console.log(res.data);\r\n            } else {\r\n              console.log(res.data);\r\n            }\r\n          });\r\n      } else if (this.state.categoryFlag) {\r\n        console.log(\"edit Category\");\r\n        this.setState({ loading: true });\r\n        let formdata = {\r\n          id: this.state.id,\r\n          category: this.state.categoryValue\r\n        };\r\n        axios\r\n          .post(\"https://\" + host + \"/drop/editWithoutFile\", {\r\n            data: formdata\r\n          })\r\n          .then(res => {\r\n            if (res.data === \"success\") {\r\n              this.getList();\r\n              this.setState({\r\n                activeModal: false,\r\n                loading: false\r\n              });\r\n              console.log(res.data);\r\n            } else {\r\n              console.log(res.data);\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const categoryTextField = (\r\n      <Autocomplete.TextField\r\n        onChange={this.updateCategoryName}\r\n        label=\"Image Category\"\r\n        value={this.state.categoryValue}\r\n        placeholder=\"Enter category\"\r\n        error={this.state.imageCategoryError}\r\n      />\r\n    );\r\n    const fileUpload =\r\n      this.state.fileURL === \"\" ? (\r\n        !this.state.file && <DropZone.FileUpload />\r\n      ) : (\r\n        <Stack>\r\n          <Thumbnail size=\"large\" alt=\"edit\" source={this.state.fileURL} />\r\n        </Stack>\r\n      );\r\n\r\n    const uploadedFile = this.state.file && (\r\n      <Stack>\r\n        <Thumbnail\r\n          size=\"large\"\r\n          alt={this.state.file.name}\r\n          source={\r\n            this.state.validImageTypes.indexOf(this.state.file.type) > 0\r\n              ? window.URL.createObjectURL(this.state.file)\r\n              : \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\r\n          }\r\n        />\r\n      </Stack>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Layout.Section>\r\n            <Card\r\n              title=\"Drop Images\"\r\n              actions={[\r\n                {\r\n                  content: \"Add Drop Image\",\r\n                  onAction: this.addNewImage\r\n                }\r\n              ]}\r\n            >\r\n              <Card.Section>\r\n                <TextStyle variation=\"subdued\">\r\n                  {this.state.listItemCount} Drop Images\r\n                </TextStyle>\r\n              </Card.Section>\r\n              <Card.Section>\r\n                <ResourceList\r\n                  resourceName={{ singular: \"image\", plural: \"images\" }}\r\n                  items={this.state.imageListItems}\r\n                  selectedItems={this.state.selectedListItems}\r\n                  onSelectionChange={this.setSelectedListItems}\r\n                  renderItem={item => {\r\n                    const { id, supplierName, media, oilName, oilType, functionalSub, aromaticSub, blendsWellWith, aromaticDescription, aromaType, classifications, note } = item;\r\n                    const shortcutActions = [\r\n                      {\r\n                        content: (\r\n                          <Icon source={EditMajorMonotone} color=\"red\" />\r\n                        ),\r\n                        onAction: () =>\r\n                          this.editImage(id, supplierName, media, oilName, oilType, functionalSub, aromaticSub, blendsWellWith, aromaticDescription, aromaType, classifications, note)\r\n                      },\r\n                      {\r\n                        content: (\r\n                          <Icon source={DeleteMajorMonotone} color=\"red\" />\r\n                        ),\r\n                        onAction: () => this.deleteImage(id)\r\n                      }\r\n                    ];\r\n\r\n                    return (\r\n                      <ResourceList.Item\r\n                        id={id}\r\n                        media={media}\r\n                        accessibilityLabel={`View details for ${name}`}\r\n                        shortcutActions={shortcutActions}\r\n                        persistActions\r\n                      >\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Supplier Name: </span>\r\n                            {supplierName}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Oil Name: </span>\r\n                            {oilName}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Oil Type: </span>\r\n                            {oilType}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Functional Sub: </span>\r\n                            {functionalSub}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Aromatic Sub: </span>\r\n                            {aromaticSub}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Blends Well With: </span>\r\n                            {blendsWellWith}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Aromatic Description: </span>\r\n                            {aromaticDescription}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Aroma Type: </span>\r\n                            {aromaType}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Classifications: </span>\r\n                            {classifications}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Note: </span>\r\n                            {note}\r\n                          </TextStyle>\r\n                        </h3>\r\n                      </ResourceList.Item>\r\n                    );\r\n                  }}\r\n                />\r\n              </Card.Section>\r\n            </Card>\r\n          </Layout.Section>\r\n        </Layout>\r\n        <Modal\r\n          open={this.state.activeModal}\r\n          onClose={this.closeModal}\r\n          title=\"Add Image\"\r\n          primaryAction={this.state.modalAction}\r\n          style={{ padding: \"20px\" }}\r\n          loading={this.state.loading}\r\n        >\r\n          <Modal.Section>\r\n            <Stack alignment=\"center\">\r\n              <Stack.Item>\r\n                <div style={{ width: 100, height: 100 }}>\r\n                  <DropZone\r\n                    openFileDialog={this.state.openFileDialog}\r\n                    onDrop={this.handleDropZoneDrop}\r\n                    onFileDialogClose={this.toggleOpenFileDialog}\r\n                  >\r\n                    {fileUpload}\r\n                    {uploadedFile}\r\n                  </DropZone>\r\n                  <InlineError message={this.state.fileError} />\r\n                </div>\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Supplier Name\"\r\n                  value={this.state.supplierName}\r\n                  onChange={this.updateSupplierName}\r\n                  placeholder=\"Enter Supplier Name\"\r\n                  error={this.state.supplierNameError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Oil Name\"\r\n                  value={this.state.oilName}\r\n                  onChange={this.updateOilName}\r\n                  placeholder=\"Enter Oil Name\"\r\n                  error={this.state.oilNameError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Oil Type\"\r\n                  value={this.state.oilType}\r\n                  onChange={this.updateOilType}\r\n                  placeholder=\"Enter Oil Type\"\r\n                  error={this.state.oilTypeError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Functional Sub\"\r\n                  value={this.state.functionalSub}\r\n                  onChange={this.updateFunctionalSub}\r\n                  placeholder=\"Enter Functional Sub\"\r\n                  error={this.state.functionalSubError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Aromatic Sub\"\r\n                  value={this.state.aromaticSub}\r\n                  onChange={this.updateAromaticSub}\r\n                  placeholder=\"Enter Aromatic Sub\"\r\n                  error={this.state.aromaticSubError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Blends well with\"\r\n                  value={this.state.blendsWellWith}\r\n                  onChange={this.updateBlendWellWith}\r\n                  placeholder=\"Enter Blend well with\"\r\n                  error={this.state.blendWellWithError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Aromatic Descriptions\"\r\n                  value={this.state.aromaticDescription}\r\n                  onChange={this.updateAromaticDescription}\r\n                  placeholder=\"Enter Aromatic Description\"\r\n                  error={this.state.aromaticDescriptionError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Aroma Type\"\r\n                  value={this.state.aromaType}\r\n                  onChange={this.updateAromaType}\r\n                  placeholder=\"Enter Aroma Type\"\r\n                  error={this.state.aromaTypeError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Classifications\"\r\n                  value={this.state.classifications}\r\n                  onChange={this.updateClassifications}\r\n                  placeholder=\"Enter Classifications\"\r\n                  error={this.state.imageNameError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Note\"\r\n                  value={this.state.note}\r\n                  onChange={this.updateNote}\r\n                  placeholder=\"Enter Note\"\r\n                  error={this.state.noteError}\r\n                />\r\n              </Stack.Item>\r\n              {/* <Stack.Item>\r\n                <TextField\r\n                  label=\"Image Name\"\r\n                  value={this.state.imageName}\r\n                  onChange={this.updateImageName}\r\n                  placeholder=\"Enter image name\"\r\n                  error={this.state.imageNameError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <Autocomplete\r\n                  options={this.state.categoryOptions}\r\n                  selected={this.state.categorySelectedOptions}\r\n                  onSelect={this.updateCategoryOptions}\r\n                  textField={categoryTextField}\r\n                />\r\n              </Stack.Item> */}\r\n            </Stack>\r\n          </Modal.Section>\r\n        </Modal>\r\n        <Modal\r\n          open={this.state.activeDeleteModal}\r\n          onClose={this.handleDeleteModalChange}\r\n          title=\"Do you really want to delete?\"\r\n          loading={this.state.loading}\r\n          primaryAction={{\r\n            content: \"Yes\",\r\n            onAction: this.confirmDelete\r\n          }}\r\n          secondaryActions={{\r\n            content: \"No\",\r\n            onAction: () => {\r\n              this.setState({ activeDeleteModal: false });\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}