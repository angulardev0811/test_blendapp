{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Layout, Card, ResourceList, TextStyle, Icon, Thumbnail, Modal, Stack, DropZone, InlineError, TextField, Autocomplete } from \"@shopify/polaris\";\nimport { DeleteMajorMonotone, EditMajorMonotone } from \"@shopify/polaris-icons\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getList\", async () => {\n      try {\n        let response = await axios.get(\"https://46bb62b9.ngrok.io/background\");\n        this.setState({\n          allImageData: response.data\n        });\n        let allImageData = response.data;\n        let allCategorys = [];\n\n        for (let i in allImageData) {\n          allCategorys.push(allImageData[i].category);\n        }\n\n        let filterCategory = allCategorys.filter(function (elem, index, self) {\n          return index === self.indexOf(elem);\n        });\n        let categoryArray = [];\n\n        for (let i in filterCategory) {\n          let item = filterCategory[i];\n          categoryArray.push({\n            value: item,\n            label: item\n          });\n        }\n\n        this.setState({\n          categoryInitOptions: categoryArray,\n          categoryOptions: categoryArray\n        });\n        let imageListItemsData = [];\n\n        for (let i in allImageData) {\n          let item = allImageData[i];\n          imageListItemsData.push({\n            id: item._id,\n            name: item.filename,\n            category: item.category,\n            media: __jsx(Thumbnail, {\n              source: item.filepath,\n              alt: item.filename\n            })\n          });\n        }\n\n        this.setState({\n          imageListItems: imageListItemsData\n        });\n        this.setState({\n          listItemCount: imageListItemsData.length\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    _defineProperty(this, \"confirmDelete\", async () => {\n      this.setState({\n        loading: true\n      });\n      let response = await axios.get(`https://46bb62b9.ngrok.io/background/deleteImage?id=${this.state.id}`);\n      console.log(response.data);\n\n      if (response.data === \"success\") {\n        this.getList();\n        this.setState({\n          loading: false\n        });\n        this.setState({\n          activeDeleteModal: false\n        });\n      } else {\n        console.log(response.data);\n      }\n    });\n\n    this.addNewImage = this.addNewImage.bind(this);\n    this.setSelectedListItems = this.setSelectedListItems.bind(this);\n    this.editImage = this.editImage.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.deleteImage = this.deleteImage.bind(this);\n    this.handleDropZoneDrop = this.handleDropZoneDrop.bind(this);\n    this.toggleOpenFileDialog = this.toggleOpenFileDialog.bind(this);\n    this.updateImageName = this.updateImageName.bind(this);\n    this.updateCategoryOptions = this.updateCategoryOptions.bind(this);\n    this.updateCategoryName = this.updateCategoryName.bind(this);\n    this.handleAddImages = this.handleAddImages.bind(this);\n    this.handleEditImages = this.handleEditImages.bind(this);\n    this.state = {\n      allImageData: [],\n      listItemCount: 0,\n      imageListItems: [],\n      selectedListItems: [],\n      activeModal: false,\n      modalAction: {},\n      loading: false,\n      file: null,\n      validImageTypes: [\"image/gif\", \"image/jpeg\", \"image/png\"],\n      openFileDialog: false,\n      fileUpload: \"\",\n      uploadedFile: \"\",\n      fileError: \"\",\n      imageNameError: \"\",\n      imageCategoryError: \"\",\n      imageName: \"\",\n      categoryInitOptions: [],\n      categoryOptions: [],\n      categorySelectedOptions: [],\n      categoryTextField: \"\",\n      categoryValue: \"\",\n      id: \"\",\n      fileURL: \"\",\n      fileFlag: false,\n      nameFlag: false,\n      categoryFlag: false,\n      activeDeleteModal: false\n    };\n  }\n\n  async componentDidMount() {\n    this.getList();\n  }\n\n  addNewImage() {\n    this.setState({\n      activeModal: true,\n      file: null,\n      fileURL: \"\",\n      imageName: \"\",\n      categoryValue: \"\",\n      fileError: \"\",\n      imageNameError: \"\",\n      imageCategoryError: \"\",\n      modalAction: {\n        content: \"Add\",\n        onAction: this.handleAddImages\n      }\n    });\n  }\n\n  setSelectedListItems(items) {\n    console.log(items);\n  }\n\n  editImage(id, name, media, category) {\n    console.log(id, name, media, category);\n    this.setState({\n      modalAction: {\n        content: \"Save\",\n        onAction: this.handleEditImages\n      },\n      fileError: \"\",\n      imageNameError: \"\",\n      imageCategoryError: \"\",\n      id: id,\n      imageName: name,\n      file: null,\n      fileURL: media.props.source,\n      categoryValue: category,\n      activeModal: true,\n      fileFlag: false,\n      nameFlag: false,\n      categoryFlag: false\n    });\n  }\n\n  deleteImage(id) {\n    this.setState({\n      id: id,\n      activeDeleteModal: true\n    });\n    console.log(id);\n  }\n\n  closeModal() {\n    this.setState({\n      activeModal: false\n    });\n  }\n\n  handleDropZoneDrop(_dropFiles, acceptedFiles, _rejectedFiles) {\n    this.setState({\n      file: acceptedFiles[0],\n      fileError: \"\",\n      fileFlag: true,\n      fileURL: \"\"\n    });\n  }\n\n  toggleOpenFileDialog() {\n    this.setState({\n      openFileDialog: !this.state.openFileDialog\n    });\n    console.log(\"toggle\");\n  }\n\n  updateImageName(value) {\n    this.setState({\n      imageName: value,\n      imageNameError: \"\",\n      nameFlag: true\n    });\n  }\n\n  updateCategoryOptions(selected) {\n    const selectedValue = selected.map(selectedItem => {\n      const matchedOption = this.state.categoryOptions.find(option => {\n        return option.value.match(selectedItem);\n      });\n      return matchedOption && matchedOption.label;\n    });\n    this.setState({\n      categorySelectedOptions: []\n    });\n    this.updateCategoryName(selectedValue[0]);\n  }\n\n  updateCategoryName(value) {\n    this.setState({\n      categoryValue: value,\n      imageCategoryError: \"\",\n      categoryFlag: true\n    });\n\n    if (this.state.categoryValue === \"\") {\n      this.setState({\n        categorySelectedOptions: this.state.categoryOptions\n      });\n    }\n\n    const filterRegex = new RegExp(value, \"i\");\n    const resultOptions = this.state.categoryInitOptions.filter(option => option.label.match(filterRegex));\n    this.setState({\n      categoryOptions: resultOptions\n    });\n  }\n\n  handleAddImages() {\n    console.log(this.state.file, this.state.imageName, this.state.categoryValue);\n\n    if (this.state.file === null && this.state.imageName === \"\" && this.state.categoryValue === \"\") {\n      this.setState({\n        fileError: \"Need Image\",\n        imageNameError: \"Need Image Name\",\n        imageCategoryError: \"Need Category\"\n      });\n      return;\n    } else if (this.state.file === null && this.state.imageName === \"\") {\n      this.setState({\n        fileError: \"Need Image\",\n        imageNameError: \"Need Image Name\"\n      });\n      return;\n    } else if (this.state.file === null && this.state.categoryValue === \"\") {\n      this.setState({\n        fileError: \"Need Image\",\n        imageCategoryError: \"Need Category\"\n      });\n      return;\n    } else if (this.state.imageName === \"\" && this.state.categoryValue === \"\") {\n      this.setState({\n        imageNameError: \"Need Image Name\",\n        imageCategoryError: \"Need Category\"\n      });\n      return;\n    } else if (this.state.file === null) {\n      this.setState({\n        fileError: \"Need Image\"\n      });\n      return;\n    } else if (this.state.imageName === \"\") {\n      this.setState({\n        imageNameError: \"Need Image Name\"\n      });\n      return;\n    } else if (this.state.categoryValue === \"\") {\n      this.setState({\n        imageCategoryError: \"Need Category\"\n      });\n      return;\n    }\n\n    for (let i in this.state.allImageData) {\n      let item = this.state.allImageData[i];\n\n      if (item.filename === this.state.imageName) {\n        this.setState({\n          imageNameError: \"Image Name Exist\"\n        });\n        return;\n      }\n    }\n\n    this.setState({\n      loading: true\n    });\n    let formdata = new FormData();\n    formdata.append(\"file\", this.state.file);\n    formdata.append(\"filename\", this.state.imageName);\n    formdata.append(\"category\", this.state.categoryValue);\n    axios.post(\"https://46bb62b9.ngrok.io/background\", formdata, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(res => {\n      if (res.data === \"success\") {\n        this.setState({\n          activeModal: false\n        });\n        this.getList();\n        this.setState({\n          loading: false\n        });\n        console.log(res.data);\n      } else {\n        console.log(res.data);\n      }\n    });\n  }\n\n  handleEditImages() {\n    console.log(this.state.file, this.state.imageName, this.state.categoryValue);\n    console.log(this.state.fileFlag, this.state.nameFlag, this.state.categoryFlag);\n\n    if (this.state.imageName === \"\" && this.state.categoryValue === \"\") {\n      this.setState({\n        imageNameError: \"Need Image Name\",\n        imageCategoryError: \"Need Category\"\n      });\n      return;\n    } else if (this.state.imageName === \"\") {\n      this.setState({\n        imageNameError: \"Need Image Name\"\n      });\n      return;\n    } else if (this.state.categoryValue === \"\") {\n      this.setState({\n        imageCategoryError: \"Need Category\"\n      });\n      return;\n    }\n\n    for (let i in this.state.allImageData) {\n      let item = this.state.allImageData[i];\n\n      if (item.filename === this.state.imageName) {\n        if (this.state.nameFlag) {\n          this.setState({\n            imageNameError: \"Image Name Exist\"\n          });\n          return;\n        }\n      }\n    }\n\n    if (!this.state.fileFlag && !this.state.nameFlag && !this.state.categoryFlag) {\n      this.setState({\n        activeModal: false\n      });\n      return;\n    }\n\n    if (this.state.fileFlag) {\n      this.setState({\n        loading: true\n      });\n      let formdata = new FormData();\n      formdata.append(\"file\", this.state.file);\n      formdata.append(\"filename\", this.state.imageName);\n      formdata.append(\"category\", this.state.categoryValue);\n      formdata.append(\"id\", this.state.id);\n      axios.post(\"https://46bb62b9.ngrok.io/background/editWithFile\", formdata, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        if (res.data === \"success\") {\n          this.getList();\n          this.setState({\n            activeModal: false,\n            loading: false\n          });\n          console.log(res.data);\n        } else {\n          console.log(res.data);\n        }\n      });\n    } else {\n      if (this.state.nameFlag) {\n        console.log(\"edit both\");\n        this.setState({\n          loading: true\n        });\n        let formdata = {\n          id: this.state.id,\n          filename: this.state.imageName,\n          category: this.state.categoryValue\n        };\n        axios.post(\"https://46bb62b9.ngrok.io/background/editWithoutFile\", {\n          data: formdata\n        }).then(res => {\n          if (res.data === \"success\") {\n            this.getList();\n            this.setState({\n              activeModal: false,\n              loading: false\n            });\n            console.log(res.data);\n          } else {\n            console.log(res.data);\n          }\n        });\n      } else if (this.state.categoryFlag) {\n        console.log(\"edit Category\");\n        this.setState({\n          loading: true\n        });\n        let formdata = {\n          id: this.state.id,\n          category: this.state.categoryValue\n        };\n        axios.post(\"https://46bb62b9.ngrok.io/background/editWithoutFile\", {\n          data: formdata\n        }).then(res => {\n          if (res.data === \"success\") {\n            this.getList();\n            this.setState({\n              activeModal: false,\n              loading: false\n            });\n            console.log(res.data);\n          } else {\n            console.log(res.data);\n          }\n        });\n      }\n    }\n  }\n\n  render() {\n    const categoryTextField = __jsx(Autocomplete.TextField, {\n      onChange: this.updateCategoryName,\n      label: \"Image Category\",\n      value: this.state.categoryValue,\n      placeholder: \"Enter category\",\n      error: this.state.imageCategoryError\n    });\n\n    const fileUpload = this.state.fileURL === \"\" ? !this.state.file && __jsx(DropZone.FileUpload, null) : __jsx(Stack, null, __jsx(Thumbnail, {\n      size: \"large\",\n      alt: \"edit\",\n      source: this.state.fileURL\n    }));\n\n    const uploadedFile = this.state.file && __jsx(Stack, null, __jsx(Thumbnail, {\n      size: \"large\",\n      alt: this.state.file.name,\n      source: this.state.validImageTypes.indexOf(this.state.file.type) > 0 ? window.URL.createObjectURL(this.state.file) : \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\n    }));\n\n    return __jsx(\"div\", null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n      title: \"Background Images\",\n      actions: [{\n        content: \"Add Background Image\",\n        onAction: this.addNewImage\n      }]\n    }, __jsx(Card.Section, null, __jsx(TextStyle, {\n      variation: \"subdued\"\n    }, this.state.listItemCount, \" Background Images\")), __jsx(Card.Section, null, __jsx(ResourceList, {\n      resourceName: {\n        singular: \"image\",\n        plural: \"images\"\n      },\n      items: this.state.imageListItems,\n      selectedItems: this.state.selectedListItems,\n      onSelectionChange: this.setSelectedListItems,\n      renderItem: item => {\n        const {\n          id,\n          name,\n          media,\n          category\n        } = item;\n        const shortcutActions = [{\n          content: __jsx(Icon, {\n            source: EditMajorMonotone,\n            color: \"red\"\n          }),\n          onAction: () => this.editImage(id, name, media, category)\n        }, {\n          content: __jsx(Icon, {\n            source: DeleteMajorMonotone,\n            color: \"red\"\n          }),\n          onAction: () => this.deleteImage(id)\n        }];\n        return __jsx(ResourceList.Item, {\n          id: id,\n          media: media,\n          accessibilityLabel: `View details for ${name}`,\n          shortcutActions: shortcutActions,\n          persistActions: true\n        }, __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Name: \"), name)), __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Category: \"), category)));\n      }\n    }))))), __jsx(Modal, {\n      open: this.state.activeModal,\n      onClose: this.closeModal,\n      title: \"Add Image\",\n      primaryAction: this.state.modalAction,\n      style: {\n        padding: \"20px\"\n      },\n      loading: this.state.loading\n    }, __jsx(Modal.Section, null, __jsx(Stack, {\n      alignment: \"center\"\n    }, __jsx(Stack.Item, null, __jsx(\"div\", {\n      style: {\n        width: 100,\n        height: 100\n      }\n    }, __jsx(DropZone, {\n      openFileDialog: this.state.openFileDialog,\n      onDrop: this.handleDropZoneDrop,\n      onFileDialogClose: this.toggleOpenFileDialog\n    }, fileUpload, uploadedFile), __jsx(InlineError, {\n      message: this.state.fileError\n    }))), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Image Name\",\n      value: this.state.imageName,\n      onChange: this.updateImageName,\n      placeholder: \"Enter image name\",\n      error: this.state.imageNameError\n    })), __jsx(Stack.Item, null, __jsx(Autocomplete, {\n      options: this.state.categoryOptions,\n      selected: this.state.categorySelectedOptions,\n      onSelect: this.updateCategoryOptions,\n      textField: categoryTextField\n    }))))), __jsx(Modal, {\n      open: this.state.activeDeleteModal,\n      onClose: this.handleDeleteModalChange,\n      title: \"Do you really want to delete?\",\n      loading: this.state.loading,\n      primaryAction: {\n        content: \"Yes\",\n        onAction: this.confirmDelete\n      },\n      secondaryActions: {\n        content: \"No\",\n        onAction: () => {\n          this.setState({\n            activeDeleteModal: false\n          });\n        }\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["E:/Lenny/blendapp/pages/Background.js"],"names":["React","axios","Layout","Card","ResourceList","TextStyle","Icon","Thumbnail","Modal","Stack","DropZone","InlineError","TextField","Autocomplete","DeleteMajorMonotone","EditMajorMonotone","App","Component","constructor","props","response","get","setState","allImageData","data","allCategorys","i","push","category","filterCategory","filter","elem","index","self","indexOf","categoryArray","item","value","label","categoryInitOptions","categoryOptions","imageListItemsData","id","_id","name","filename","media","filepath","imageListItems","listItemCount","length","error","console","log","loading","state","getList","activeDeleteModal","addNewImage","bind","setSelectedListItems","editImage","closeModal","deleteImage","handleDropZoneDrop","toggleOpenFileDialog","updateImageName","updateCategoryOptions","updateCategoryName","handleAddImages","handleEditImages","selectedListItems","activeModal","modalAction","file","validImageTypes","openFileDialog","fileUpload","uploadedFile","fileError","imageNameError","imageCategoryError","imageName","categorySelectedOptions","categoryTextField","categoryValue","fileURL","fileFlag","nameFlag","categoryFlag","componentDidMount","content","onAction","items","source","_dropFiles","acceptedFiles","_rejectedFiles","selected","selectedValue","map","selectedItem","matchedOption","find","option","match","filterRegex","RegExp","resultOptions","formdata","FormData","append","post","headers","then","res","render","type","window","URL","createObjectURL","singular","plural","shortcutActions","fontSize","padding","width","height","handleDeleteModalChange","confirmDelete"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Layout,\r\n  Card,\r\n  ResourceList,\r\n  TextStyle,\r\n  Icon,\r\n  Thumbnail,\r\n  Modal,\r\n  Stack,\r\n  DropZone,\r\n  InlineError,\r\n  TextField,\r\n  Autocomplete\r\n} from \"@shopify/polaris\";\r\nimport { DeleteMajorMonotone, EditMajorMonotone } from \"@shopify/polaris-icons\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addNewImage = this.addNewImage.bind(this);\r\n    this.setSelectedListItems = this.setSelectedListItems.bind(this);\r\n    this.editImage = this.editImage.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n    this.deleteImage = this.deleteImage.bind(this);\r\n    this.handleDropZoneDrop = this.handleDropZoneDrop.bind(this);\r\n    this.toggleOpenFileDialog = this.toggleOpenFileDialog.bind(this);\r\n    this.updateImageName = this.updateImageName.bind(this);\r\n    this.updateCategoryOptions = this.updateCategoryOptions.bind(this);\r\n    this.updateCategoryName = this.updateCategoryName.bind(this);\r\n    this.handleAddImages = this.handleAddImages.bind(this);\r\n    this.handleEditImages = this.handleEditImages.bind(this);\r\n    this.state = {\r\n      allImageData: [],\r\n      listItemCount: 0,\r\n      imageListItems: [],\r\n      selectedListItems: [],\r\n      activeModal: false,\r\n      modalAction: {},\r\n      loading: false,\r\n      file: null,\r\n      validImageTypes: [\"image/gif\", \"image/jpeg\", \"image/png\"],\r\n      openFileDialog: false,\r\n      fileUpload: \"\",\r\n      uploadedFile: \"\",\r\n      fileError: \"\",\r\n      imageNameError: \"\",\r\n      imageCategoryError: \"\",\r\n      imageName: \"\",\r\n      categoryInitOptions: [],\r\n      categoryOptions: [],\r\n      categorySelectedOptions: [],\r\n      categoryTextField: \"\",\r\n      categoryValue: \"\",\r\n      id: \"\",\r\n      fileURL: \"\",\r\n      fileFlag: false,\r\n      nameFlag: false,\r\n      categoryFlag: false,\r\n      activeDeleteModal: false\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.getList();\r\n  }\r\n\r\n  getList = async () => {\r\n    try {\r\n      let response = await axios.get(\"https://46bb62b9.ngrok.io/background\");\r\n      this.setState({ allImageData: response.data });\r\n      let allImageData = response.data;\r\n      let allCategorys = [];\r\n      for (let i in allImageData) {\r\n        allCategorys.push(allImageData[i].category);\r\n      }\r\n      let filterCategory = allCategorys.filter(function(elem, index, self) {\r\n        return index === self.indexOf(elem);\r\n      });\r\n      let categoryArray = [];\r\n      for (let i in filterCategory) {\r\n        let item = filterCategory[i];\r\n        categoryArray.push({\r\n          value: item,\r\n          label: item\r\n        });\r\n      }\r\n      this.setState({\r\n        categoryInitOptions: categoryArray,\r\n        categoryOptions: categoryArray\r\n      });\r\n      let imageListItemsData = [];\r\n      for (let i in allImageData) {\r\n        let item = allImageData[i];\r\n        imageListItemsData.push({\r\n          id: item._id,\r\n          name: item.filename,\r\n          category: item.category,\r\n          media: <Thumbnail source={item.filepath} alt={item.filename} />\r\n        });\r\n      }\r\n      this.setState({ imageListItems: imageListItemsData });\r\n      this.setState({ listItemCount: imageListItemsData.length });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  addNewImage() {\r\n    this.setState({\r\n      activeModal: true,\r\n      file: null,\r\n      fileURL: \"\",\r\n      imageName: \"\",\r\n      categoryValue: \"\",\r\n      fileError: \"\",\r\n      imageNameError: \"\",\r\n      imageCategoryError: \"\",\r\n      modalAction: {\r\n        content: \"Add\",\r\n        onAction: this.handleAddImages\r\n      }\r\n    });\r\n  }\r\n\r\n  setSelectedListItems(items) {\r\n    console.log(items);\r\n  }\r\n\r\n  editImage(id, name, media, category) {\r\n    console.log(id, name, media, category);\r\n    this.setState({\r\n      modalAction: {\r\n        content: \"Save\",\r\n        onAction: this.handleEditImages\r\n      },\r\n      fileError: \"\",\r\n      imageNameError: \"\",\r\n      imageCategoryError: \"\",\r\n      id: id,\r\n      imageName: name,\r\n      file: null,\r\n      fileURL: media.props.source,\r\n      categoryValue: category,\r\n      activeModal: true,\r\n      fileFlag: false,\r\n      nameFlag: false,\r\n      categoryFlag: false\r\n    });\r\n  }\r\n\r\n  deleteImage(id) {\r\n    this.setState({\r\n      id: id,\r\n      activeDeleteModal: true\r\n    });\r\n    console.log(id);\r\n  }\r\n\r\n  confirmDelete = async () => {\r\n    this.setState({ loading: true });\r\n    let response = await axios.get(\r\n      `https://46bb62b9.ngrok.io/background/deleteImage?id=${this.state.id}`\r\n    );\r\n    console.log(response.data);\r\n    if (response.data === \"success\") {\r\n      this.getList();\r\n      this.setState({ loading: false });\r\n      this.setState({ activeDeleteModal: false });\r\n    } else {\r\n      console.log(response.data);\r\n    }\r\n  };\r\n\r\n  closeModal() {\r\n    this.setState({ activeModal: false });\r\n  }\r\n\r\n  handleDropZoneDrop(_dropFiles, acceptedFiles, _rejectedFiles) {\r\n    this.setState({\r\n      file: acceptedFiles[0],\r\n      fileError: \"\",\r\n      fileFlag: true,\r\n      fileURL: \"\"\r\n    });\r\n  }\r\n\r\n  toggleOpenFileDialog() {\r\n    this.setState({ openFileDialog: !this.state.openFileDialog });\r\n    console.log(\"toggle\");\r\n  }\r\n\r\n  updateImageName(value) {\r\n    this.setState({\r\n      imageName: value,\r\n      imageNameError: \"\",\r\n      nameFlag: true\r\n    });\r\n  }\r\n\r\n  updateCategoryOptions(selected) {\r\n    const selectedValue = selected.map(selectedItem => {\r\n      const matchedOption = this.state.categoryOptions.find(option => {\r\n        return option.value.match(selectedItem);\r\n      });\r\n      return matchedOption && matchedOption.label;\r\n    });\r\n    this.setState({ categorySelectedOptions: [] });\r\n    this.updateCategoryName(selectedValue[0]);\r\n  }\r\n\r\n  updateCategoryName(value) {\r\n    this.setState({\r\n      categoryValue: value,\r\n      imageCategoryError: \"\",\r\n      categoryFlag: true\r\n    });\r\n    if (this.state.categoryValue === \"\") {\r\n      this.setState({ categorySelectedOptions: this.state.categoryOptions });\r\n    }\r\n\r\n    const filterRegex = new RegExp(value, \"i\");\r\n    const resultOptions = this.state.categoryInitOptions.filter(option =>\r\n      option.label.match(filterRegex)\r\n    );\r\n    this.setState({ categoryOptions: resultOptions });\r\n  }\r\n\r\n  handleAddImages() {\r\n    console.log(\r\n      this.state.file,\r\n      this.state.imageName,\r\n      this.state.categoryValue\r\n    );\r\n    if (\r\n      this.state.file === null &&\r\n      this.state.imageName === \"\" &&\r\n      this.state.categoryValue === \"\"\r\n    ) {\r\n      this.setState({\r\n        fileError: \"Need Image\",\r\n        imageNameError: \"Need Image Name\",\r\n        imageCategoryError: \"Need Category\"\r\n      });\r\n      return;\r\n    } else if (this.state.file === null && this.state.imageName === \"\") {\r\n      this.setState({\r\n        fileError: \"Need Image\",\r\n        imageNameError: \"Need Image Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.file === null && this.state.categoryValue === \"\") {\r\n      this.setState({\r\n        fileError: \"Need Image\",\r\n        imageCategoryError: \"Need Category\"\r\n      });\r\n      return;\r\n    } else if (this.state.imageName === \"\" && this.state.categoryValue === \"\") {\r\n      this.setState({\r\n        imageNameError: \"Need Image Name\",\r\n        imageCategoryError: \"Need Category\"\r\n      });\r\n      return;\r\n    } else if (this.state.file === null) {\r\n      this.setState({\r\n        fileError: \"Need Image\"\r\n      });\r\n      return;\r\n    } else if (this.state.imageName === \"\") {\r\n      this.setState({\r\n        imageNameError: \"Need Image Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.categoryValue === \"\") {\r\n      this.setState({\r\n        imageCategoryError: \"Need Category\"\r\n      });\r\n      return;\r\n    }\r\n    for (let i in this.state.allImageData) {\r\n      let item = this.state.allImageData[i];\r\n      if (item.filename === this.state.imageName) {\r\n        this.setState({\r\n          imageNameError: \"Image Name Exist\"\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    this.setState({ loading: true });\r\n    let formdata = new FormData();\r\n    formdata.append(\"file\", this.state.file);\r\n    formdata.append(\"filename\", this.state.imageName);\r\n    formdata.append(\"category\", this.state.categoryValue);\r\n    axios\r\n      .post(\"https://46bb62b9.ngrok.io/background\", formdata, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.data === \"success\") {\r\n          this.setState({ activeModal: false });\r\n          this.getList();\r\n          this.setState({ loading: false });\r\n          console.log(res.data);\r\n        } else {\r\n          console.log(res.data);\r\n        }\r\n      });\r\n  }\r\n\r\n  handleEditImages() {\r\n    console.log(\r\n      this.state.file,\r\n      this.state.imageName,\r\n      this.state.categoryValue\r\n    );\r\n    console.log(\r\n      this.state.fileFlag,\r\n      this.state.nameFlag,\r\n      this.state.categoryFlag\r\n    );\r\n    if (this.state.imageName === \"\" && this.state.categoryValue === \"\") {\r\n      this.setState({\r\n        imageNameError: \"Need Image Name\",\r\n        imageCategoryError: \"Need Category\"\r\n      });\r\n      return;\r\n    } else if (this.state.imageName === \"\") {\r\n      this.setState({\r\n        imageNameError: \"Need Image Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.categoryValue === \"\") {\r\n      this.setState({\r\n        imageCategoryError: \"Need Category\"\r\n      });\r\n      return;\r\n    }\r\n    for (let i in this.state.allImageData) {\r\n      let item = this.state.allImageData[i];\r\n      if (item.filename === this.state.imageName) {\r\n        if (this.state.nameFlag) {\r\n          this.setState({\r\n            imageNameError: \"Image Name Exist\"\r\n          });\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    if (!this.state.fileFlag && !this.state.nameFlag && !this.state.categoryFlag) {\r\n      this.setState({ activeModal: false });\r\n      return;\r\n    }\r\n\r\n    if (this.state.fileFlag) {\r\n      this.setState({ loading: true });\r\n      let formdata = new FormData();\r\n      formdata.append(\"file\", this.state.file);\r\n      formdata.append(\"filename\", this.state.imageName);\r\n      formdata.append(\"category\", this.state.categoryValue);\r\n      formdata.append(\"id\", this.state.id);\r\n      axios\r\n        .post(\"https://46bb62b9.ngrok.io/background/editWithFile\", formdata, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\"\r\n          }\r\n        })\r\n        .then(res => {\r\n          if (res.data === \"success\") {\r\n            this.getList();\r\n            this.setState({\r\n              activeModal: false,\r\n              loading: false\r\n            });\r\n            console.log(res.data);\r\n          } else {\r\n            console.log(res.data);\r\n          }\r\n        });\r\n    } else {\r\n      if (this.state.nameFlag) {\r\n        console.log(\"edit both\");\r\n        this.setState({ loading: true });\r\n        let formdata = {\r\n          id: this.state.id,\r\n          filename: this.state.imageName,\r\n          category: this.state.categoryValue\r\n        };\r\n        axios\r\n          .post(\"https://46bb62b9.ngrok.io/background/editWithoutFile\", {\r\n            data: formdata\r\n          })\r\n          .then(res => {\r\n            if (res.data === \"success\") {\r\n              this.getList();\r\n              this.setState({\r\n                activeModal: false,\r\n                loading: false\r\n              });\r\n              console.log(res.data);\r\n            } else {\r\n              console.log(res.data);\r\n            }\r\n          });\r\n      } else if (this.state.categoryFlag) {\r\n        console.log(\"edit Category\");\r\n        this.setState({ loading: true });\r\n        let formdata = {\r\n          id: this.state.id,\r\n          category: this.state.categoryValue\r\n        };\r\n        axios\r\n          .post(\"https://46bb62b9.ngrok.io/background/editWithoutFile\", {\r\n            data: formdata\r\n          })\r\n          .then(res => {\r\n            if (res.data === \"success\") {\r\n              this.getList();\r\n              this.setState({\r\n                activeModal: false,\r\n                loading: false\r\n              });\r\n              console.log(res.data);\r\n            } else {\r\n              console.log(res.data);\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const categoryTextField = (\r\n      <Autocomplete.TextField\r\n        onChange={this.updateCategoryName}\r\n        label=\"Image Category\"\r\n        value={this.state.categoryValue}\r\n        placeholder=\"Enter category\"\r\n        error={this.state.imageCategoryError}\r\n      />\r\n    );\r\n    const fileUpload =\r\n      this.state.fileURL === \"\" ? (\r\n        !this.state.file && <DropZone.FileUpload />\r\n      ) : (\r\n        <Stack>\r\n          <Thumbnail size=\"large\" alt=\"edit\" source={this.state.fileURL} />\r\n        </Stack>\r\n      );\r\n\r\n    const uploadedFile = this.state.file && (\r\n      <Stack>\r\n        <Thumbnail\r\n          size=\"large\"\r\n          alt={this.state.file.name}\r\n          source={\r\n            this.state.validImageTypes.indexOf(this.state.file.type) > 0\r\n              ? window.URL.createObjectURL(this.state.file)\r\n              : \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\r\n          }\r\n        />\r\n      </Stack>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Layout.Section>\r\n            <Card\r\n              title=\"Background Images\"\r\n              actions={[\r\n                {\r\n                  content: \"Add Background Image\",\r\n                  onAction: this.addNewImage\r\n                }\r\n              ]}\r\n            >\r\n              <Card.Section>\r\n                <TextStyle variation=\"subdued\">\r\n                  {this.state.listItemCount} Background Images\r\n                </TextStyle>\r\n              </Card.Section>\r\n              <Card.Section>\r\n                <ResourceList\r\n                  resourceName={{ singular: \"image\", plural: \"images\" }}\r\n                  items={this.state.imageListItems}\r\n                  selectedItems={this.state.selectedListItems}\r\n                  onSelectionChange={this.setSelectedListItems}\r\n                  renderItem={item => {\r\n                    const { id, name, media, category } = item;\r\n                    const shortcutActions = [\r\n                      {\r\n                        content: (\r\n                          <Icon source={EditMajorMonotone} color=\"red\" />\r\n                        ),\r\n                        onAction: () =>\r\n                          this.editImage(id, name, media, category)\r\n                      },\r\n                      {\r\n                        content: (\r\n                          <Icon source={DeleteMajorMonotone} color=\"red\" />\r\n                        ),\r\n                        onAction: () => this.deleteImage(id)\r\n                      }\r\n                    ];\r\n\r\n                    return (\r\n                      <ResourceList.Item\r\n                        id={id}\r\n                        media={media}\r\n                        accessibilityLabel={`View details for ${name}`}\r\n                        shortcutActions={shortcutActions}\r\n                        persistActions\r\n                      >\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Name: </span>\r\n                            {name}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Category: </span>\r\n                            {category}\r\n                          </TextStyle>\r\n                        </h3>\r\n                      </ResourceList.Item>\r\n                    );\r\n                  }}\r\n                />\r\n              </Card.Section>\r\n            </Card>\r\n          </Layout.Section>\r\n        </Layout>\r\n        <Modal\r\n          open={this.state.activeModal}\r\n          onClose={this.closeModal}\r\n          title=\"Add Image\"\r\n          primaryAction={this.state.modalAction}\r\n          style={{ padding: \"20px\" }}\r\n          loading={this.state.loading}\r\n        >\r\n          <Modal.Section>\r\n            <Stack alignment=\"center\">\r\n              <Stack.Item>\r\n                <div style={{ width: 100, height: 100 }}>\r\n                  <DropZone\r\n                    openFileDialog={this.state.openFileDialog}\r\n                    onDrop={this.handleDropZoneDrop}\r\n                    onFileDialogClose={this.toggleOpenFileDialog}\r\n                  >\r\n                    {fileUpload}\r\n                    {uploadedFile}\r\n                  </DropZone>\r\n                  <InlineError message={this.state.fileError} />\r\n                </div>\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Image Name\"\r\n                  value={this.state.imageName}\r\n                  onChange={this.updateImageName}\r\n                  placeholder=\"Enter image name\"\r\n                  error={this.state.imageNameError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <Autocomplete\r\n                  options={this.state.categoryOptions}\r\n                  selected={this.state.categorySelectedOptions}\r\n                  onSelect={this.updateCategoryOptions}\r\n                  textField={categoryTextField}\r\n                />\r\n              </Stack.Item>\r\n            </Stack>\r\n          </Modal.Section>\r\n        </Modal>\r\n        <Modal\r\n          open={this.state.activeDeleteModal}\r\n          onClose={this.handleDeleteModalChange}\r\n          title=\"Do you really want to delete?\"\r\n          loading={this.state.loading}\r\n          primaryAction={{\r\n            content: \"Yes\",\r\n            onAction: this.confirmDelete\r\n          }}\r\n          secondaryActions={{\r\n            content: \"No\",\r\n            onAction: () => {\r\n              this.setState({ activeDeleteModal: false });\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}