{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { Modal, Autocomplete, InlineError, Stack, DropZone, TextField, Layout, Card, TextStyle, ResourceList, Thumbnail } from \"@shopify/polaris\";\nexport default function Background() {\n  var _useState = useState(0),\n      flag = _useState[0],\n      setFlag = _useState[1];\n\n  var _useState2 = useState([]),\n      backgroundData = _useState2[0],\n      setBackgroundData = _useState2[1];\n\n  var _useState3 = useState([]),\n      backgroundCategory = _useState3[0],\n      setBackgroundCategory = _useState3[1];\n\n  var _useState4 = useState([]),\n      imageItems = _useState4[0],\n      setimageItems = _useState4[1];\n\n  var _useState5 = useState(false),\n      loading = _useState5[0],\n      setLoding = _useState5[1];\n\n  var _useState6 = useState(false),\n      activeModal = _useState6[0],\n      setActiveModal = _useState6[1];\n\n  var _useState7 = useState(false),\n      openFileDialog = _useState7[0],\n      setOpenFileDialog = _useState7[1];\n\n  var _useState8 = useState(),\n      file = _useState8[0],\n      setFile = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      imageError = _useState9[0],\n      setImageError = _useState9[1];\n\n  var _useState10 = useState(\"\"),\n      imageName = _useState10[0],\n      setimageName = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      imageNameError = _useState11[0],\n      setImageNameError = _useState11[1];\n\n  var _useState12 = useState([]),\n      selectedOptions = _useState12[0],\n      setSelectedOptions = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      categoryValue = _useState13[0],\n      setCategoryValue = _useState13[1];\n\n  var _useState14 = useState(backgroundCategory),\n      options = _useState14[0],\n      setOptions = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      imageCategoryError = _useState15[0],\n      setCategoryError = _useState15[1];\n\n  var _useState16 = useState([]),\n      selectedItems = _useState16[0],\n      setSelectedItems = _useState16[1];\n\n  var handleChange = useCallback(function () {\n    return setActiveModal(!activeModal);\n  }, [activeModal]);\n  var toggleOpenFileDialog = useCallback(function () {\n    return setOpenFileDialog(function (openFileDialog) {\n      return !openFileDialog;\n    });\n  }, []);\n  var validImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\n  var handleDropZoneDrop = useCallback(function (_dropFiles, acceptedFiles, _rejectedFiles) {\n    setFile(function (file) {\n      return acceptedFiles[0];\n    });\n    setImageError(\"\");\n  }, []);\n\n  var fileUpload = !file && __jsx(DropZone.FileUpload, null);\n\n  var uploadedFile = file && __jsx(Stack, null, __jsx(Thumbnail, {\n    size: \"large\",\n    alt: file.name,\n    source: validImageTypes.indexOf(file.type) > 0 ? window.URL.createObjectURL(file) : \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\n  }));\n\n  var handleImageName = useCallback(function (newValue) {\n    setimageName(newValue);\n    setImageNameError(\"\");\n  }, []);\n  var updateText = useCallback(function (value) {\n    setCategoryValue(value);\n\n    if (value === \"\") {\n      setOptions(backgroundCategory);\n      return;\n    }\n\n    try {\n      var filterRegex = new RegExp(value, \"i\");\n      var resultOptions = backgroundCategory.filter(function (option) {\n        return option.label.match(filterRegex);\n      });\n      setOptions(resultOptions);\n    } catch (err) {\n      console.log(err.message);\n    }\n\n    setCategoryError(\"\");\n  }, [backgroundCategory]);\n  var updateSelection = useCallback(function (selected) {\n    updateText(selected[0]);\n    setSelectedOptions(selected);\n    setCategoryValue(selected[0]);\n  }, []);\n\n  var textField = __jsx(Autocomplete.TextField, {\n    onChange: updateText,\n    label: \"Image Category\",\n    value: categoryValue,\n    placeholder: \"Enter category\",\n    error: imageCategoryError\n  });\n\n  var modalInit = __jsx(Modal.Section, null, __jsx(Stack, {\n    alignment: \"center\"\n  }, __jsx(Stack.Item, null, __jsx(\"div\", {\n    style: {\n      width: 100,\n      height: 100\n    }\n  }, __jsx(DropZone, {\n    openFileDialog: openFileDialog,\n    onDrop: handleDropZoneDrop,\n    onFileDialogClose: toggleOpenFileDialog\n  }, fileUpload, uploadedFile), __jsx(InlineError, {\n    message: imageError\n  }))), __jsx(Stack.Item, null, __jsx(TextField, {\n    label: \"Image Name\",\n    value: imageName,\n    onChange: handleImageName,\n    placeholder: \"Enter image name\",\n    error: imageNameError\n  })), __jsx(Stack.Item, null, __jsx(Autocomplete, {\n    options: options,\n    selected: selectedOptions,\n    onSelect: updateSelection,\n    textField: textField\n  }))));\n\n  var _useState17 = useState(modalInit),\n      modalData = _useState17[0],\n      setModalData = _useState17[1];\n\n  var editImages = function editImages() {\n    var imageData = [];\n\n    for (var i in selectedItems) {\n      var selectedItem = selectedItems[i];\n\n      for (var j in backgroundData) {\n        var dataItem = backgroundData[j];\n\n        if (selectedItem === dataItem._id) {\n          imageData.push(dataItem);\n        }\n      }\n    }\n\n    var listItems = imageData.map(function (item) {\n      return __jsx(Modal.Section, null, __jsx(Stack, {\n        alignment: \"center\"\n      }, __jsx(Stack.Item, null, __jsx(\"div\", {\n        style: {\n          width: 100,\n          height: 100\n        }\n      }, __jsx(DropZone, {\n        openFileDialog: openFileDialog,\n        onDrop: handleDropZoneDrop,\n        onFileDialogClose: toggleOpenFileDialog\n      }, __jsx(Stack, null, __jsx(Thumbnail, {\n        size: \"large\",\n        alt: item.filename,\n        source: item.filepath\n      }))), __jsx(InlineError, {\n        message: imageError\n      }))), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Image Name\",\n        value: item.filename,\n        onChange: handleImageName,\n        placeholder: \"Enter image name\",\n        error: imageNameError\n      })), __jsx(Stack.Item, null, __jsx(Autocomplete, {\n        options: options,\n        selected: selectedOptions,\n        onSelect: updateSelection,\n        textField: __jsx(Autocomplete.TextField, {\n          onChange: updateText,\n          label: \"Image Category\",\n          value: item.category,\n          placeholder: \"Enter category\",\n          error: imageCategoryError\n        })\n      }))));\n    });\n    setModalData(listItems);\n    setActiveModal(true);\n  };\n\n  var promotedBulkActions = [{\n    content: \"Edit Images\",\n    onAction: editImages\n  }, {\n    content: \"Delete Images\",\n    onAction: handleChange\n  }];\n  var bulkActions = [{\n    content: \"Add New Image\",\n    onAction: handleChange\n  }];\n\n  var handleImages = function handleImages() {\n    if (file === undefined && imageName === \"\" && categoryValue === \"\") {\n      setImageError(\"Need Image\");\n      setImageNameError(\"Need Image Name\");\n      setCategoryError(\"Need Category\");\n      return;\n    } else if (file === undefined && imageName === \"\") {\n      setImageError(\"Need Image\");\n      setImageNameError(\"Need Image Name\");\n    } else if (file === undefined && categoryValue === \"\") {\n      setImageError(\"Need Image\");\n      setCategoryError(\"Need Category\");\n    } else if (imageName === \"\" && categoryValue === \"\") {\n      setImageNameError(\"Need Image Name\");\n      setCategoryError(\"Need Category\");\n    } else if (file === undefined) {\n      setImageError(\"Need Image\");\n      return;\n    } else if (imageName === \"\") {\n      setImageNameError(\"Need Image Name\");\n      return;\n    } else if (categoryValue === \"\") {\n      setCategoryError(\"Need Category\");\n      return;\n    }\n\n    setLoding(true);\n\n    for (var i in backgroundData) {\n      var item = backgroundData[i]; // console.log(item)\n\n      if (item.filename === imageName) {\n        setImageNameError(\"Image Name Exist\");\n        return;\n      }\n    }\n\n    var formdata = new FormData();\n    formdata.append(\"file\", file);\n    formdata.append(\"filename\", imageName);\n    formdata.append(\"category\", categoryValue);\n    axios.post(\"http://localhost:3000/background\", formdata, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(function (res) {\n      if (res.data === \"success\") {\n        setFlag(0);\n        setActiveModal(false);\n        setFile();\n        setimageName(\"\");\n        setCategoryValue(\"\");\n        setLoding(false);\n        console.log(res.data);\n      } else {\n        console.log(res.data);\n      }\n    });\n  };\n\n  useEffect(function () {\n    function fetchData() {\n      var response, allCategorys, i, filterCategory, categoryArr, _i, item, imageItemsData, _i2, _item;\n\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              if (flag) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3000/background\"));\n\n            case 4:\n              response = _context.sent;\n              setBackgroundData(response.data);\n              allCategorys = [];\n\n              for (i in backgroundData) {\n                allCategorys.push(backgroundData[i].category);\n              }\n\n              filterCategory = allCategorys.filter(function (elem, index, self) {\n                return index === self.indexOf(elem);\n              });\n              categoryArr = [];\n\n              for (_i in filterCategory) {\n                item = filterCategory[_i];\n                categoryArr.push({\n                  value: item,\n                  label: item\n                });\n              }\n\n              setBackgroundCategory(categoryArr);\n              imageItemsData = [];\n\n              for (_i2 in backgroundData) {\n                _item = backgroundData[_i2];\n                imageItemsData.push({\n                  id: _item._id,\n                  name: _item.filename,\n                  category: _item.category,\n                  media: __jsx(Thumbnail, {\n                    source: _item.filepath,\n                    alt: _item.filename\n                  })\n                });\n              }\n\n              setimageItems(imageItemsData);\n              setFlag(1);\n\n            case 16:\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"Axios request failed: \".concat(_context.t0));\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 18]], Promise);\n    }\n\n    fetchData();\n  });\n  return __jsx(\"div\", null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"Background Images\",\n    actions: [{\n      content: \"Add Background Image\",\n      onAction: handleChange\n    }]\n  }, __jsx(Card.Section, null, __jsx(ResourceList, {\n    resourceName: {\n      singular: \"image\",\n      plural: \"images\"\n    },\n    items: imageItems,\n    selectedItems: selectedItems,\n    onSelectionChange: setSelectedItems,\n    promotedBulkActions: promotedBulkActions,\n    bulkActions: bulkActions,\n    renderItem: function renderItem(item) {\n      var id = item.id,\n          name = item.name,\n          media = item.media,\n          category = item.category;\n      return __jsx(ResourceList.Item, {\n        id: id,\n        media: media,\n        accessibilityLabel: \"View details for \".concat(name)\n      }, __jsx(\"h3\", null, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, __jsx(\"span\", {\n        style: {\n          fontSize: 12\n        }\n      }, \"Name: \"), name)), __jsx(\"h3\", null, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, __jsx(\"span\", {\n        style: {\n          fontSize: 12\n        }\n      }, \"Category: \"), category)));\n    }\n  }))))), __jsx(Modal, {\n    open: activeModal,\n    onClose: handleChange,\n    title: \"Add Image\",\n    primaryAction: {\n      content: \"Add\",\n      onAction: handleImages\n    },\n    style: {\n      padding: \"20px\"\n    },\n    loading: loading\n  }, __jsx(\"div\", null, modalData)));\n}","map":{"version":3,"sources":["E:/Lenny/blendapp/pages/index.js"],"names":["React","useCallback","useState","useEffect","useRef","axios","Modal","Autocomplete","InlineError","Stack","DropZone","TextField","Layout","Card","TextStyle","ResourceList","Thumbnail","Background","flag","setFlag","backgroundData","setBackgroundData","backgroundCategory","setBackgroundCategory","imageItems","setimageItems","loading","setLoding","activeModal","setActiveModal","openFileDialog","setOpenFileDialog","file","setFile","imageError","setImageError","imageName","setimageName","imageNameError","setImageNameError","selectedOptions","setSelectedOptions","categoryValue","setCategoryValue","options","setOptions","imageCategoryError","setCategoryError","selectedItems","setSelectedItems","handleChange","toggleOpenFileDialog","validImageTypes","handleDropZoneDrop","_dropFiles","acceptedFiles","_rejectedFiles","fileUpload","uploadedFile","name","indexOf","type","window","URL","createObjectURL","handleImageName","newValue","updateText","value","filterRegex","RegExp","resultOptions","filter","option","label","match","err","console","log","message","updateSelection","selected","textField","modalInit","width","height","modalData","setModalData","editImages","imageData","i","selectedItem","j","dataItem","_id","push","listItems","map","item","filename","filepath","category","promotedBulkActions","content","onAction","bulkActions","handleImages","undefined","formdata","FormData","append","post","headers","then","res","data","fetchData","get","response","allCategorys","filterCategory","elem","index","self","categoryArr","imageItemsData","id","media","singular","plural","fontSize","padding"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Modal,\r\n  Autocomplete,\r\n  InlineError,\r\n  Stack,\r\n  DropZone,\r\n  TextField,\r\n  Layout,\r\n  Card,\r\n  TextStyle,\r\n  ResourceList,\r\n  Thumbnail\r\n} from \"@shopify/polaris\";\r\n\r\nexport default function Background() {\r\n  const [flag, setFlag] = useState(0);\r\n  const [backgroundData, setBackgroundData] = useState([]);\r\n  const [backgroundCategory, setBackgroundCategory] = useState([]);\r\n  const [imageItems, setimageItems] = useState([]);\r\n  const [loading, setLoding] = useState(false);\r\n  const [activeModal, setActiveModal] = useState(false);\r\n  const [openFileDialog, setOpenFileDialog] = useState(false);\r\n  const [file, setFile] = useState();\r\n  const [imageError, setImageError] = useState(\"\");\r\n  const [imageName, setimageName] = useState(\"\");\r\n  const [imageNameError, setImageNameError] = useState(\"\");\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [categoryValue, setCategoryValue] = useState(\"\");\r\n  const [options, setOptions] = useState(backgroundCategory);\r\n  const [imageCategoryError, setCategoryError] = useState(\"\");\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n\r\n  const handleChange = useCallback(() => setActiveModal(!activeModal), [\r\n    activeModal\r\n  ]);\r\n  const toggleOpenFileDialog = useCallback(\r\n    () => setOpenFileDialog(openFileDialog => !openFileDialog),\r\n    []\r\n  );\r\n  const validImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\r\n  const handleDropZoneDrop = useCallback(\r\n    (_dropFiles, acceptedFiles, _rejectedFiles) => {\r\n      setFile(file => acceptedFiles[0]);\r\n      setImageError(\"\");\r\n    },\r\n    []\r\n  );\r\n  const fileUpload = !file && <DropZone.FileUpload />;\r\n  const uploadedFile = file && (\r\n    <Stack>\r\n      <Thumbnail\r\n        size=\"large\"\r\n        alt={file.name}\r\n        source={\r\n          validImageTypes.indexOf(file.type) > 0\r\n            ? window.URL.createObjectURL(file)\r\n            : \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\r\n        }\r\n      />\r\n    </Stack>\r\n  );\r\n  const handleImageName = useCallback(newValue => {\r\n    setimageName(newValue);\r\n    setImageNameError(\"\");\r\n  }, []);\r\n\r\n  const updateText = useCallback(\r\n    value => {\r\n      setCategoryValue(value);\r\n      if (value === \"\") {\r\n        setOptions(backgroundCategory);\r\n        return;\r\n      }\r\n      try {\r\n        const filterRegex = new RegExp(value, \"i\");\r\n        const resultOptions = backgroundCategory.filter(option =>\r\n          option.label.match(filterRegex)\r\n        );\r\n        setOptions(resultOptions);\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n      setCategoryError(\"\");\r\n    },\r\n    [backgroundCategory]\r\n  );\r\n\r\n  const updateSelection = useCallback(selected => {\r\n    updateText(selected[0]);\r\n    setSelectedOptions(selected);\r\n    setCategoryValue(selected[0]);\r\n  }, []);\r\n\r\n  const textField = (\r\n    <Autocomplete.TextField\r\n      onChange={updateText}\r\n      label=\"Image Category\"\r\n      value={categoryValue}\r\n      placeholder=\"Enter category\"\r\n      error={imageCategoryError}\r\n    />\r\n  );\r\n\r\n  const modalInit = (\r\n    <Modal.Section>\r\n      <Stack alignment=\"center\">\r\n        <Stack.Item>\r\n          <div style={{ width: 100, height: 100 }}>\r\n            <DropZone\r\n              openFileDialog={openFileDialog}\r\n              onDrop={handleDropZoneDrop}\r\n              onFileDialogClose={toggleOpenFileDialog}\r\n            >\r\n              {fileUpload}\r\n              {uploadedFile}\r\n            </DropZone>\r\n            <InlineError message={imageError} />\r\n          </div>\r\n        </Stack.Item>\r\n        <Stack.Item>\r\n          <TextField\r\n            label=\"Image Name\"\r\n            value={imageName}\r\n            onChange={handleImageName}\r\n            placeholder=\"Enter image name\"\r\n            error={imageNameError}\r\n          />\r\n        </Stack.Item>\r\n        <Stack.Item>\r\n          <Autocomplete\r\n            options={options}\r\n            selected={selectedOptions}\r\n            onSelect={updateSelection}\r\n            textField={textField}\r\n          />\r\n        </Stack.Item>\r\n      </Stack>\r\n    </Modal.Section>\r\n  );\r\n\r\n  const [modalData, setModalData] = useState(modalInit);\r\n\r\n  const editImages = () => {\r\n    let imageData = [];\r\n    for (let i in selectedItems) {\r\n      let selectedItem = selectedItems[i];\r\n      for (let j in backgroundData) {\r\n        let dataItem = backgroundData[j];\r\n        if (selectedItem === dataItem._id) {\r\n          imageData.push(dataItem);\r\n        }\r\n      }\r\n    }\r\n    const listItems = imageData.map(item => (\r\n      <Modal.Section>\r\n        <Stack alignment=\"center\">\r\n          <Stack.Item>\r\n            <div style={{ width: 100, height: 100 }}>\r\n              <DropZone\r\n                openFileDialog={openFileDialog}\r\n                onDrop={handleDropZoneDrop}\r\n                onFileDialogClose={toggleOpenFileDialog}\r\n              >\r\n                <Stack>\r\n                  <Thumbnail\r\n                    size=\"large\"\r\n                    alt={item.filename}\r\n                    source={item.filepath}\r\n                  />\r\n                </Stack>\r\n              </DropZone>\r\n              <InlineError message={imageError} />\r\n            </div>\r\n          </Stack.Item>\r\n          <Stack.Item>\r\n            <TextField\r\n              label=\"Image Name\"\r\n              value={item.filename}\r\n              onChange={handleImageName}\r\n              placeholder=\"Enter image name\"\r\n              error={imageNameError}\r\n            />\r\n          </Stack.Item>\r\n          <Stack.Item>\r\n            <Autocomplete\r\n              options={options}\r\n              selected={selectedOptions}\r\n              onSelect={updateSelection}\r\n              textField={\r\n                <Autocomplete.TextField\r\n                  onChange={updateText}\r\n                  label=\"Image Category\"\r\n                  value={item.category}\r\n                  placeholder=\"Enter category\"\r\n                  error={imageCategoryError}\r\n                />\r\n              }\r\n            />\r\n          </Stack.Item>\r\n        </Stack>\r\n      </Modal.Section>\r\n    ));\r\n    setModalData(listItems);\r\n    setActiveModal(true)\r\n  };\r\n\r\n  const promotedBulkActions = [\r\n    {\r\n      content: \"Edit Images\",\r\n      onAction: editImages\r\n    },\r\n    {\r\n      content: \"Delete Images\",\r\n      onAction: handleChange\r\n    }\r\n  ];\r\n\r\n  const bulkActions = [\r\n    {\r\n      content: \"Add New Image\",\r\n      onAction: handleChange\r\n    }\r\n  ];\r\n\r\n  const handleImages = () => {\r\n    if (file === undefined && imageName === \"\" && categoryValue === \"\") {\r\n      setImageError(\"Need Image\");\r\n      setImageNameError(\"Need Image Name\");\r\n      setCategoryError(\"Need Category\");\r\n      return;\r\n    } else if (file === undefined && imageName === \"\") {\r\n      setImageError(\"Need Image\");\r\n      setImageNameError(\"Need Image Name\");\r\n    } else if (file === undefined && categoryValue === \"\") {\r\n      setImageError(\"Need Image\");\r\n      setCategoryError(\"Need Category\");\r\n    } else if (imageName === \"\" && categoryValue === \"\") {\r\n      setImageNameError(\"Need Image Name\");\r\n      setCategoryError(\"Need Category\");\r\n    } else if (file === undefined) {\r\n      setImageError(\"Need Image\");\r\n      return;\r\n    } else if (imageName === \"\") {\r\n      setImageNameError(\"Need Image Name\");\r\n      return;\r\n    } else if (categoryValue === \"\") {\r\n      setCategoryError(\"Need Category\");\r\n      return;\r\n    }\r\n    setLoding(true);\r\n    for (let i in backgroundData) {\r\n      let item = backgroundData[i];\r\n      // console.log(item)\r\n      if (item.filename === imageName) {\r\n        setImageNameError(\"Image Name Exist\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    let formdata = new FormData();\r\n    formdata.append(\"file\", file);\r\n    formdata.append(\"filename\", imageName);\r\n    formdata.append(\"category\", categoryValue);\r\n    axios\r\n      .post(\"http://localhost:3000/background\", formdata, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.data === \"success\") {\r\n          setFlag(0);\r\n          setActiveModal(false);\r\n          setFile();\r\n          setimageName(\"\");\r\n          setCategoryValue(\"\");\r\n          setLoding(false);\r\n          console.log(res.data);\r\n        } else {\r\n          console.log(res.data);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        if (!flag) {\r\n          let response = await axios.get(\"http://localhost:3000/background\");\r\n          setBackgroundData(response.data);\r\n          let allCategorys = [];\r\n          for (let i in backgroundData) {\r\n            allCategorys.push(backgroundData[i].category);\r\n          }\r\n          let filterCategory = allCategorys.filter(function(elem, index, self) {\r\n            return index === self.indexOf(elem);\r\n          });\r\n          let categoryArr = [];\r\n          for (let i in filterCategory) {\r\n            let item = filterCategory[i];\r\n            categoryArr.push({\r\n              value: item,\r\n              label: item\r\n            });\r\n          }\r\n          setBackgroundCategory(categoryArr);\r\n          let imageItemsData = [];\r\n          for (let i in backgroundData) {\r\n            let item = backgroundData[i];\r\n            imageItemsData.push({\r\n              id: item._id,\r\n              name: item.filename,\r\n              category: item.category,\r\n              media: <Thumbnail source={item.filepath} alt={item.filename} />\r\n            });\r\n          }\r\n          setimageItems(imageItemsData);\r\n          setFlag(1);\r\n        }\r\n      } catch (e) {\r\n        console.log(`Axios request failed: ${e}`);\r\n      }\r\n    }\r\n    fetchData();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Layout>\r\n        <Layout.Section>\r\n          <Card\r\n            title=\"Background Images\"\r\n            actions={[\r\n              {\r\n                content: \"Add Background Image\",\r\n                onAction: handleChange\r\n              }\r\n            ]}\r\n          >\r\n            <Card.Section>\r\n              <ResourceList\r\n                resourceName={{ singular: \"image\", plural: \"images\" }}\r\n                items={imageItems}\r\n                selectedItems={selectedItems}\r\n                onSelectionChange={setSelectedItems}\r\n                promotedBulkActions={promotedBulkActions}\r\n                bulkActions={bulkActions}\r\n                renderItem={item => {\r\n                  const { id, name, media, category } = item;\r\n\r\n                  return (\r\n                    <ResourceList.Item\r\n                      id={id}\r\n                      media={media}\r\n                      accessibilityLabel={`View details for ${name}`}\r\n                    >\r\n                      <h3>\r\n                        <TextStyle variation=\"strong\">\r\n                          <span style={{ fontSize: 12 }}>Name: </span>\r\n                          {name}\r\n                        </TextStyle>\r\n                      </h3>\r\n                      <h3>\r\n                        <TextStyle variation=\"strong\">\r\n                          <span style={{ fontSize: 12 }}>Category: </span>\r\n                          {category}\r\n                        </TextStyle>\r\n                      </h3>\r\n                    </ResourceList.Item>\r\n                  );\r\n                }}\r\n              />\r\n            </Card.Section>\r\n          </Card>\r\n        </Layout.Section>\r\n      </Layout>\r\n      <Modal\r\n        open={activeModal}\r\n        onClose={handleChange}\r\n        title=\"Add Image\"\r\n        primaryAction={{\r\n          content: \"Add\",\r\n          onAction: handleImages\r\n        }}\r\n        style={{ padding: \"20px\" }}\r\n        loading={loading}\r\n      >\r\n        <div>{modalData}</div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}