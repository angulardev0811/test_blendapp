{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { Modal, Autocomplete, InlineError, Stack, DropZone, TextField, Layout, Card, TextStyle, ResourceList, Thumbnail } from '@shopify/polaris';\nexport default function Background() {\n  var backgroundData, backgroundCategory, i, _useState, activeModal, setActiveModal, handleChange, _useState2, openFileDialog, setOpenFileDialog, _useState3, file, setFile, _useState4, imageError, setImageError, handleImageError, toggleOpenFileDialog, validImageTypes, handleDropZoneDrop, fileUpload, uploadedFile, _useState5, imageName, setimageName, _useState6, imageNameError, setImageNameError, handleImageName, handleImageNameError, categoryOptions, _useState7, selectedOptions, setSelectedOptions, _useState8, categoryValue, setCategoryValue, _useState9, options, setOptions, _useState10, imageCategoryError, setCategoryError, handleCategoryError, updateText, updateSelection, textField, handleImages;\n\n  return _regeneratorRuntime.async(function Background$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          handleCategoryError = function _handleCategoryError(txt) {\n            setCategoryError(txt);\n          };\n\n          handleImageNameError = function _handleImageNameError(txt) {\n            setImageNameError(txt);\n          };\n\n          handleImageError = function _handleImageError(txt) {\n            setImageError(txt);\n          };\n\n          //Get Image Data\n          backgroundData = function backgroundData() {\n            axios.get('http://localhost:3000/background').then(function (res) {\n              console.log(res.data);\n              return res.data;\n            });\n          };\n\n          backgroundCategory = [];\n\n          for (i in backgroundData) {\n            // backgroundData.push({ value: backgroundData[i].category, label: backgroundData[i].category});\n            console.log(backgroundData[i]);\n          }\n\n          console.log(backgroundCategory); // Modal\n\n          _useState = useState(false), activeModal = _useState[0], setActiveModal = _useState[1];\n          handleChange = useCallback(function () {\n            return setActiveModal(!activeModal);\n          }, [activeModal]); //Modal Upload File\n\n          _useState2 = useState(false), openFileDialog = _useState2[0], setOpenFileDialog = _useState2[1];\n          _useState3 = useState(), file = _useState3[0], setFile = _useState3[1];\n          _useState4 = useState(''), imageError = _useState4[0], setImageError = _useState4[1];\n          toggleOpenFileDialog = useCallback(function () {\n            return setOpenFileDialog(function (openFileDialog) {\n              return !openFileDialog;\n            });\n          }, []);\n          validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\n          handleDropZoneDrop = useCallback(function (_dropFiles, acceptedFiles, _rejectedFiles) {\n            setFile(function (file) {\n              return acceptedFiles[0];\n            });\n            setImageError('');\n          }, []);\n          fileUpload = !file && __jsx(DropZone.FileUpload, null);\n          uploadedFile = file && __jsx(Stack, null, __jsx(Thumbnail, {\n            size: \"large\",\n            alt: file.name,\n            source: validImageTypes.indexOf(file.type) > 0 ? window.URL.createObjectURL(file) : 'https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304'\n          })); //Modal Image Name\n\n          _useState5 = useState(''), imageName = _useState5[0], setimageName = _useState5[1];\n          _useState6 = useState(''), imageNameError = _useState6[0], setImageNameError = _useState6[1];\n          handleImageName = useCallback(function (newValue) {\n            setimageName(newValue);\n            handleImageNameError('');\n          }, []);\n          //Modal Category\n          categoryOptions = [{\n            value: 'rustic',\n            label: 'Rustic'\n          }, {\n            value: 'antique',\n            label: 'Antique'\n          }, {\n            value: 'vinyl',\n            label: 'Vinyl'\n          }, {\n            value: 'vintage',\n            label: 'Vintage'\n          }, {\n            value: 'refurbished',\n            label: 'Refurbished'\n          }];\n          _useState7 = useState([]), selectedOptions = _useState7[0], setSelectedOptions = _useState7[1];\n          _useState8 = useState(''), categoryValue = _useState8[0], setCategoryValue = _useState8[1];\n          _useState9 = useState(categoryOptions), options = _useState9[0], setOptions = _useState9[1];\n          _useState10 = useState(''), imageCategoryError = _useState10[0], setCategoryError = _useState10[1];\n          updateText = useCallback(function (value) {\n            setCategoryValue(value);\n\n            if (value === '') {\n              setOptions(categoryOptions);\n              return;\n            }\n\n            var filterRegex = new RegExp(value, 'i');\n            var resultOptions = categoryOptions.filter(function (option) {\n              return option.label.match(filterRegex);\n            });\n            setOptions(resultOptions);\n            setCategoryError('');\n          }, [categoryOptions]);\n          updateSelection = useCallback(function (selected) {\n            updateText(selected[0]);\n            setSelectedOptions(selected);\n            setCategoryValue(selected[0]);\n          }, []);\n          textField = __jsx(Autocomplete.TextField, {\n            onChange: updateText,\n            label: \"Image Category\",\n            value: categoryValue,\n            placeholder: \"Enter category\",\n            error: imageCategoryError\n          }); //Submit Image Data\n\n          handleImages = function handleImages() {\n            if (file === undefined && imageName === '' && categoryValue === '') {\n              handleImageError('Need Image');\n              handleImageNameError('Need Image Name');\n              handleCategoryError('Need Category');\n              return;\n            } else if (file === undefined && imageName === '') {\n              handleImageError('Need Image');\n              handleImageNameError('Need Image Name');\n            } else if (file === undefined && categoryValue === '') {\n              handleImageError('Need Image');\n              handleCategoryError('Need Category');\n            } else if (imageName === '' && categoryValue === '') {\n              handleImageNameError('Need Image Name');\n              handleCategoryError('Need Category');\n            }\n\n            if (file === undefined) {\n              handleImageError('Need Image');\n              return;\n            }\n\n            if (imageName === '') {\n              handleImageNameError('Need Image Name');\n              return;\n            }\n\n            if (categoryValue === '') {\n              handleCategoryError('Need Category');\n              return;\n            }\n\n            var formdata = new FormData();\n            formdata.append('file', file);\n            formdata.append('filename', imageName);\n            formdata.append('category', categoryValue);\n            axios.post('http://localhost:3000/background', formdata, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            }).then(function (res) {\n              if (res.data == 'success') {\n                setActiveModal(false);\n              } else {\n                console.log(res.data);\n              }\n            });\n          };\n\n          return _context.abrupt(\"return\", __jsx(\"div\", null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n            title: \"Background Images\",\n            actions: [{\n              content: 'Add Background Image',\n              onAction: handleChange\n            }]\n          }, __jsx(Card.Section, null, __jsx(TextStyle, {\n            variation: \"subdued\"\n          }, \"455 units available\")), __jsx(Card.Section, {\n            title: \"Items\"\n          }, __jsx(ResourceList, {\n            resourceName: {\n              singular: 'image',\n              plural: 'images'\n            },\n            items: [{\n              id: 341,\n              name: 'Black & orange scarf',\n              media: __jsx(Thumbnail, {\n                source: \"https://burst.shopifycdn.com/photos/black-orange-stripes_373x@2x.jpg\",\n                alt: \"Black orange scarf\"\n              })\n            }, {\n              id: 256,\n              name: 'Tucan scarf',\n              media: __jsx(Thumbnail, {\n                source: \"https://burst.shopifycdn.com/photos/tucan-scarf_373x@2x.jpg\",\n                alt: \"Tucan scarf\"\n              })\n            }],\n            renderItem: function renderItem(item) {\n              var id = item.id,\n                  name = item.name,\n                  media = item.media;\n              return __jsx(ResourceList.Item, {\n                id: id,\n                media: media,\n                accessibilityLabel: \"View details for \".concat(name)\n              }, __jsx(\"h3\", null, __jsx(TextStyle, {\n                variation: \"strong\"\n              }, name)));\n            }\n          }))))), __jsx(Modal, {\n            open: activeModal,\n            onClose: handleChange,\n            title: \"Add Image\",\n            primaryAction: {\n              content: 'Add',\n              onAction: handleImages\n            },\n            style: {\n              padding: '20px'\n            }\n          }, __jsx(Modal.Section, null, __jsx(Stack, {\n            alignment: \"center\"\n          }, __jsx(Stack.Item, null, __jsx(\"div\", {\n            style: {\n              width: 100,\n              height: 100\n            }\n          }, __jsx(DropZone, {\n            openFileDialog: openFileDialog,\n            onDrop: handleDropZoneDrop,\n            onFileDialogClose: toggleOpenFileDialog\n          }, fileUpload, uploadedFile), __jsx(InlineError, {\n            message: imageError\n          }))), __jsx(Stack.Item, null, __jsx(TextField, {\n            label: \"Image Name\",\n            value: imageName,\n            onChange: handleImageName,\n            placeholder: \"Enter image name\",\n            error: imageNameError\n          })), __jsx(Stack.Item, null, __jsx(Autocomplete, {\n            options: options,\n            selected: selectedOptions,\n            onSelect: updateSelection,\n            textField: textField\n          })))))));\n\n        case 30:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["E:/Lenny/blendapp/pages/index.js"],"names":["React","useCallback","useState","axios","Modal","Autocomplete","InlineError","Stack","DropZone","TextField","Layout","Card","TextStyle","ResourceList","Thumbnail","Background","handleImageError","handleImageNameError","handleCategoryError","txt","setCategoryError","setImageNameError","setImageError","backgroundData","get","then","res","console","log","data","backgroundCategory","i","activeModal","setActiveModal","handleChange","openFileDialog","setOpenFileDialog","file","setFile","imageError","toggleOpenFileDialog","validImageTypes","handleDropZoneDrop","_dropFiles","acceptedFiles","_rejectedFiles","fileUpload","uploadedFile","name","indexOf","type","window","URL","createObjectURL","imageName","setimageName","imageNameError","handleImageName","newValue","categoryOptions","value","label","selectedOptions","setSelectedOptions","categoryValue","setCategoryValue","options","setOptions","imageCategoryError","updateText","filterRegex","RegExp","resultOptions","filter","option","match","updateSelection","selected","textField","handleImages","undefined","formdata","FormData","append","post","headers","content","onAction","singular","plural","id","media","item","padding","width","height"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport {Modal, Autocomplete, InlineError, Stack, DropZone, TextField, Layout, Card, TextStyle, ResourceList, Thumbnail} from '@shopify/polaris';\r\n\r\nexport default async function Background() {\r\n  //Get Image Data\r\n  let backgroundData = () => { \r\n    axios.get('http://localhost:3000/background')\r\n      .then(res => {\r\n        console.log(res.data);\r\n        return res.data;\r\n      });\r\n  }\r\n\r\n  let backgroundCategory = [];\r\n\r\n  for( let i in backgroundData ){\r\n    // backgroundData.push({ value: backgroundData[i].category, label: backgroundData[i].category});\r\n    console.log(backgroundData[i])\r\n  }\r\n  console.log(backgroundCategory)\r\n\r\n  // Modal\r\n  const [activeModal, setActiveModal] = useState(false);\r\n  const handleChange = useCallback(() => setActiveModal(!activeModal), [activeModal]);  \r\n  \r\n  //Modal Upload File\r\n  const [openFileDialog, setOpenFileDialog] = useState(false);\r\n  const [file, setFile] = useState();\r\n  const [imageError, setImageError] = useState('');\r\n  function handleImageError(txt) {\r\n    setImageError(txt);\r\n  }\r\n  const toggleOpenFileDialog = useCallback(\r\n    () => setOpenFileDialog((openFileDialog) => !openFileDialog),\r\n    [],\r\n  );  \r\n  const validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\r\n  const handleDropZoneDrop = useCallback(\r\n    (_dropFiles, acceptedFiles, _rejectedFiles) =>{\r\n      setFile((file) => acceptedFiles[0])\r\n      setImageError('')\r\n    },\r\n    [],\r\n  );\r\n  const fileUpload = !file && <DropZone.FileUpload />;\r\n  const uploadedFile = file && (\r\n    <Stack>\r\n      <Thumbnail\r\n        size=\"large\"\r\n        alt={file.name}\r\n        source={\r\n          validImageTypes.indexOf(file.type) > 0\r\n            ? window.URL.createObjectURL(file)\r\n            : 'https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304'\r\n        }\r\n      />\r\n    </Stack>\r\n  );\r\n\r\n  //Modal Image Name\r\n  const [imageName, setimageName] = useState('');\r\n  const [imageNameError, setImageNameError] = useState('');\r\n  const handleImageName = useCallback( \r\n    (newValue) => {\r\n      setimageName(newValue)\r\n      handleImageNameError('');\r\n    },\r\n    [],\r\n  );\r\n  function handleImageNameError(txt) {\r\n    setImageNameError(txt);\r\n  }\r\n\r\n  //Modal Category\r\n  let categoryOptions = [\r\n    {value: 'rustic', label: 'Rustic'},\r\n    {value: 'antique', label: 'Antique'},\r\n    {value: 'vinyl', label: 'Vinyl'},\r\n    {value: 'vintage', label: 'Vintage'},\r\n    {value: 'refurbished', label: 'Refurbished'},\r\n  ];\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [categoryValue, setCategoryValue] = useState('');\r\n  const [options, setOptions] = useState(categoryOptions);\r\n  const [imageCategoryError, setCategoryError] = useState('');\r\n\r\n  function handleCategoryError(txt) {\r\n    setCategoryError(txt);\r\n  }\r\n  const updateText = useCallback(\r\n    (value) => {\r\n      setCategoryValue(value);\r\n      if (value === '') {\r\n        setOptions(categoryOptions);\r\n        return;\r\n      }\r\n      const filterRegex = new RegExp(value, 'i');\r\n      const resultOptions = categoryOptions.filter((option) =>\r\n        option.label.match(filterRegex),\r\n      );\r\n      setOptions(resultOptions);\r\n      setCategoryError('');\r\n    },\r\n    [categoryOptions],\r\n  );\r\n\r\n  const updateSelection = useCallback((selected) => {\r\n    updateText(selected[0])\r\n    setSelectedOptions(selected)\r\n    setCategoryValue(selected[0]);\r\n  }, []);\r\n\r\n  const textField = (\r\n    <Autocomplete.TextField\r\n      onChange={updateText}\r\n      label=\"Image Category\"\r\n      value={categoryValue}\r\n      placeholder=\"Enter category\"\r\n      error={imageCategoryError}\r\n    />\r\n  );\r\n\r\n  //Submit Image Data\r\n  const handleImages = () => {\r\n    if(file === undefined && imageName === '' && categoryValue === '') {\r\n      handleImageError('Need Image');\r\n      handleImageNameError('Need Image Name');\r\n      handleCategoryError('Need Category');\r\n      return;\r\n    } else if(file === undefined && imageName === ''){\r\n      handleImageError('Need Image');\r\n      handleImageNameError('Need Image Name');\r\n    } else if(file === undefined && categoryValue === ''){\r\n      handleImageError('Need Image');\r\n      handleCategoryError('Need Category');\r\n    } else if(imageName === '' && categoryValue === ''){\r\n      handleImageNameError('Need Image Name');\r\n      handleCategoryError('Need Category');\r\n    }\r\n    if(file === undefined) {\r\n      handleImageError('Need Image');\r\n      return;\r\n    }\r\n    if(imageName === '') {\r\n      handleImageNameError('Need Image Name');\r\n      return;\r\n    }\r\n    if(categoryValue === '') {\r\n      handleCategoryError('Need Category');\r\n      return;\r\n    }\r\n    let formdata = new FormData();\r\n    formdata.append('file', file);\r\n    formdata.append('filename', imageName);\r\n    formdata.append('category', categoryValue);\r\n    axios.post('http://localhost:3000/background', formdata, {\r\n        headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    })\r\n    .then(res => {\r\n      if(res.data == 'success') {\r\n        setActiveModal(false);\r\n      } else {\r\n        console.log(res.data);\r\n      }\r\n    });\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <div>\r\n      <Layout>\r\n            <Layout.Section>\r\n                <Card \r\n                    title=\"Background Images\" \r\n                    actions={[{\r\n                        content: 'Add Background Image',\r\n                        onAction: handleChange\r\n                    }]}\r\n                >\r\n                <Card.Section>\r\n                    <TextStyle variation=\"subdued\">455 units available</TextStyle>\r\n                </Card.Section>\r\n                <Card.Section title=\"Items\">\r\n                    <ResourceList\r\n                    resourceName={{singular: 'image', plural: 'images'}}\r\n                    items={[\r\n                        {\r\n                            id: 341,\r\n                            name: 'Black & orange scarf',\r\n                            media: (\r\n                                <Thumbnail\r\n                                source=\"https://burst.shopifycdn.com/photos/black-orange-stripes_373x@2x.jpg\"\r\n                                alt=\"Black orange scarf\"\r\n                                />\r\n                            ),\r\n                        },\r\n                        {\r\n                            id: 256,\r\n                            name: 'Tucan scarf',\r\n                            media: (\r\n                                <Thumbnail\r\n                                source=\"https://burst.shopifycdn.com/photos/tucan-scarf_373x@2x.jpg\"\r\n                                alt=\"Tucan scarf\"\r\n                                />\r\n                            ),\r\n                        },\r\n                    ]}\r\n                    renderItem={(item) => {\r\n                        const {id, name, media} = item;\r\n\r\n                        return (\r\n                        <ResourceList.Item\r\n                            id={id}\r\n                            media={media}\r\n                            accessibilityLabel={`View details for ${name}`}\r\n                        >\r\n                            <h3>\r\n                            <TextStyle variation=\"strong\">{name}</TextStyle>\r\n                            </h3>\r\n                        </ResourceList.Item>\r\n                        );\r\n                    }}\r\n                    />\r\n                </Card.Section>\r\n                </Card>\r\n            </Layout.Section>\r\n        </Layout>\r\n        <Modal\r\n            open={activeModal}\r\n            onClose={handleChange}\r\n            title=\"Add Image\"\r\n            primaryAction={{\r\n                content: 'Add',\r\n                onAction: handleImages,\r\n            }}\r\n            style={{padding: '20px'}}\r\n        >\r\n            <Modal.Section>\r\n                <Stack alignment=\"center\">\r\n                    <Stack.Item>\r\n                        <div style={{width: 100, height: 100 }}>\r\n                            <DropZone\r\n                            openFileDialog={openFileDialog}\r\n                            onDrop={handleDropZoneDrop}\r\n                            onFileDialogClose={toggleOpenFileDialog}\r\n                            >\r\n                            {fileUpload}\r\n                            {uploadedFile}\r\n                            </DropZone>\r\n                            <InlineError message={imageError} />\r\n                        </div>\r\n                    </Stack.Item>\r\n                    <Stack.Item>\r\n                      <TextField\r\n                        label=\"Image Name\"\r\n                        value={imageName}\r\n                        onChange={handleImageName}\r\n                        placeholder=\"Enter image name\"\r\n                        error={imageNameError}\r\n                      />\r\n                    </Stack.Item>\r\n                    <Stack.Item>\r\n                      <Autocomplete\r\n                        options={options}\r\n                        selected={selectedOptions}\r\n                        onSelect={updateSelection}\r\n                        textField={textField}\r\n                      />\r\n                    </Stack.Item>\r\n                </Stack>\r\n            </Modal.Section>\r\n        </Modal>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}