{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Layout, Card, ResourceList, TextStyle, Icon, Thumbnail, Modal, Stack, DropZone, InlineError, TextField, Autocomplete } from \"@shopify/polaris\";\nimport { DeleteMajorMonotone, EditMajorMonotone } from \"@shopify/polaris-icons\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getList\", async () => {\n      try {\n        let response = await axios.get(\"https://\" + host + \"/drop\");\n        this.setState({\n          allImageData: response.data\n        });\n        let allImageData = response.data;\n        let allCategorys = [];\n\n        for (let i in allImageData) {\n          allCategorys.push(allImageData[i].category);\n        }\n\n        let filterCategory = allCategorys.filter(function (elem, index, self) {\n          return index === self.indexOf(elem);\n        });\n        let categoryArray = [];\n\n        for (let i in filterCategory) {\n          let item = filterCategory[i];\n          categoryArray.push({\n            value: item,\n            label: item\n          });\n        }\n\n        this.setState({\n          categoryInitOptions: categoryArray,\n          categoryOptions: categoryArray\n        });\n        let imageListItemsData = [];\n\n        for (let i in allImageData) {\n          let item = allImageData[i];\n          imageListItemsData.push({\n            id: item._id,\n            supplierName: item.supplierName,\n            oilName: item.oilName,\n            oilType: item.oilType,\n            functionalSub: item.functionalSub,\n            aromaticSub: item.aromaticSub,\n            blendsWellWith: item.blendsWellWith,\n            aromaticDescription: item.aromaticDescription,\n            aromaType: item.aromaType,\n            classifications: item.classifications,\n            note: item.note,\n            media: __jsx(Thumbnail, {\n              source: item.filepath,\n              alt: item.filename\n            })\n          });\n        }\n\n        this.setState({\n          imageListItems: imageListItemsData,\n          listItemCount: imageListItemsData.length\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    _defineProperty(this, \"addNewImage\", () => {\n      this.setState({\n        activeModal: true,\n        file: null,\n        fileURL: \"\",\n        supplierName: \"\",\n        oilName: \"\",\n        oilType: \"\",\n        functionalSub: \"\",\n        aromaticSub: \"\",\n        blendsWellWith: \"\",\n        aromaticDescription: \"\",\n        aromaType: \"\",\n        classifications: \"\",\n        note: \"\",\n        fileError: \"\",\n        supplierNameError: \"\",\n        oilNameError: \"\",\n        oilTypeError: \"\",\n        functionalSubError: \"\",\n        aromaticSubError: \"\",\n        blendWellWithError: \"\",\n        aromaticDescriptionError: \"\",\n        aromaTypeError: \"\",\n        classificationsError: \"\",\n        noteError: \"\",\n        modalAction: {\n          content: \"Add\",\n          onAction: this.handleAddImages\n        }\n      });\n    });\n\n    _defineProperty(this, \"setSelectedListItems\", items => {\n      console.log(items);\n    });\n\n    _defineProperty(this, \"editImage\", (id, supplierName, media, oilName, oilType, functionalSub, aromaticSub, blendsWellWith, aromaticDescription, aromaType, classifications, note) => {\n      console.log(id, supplierName, media, oilName, oilType, functionalSub, aromaticSub, blendsWellWith, aromaticDescription, aromaType, classifications, note);\n      this.setState({\n        modalAction: {\n          content: \"Save\",\n          onAction: this.handleEditImages\n        },\n        fileError: \"\",\n        supplierNameError: \"\",\n        oilNameError: \"\",\n        oilTypeError: \"\",\n        functionalSubError: \"\",\n        aromaticSubError: \"\",\n        blendWellWithError: \"\",\n        aromaticDescriptionError: \"\",\n        aromaTypeError: \"\",\n        classificationsError: \"\",\n        noteError: \"\",\n        id: id,\n        file: null,\n        fileURL: media.props.source,\n        supplierName: supplierName,\n        oilName: oilName,\n        oilType: oilType,\n        functionalSub: functionalSub,\n        aromaticSub: aromaticSub,\n        blendsWellWith: blendsWellWith,\n        aromaticDescription: aromaticDescription,\n        aromaType: aromaType,\n        classifications: classifications,\n        note: note,\n        activeModal: true,\n        fileFlag: false,\n        nameFlag: false,\n        categoryFlag: false\n      });\n    });\n\n    _defineProperty(this, \"deleteImage\", id => {\n      this.setState({\n        id: id,\n        activeDeleteModal: true\n      });\n      console.log(id);\n    });\n\n    _defineProperty(this, \"confirmDelete\", async () => {\n      this.setState({\n        loading: true\n      });\n      let response = await axios.get(`https://${host}/drop/deleteImage?id=${this.state.id}`);\n      console.log(response.data);\n\n      if (response.data === \"success\") {\n        this.getList();\n        this.setState({\n          loading: false,\n          activeDeleteModal: false\n        });\n      } else {\n        console.log(response.data);\n      }\n    });\n\n    _defineProperty(this, \"closeModal\", () => {\n      this.setState({\n        activeModal: false\n      });\n    });\n\n    _defineProperty(this, \"handleDropZoneDrop\", (_dropFiles, acceptedFiles, _rejectedFiles) => {\n      this.setState({\n        file: acceptedFiles[0],\n        fileError: \"\",\n        fileFlag: true,\n        fileURL: \"\"\n      });\n    });\n\n    _defineProperty(this, \"toggleOpenFileDialog\", () => {\n      this.setState({\n        openFileDialog: !this.state.openFileDialog\n      });\n      console.log(\"toggle\");\n    });\n\n    _defineProperty(this, \"updateImageName\", value => {\n      this.setState({\n        imageName: value,\n        imageNameError: \"\",\n        nameFlag: true\n      });\n    });\n\n    _defineProperty(this, \"updateCategoryOptions\", selected => {\n      const selectedValue = selected.map(selectedItem => {\n        const matchedOption = this.state.categoryOptions.find(option => {\n          return option.value.match(selectedItem);\n        });\n        return matchedOption && matchedOption.label;\n      });\n      this.setState({\n        categorySelectedOptions: []\n      });\n      this.updateCategoryName(selectedValue[0]);\n    });\n\n    _defineProperty(this, \"updateCategoryName\", value => {\n      this.setState({\n        categoryValue: value,\n        imageCategoryError: \"\",\n        categoryFlag: true\n      });\n\n      if (this.state.categoryValue === \"\") {\n        this.setState({\n          categorySelectedOptions: this.state.categoryOptions\n        });\n      }\n\n      const filterRegex = new RegExp(value, \"i\");\n      const resultOptions = this.state.categoryInitOptions.filter(option => option.label.match(filterRegex));\n      this.setState({\n        categoryOptions: resultOptions\n      });\n    });\n\n    _defineProperty(this, \"updateSupplierName\", value => {\n      this.setState({\n        supplierName: value,\n        supplierNameError: \"\" // nameFlag: true\n\n      });\n    });\n\n    _defineProperty(this, \"updateOilName\", value => {\n      this.setState({\n        oilName: value,\n        oilNameError: \"\" // nameFlag: true\n\n      });\n    });\n\n    _defineProperty(this, \"updateOilType\", value => {\n      this.setState({\n        oilType: value,\n        oilTypeError: \"\" // nameFlag: true\n\n      });\n    });\n\n    _defineProperty(this, \"updateFunctionalSub\", value => {\n      this.setState({\n        functionalSub: value,\n        functionalSubError: \"\" // nameFlag: true\n\n      });\n    });\n\n    _defineProperty(this, \"updateAromaticSub\", value => {\n      this.setState({\n        aromaticSub: value,\n        aromaticSubError: \"\" // nameFlag: true\n\n      });\n    });\n\n    _defineProperty(this, \"updateBlendWellWith\", value => {\n      this.setState({\n        blendsWellWith: value,\n        blendWellWithError: \"\" // nameFlag: true\n\n      });\n    });\n\n    _defineProperty(this, \"updateAromaticDescription\", value => {\n      this.setState({\n        aromaticDescription: value,\n        aromaticDescriptionError: \"\" // nameFlag: true\n\n      });\n    });\n\n    _defineProperty(this, \"updateAromaType\", value => {\n      this.setState({\n        aromaType: value,\n        aromaTypeError: \"\" // nameFlag: true\n\n      });\n    });\n\n    _defineProperty(this, \"updateClassifications\", value => {\n      this.setState({\n        classifications: value,\n        classificationsError: \"\" // nameFlag: true\n\n      });\n    });\n\n    _defineProperty(this, \"updateNote\", value => {\n      this.setState({\n        note: value,\n        noteError: \"\" // nameFlag: true\n\n      });\n    });\n\n    _defineProperty(this, \"handleAddImages\", () => {\n      console.log(this.state.file, this.state.imageName, this.state.categoryValue);\n\n      if (this.state.file === null && this.state.supplierName === \"\" && this.state.oilName === \"\" && this.state.oilType === \"\" && this.state.aromaType === \"\" && this.state.classifications === \"\" && this.state.note === \"\") {\n        this.setState({\n          fileError: \"Need Image\",\n          supplierNameError: \"Need Supplier Name\",\n          oilNameError: \"Need Oil Name\",\n          oilTypeError: \"Need Oil Type\",\n          aromaTypeError: \"Need Aroma Type\",\n          classificationsError: \"Need Classifications\",\n          noteError: \"Need Note\"\n        });\n        return;\n      } else if (this.state.file === null) {\n        this.setState({\n          fileError: \"Need Image\"\n        });\n        return;\n      } else if (this.state.supplierName === \"\") {\n        this.setState({\n          supplierNameError: \"Need Supplier Name\"\n        });\n        return;\n      } else if (this.state.oilName === \"\") {\n        this.setState({\n          oilNameError: \"Need Oil Name\"\n        });\n        return;\n      } else if (this.state.oilType === \"\") {\n        this.setState({\n          oilTypeError: \"Need Oil Type\"\n        });\n        return;\n      } else if (this.state.aromaType === \"\") {\n        this.setState({\n          aromaTypeError: \"Need Aroma Type\"\n        });\n        return;\n      } else if (this.state.classifications === \"\") {\n        this.setState({\n          classificationsError: \"Need Classifications\"\n        });\n        return;\n      } else if (this.state.note === \"\") {\n        this.setState({\n          noteError: \"Need Note\"\n        });\n        return;\n      }\n\n      for (let i in this.state.allImageData) {\n        let item = this.state.allImageData[i];\n\n        if (item.filename === this.state.oilName) {\n          this.setState({\n            oilNameError: \"Oil Name Exist\"\n          });\n          return;\n        }\n      }\n\n      this.setState({\n        loading: true\n      });\n      let formdata = new FormData();\n      formdata.append(\"file\", this.state.file);\n      formdata.append(\"supplierName\", this.state.supplierName);\n      formdata.append(\"oilName\", this.state.oilName);\n      formdata.append(\"oilType\", this.state.oilType);\n      formdata.append(\"functionalSub\", this.state.functionalSub);\n      formdata.append(\"aromaticSub\", this.state.aromaticSub);\n      formdata.append(\"blendsWellWith\", this.state.blendsWellWith);\n      formdata.append(\"aromaticDescription\", this.state.aromaticDescription);\n      formdata.append(\"aromaType\", this.state.aromaType);\n      formdata.append(\"classifications\", this.state.classifications);\n      formdata.append(\"note\", this.state.note);\n      axios.post(\"https://\" + host + \"/drop\", formdata, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        if (res.data === \"success\") {\n          this.setState({\n            activeModal: false\n          });\n          this.getList();\n          this.setState({\n            loading: false\n          });\n          console.log(res.data);\n        } else {\n          console.log(res.data);\n        }\n      });\n    });\n\n    _defineProperty(this, \"handleEditImages\", () => {\n      if (this.state.file === null && this.state.supplierName === \"\" && this.state.oilName === \"\" && this.state.oilType === \"\" && this.state.aromaType === \"\" && this.state.classifications === \"\" && this.state.note === \"\") {\n        this.setState({\n          fileError: \"Need Image\",\n          supplierNameError: \"Need Supplier Name\",\n          oilNameError: \"Need Oil Name\",\n          oilTypeError: \"Need Oil Type\",\n          aromaTypeError: \"Need Aroma Type\",\n          classificationsError: \"Need Classifications\",\n          noteError: \"Need Note\"\n        });\n        return;\n      } else if (this.state.file === null) {\n        this.setState({\n          fileError: \"Need Image\"\n        });\n        return;\n      } else if (this.state.supplierName === \"\") {\n        this.setState({\n          supplierNameError: \"Need Supplier Name\"\n        });\n        return;\n      } else if (this.state.oilName === \"\") {\n        this.setState({\n          oilNameError: \"Need Oil Name\"\n        });\n        return;\n      } else if (this.state.oilType === \"\") {\n        this.setState({\n          oilTypeError: \"Need Oil Type\"\n        });\n        return;\n      } else if (this.state.aromaType === \"\") {\n        this.setState({\n          aromaTypeError: \"Need Aroma Type\"\n        });\n        return;\n      } else if (this.state.classifications === \"\") {\n        this.setState({\n          classificationsError: \"Need Classifications\"\n        });\n        return;\n      } else if (this.state.note === \"\") {\n        this.setState({\n          noteError: \"Need Note\"\n        });\n        return;\n      }\n\n      for (let i in this.state.allImageData) {\n        let item = this.state.allImageData[i];\n\n        if (item.filename === this.state.imageName) {\n          if (this.state.nameFlag) {\n            this.setState({\n              imageNameError: \"Image Name Exist\"\n            });\n            return;\n          }\n        }\n      }\n\n      if (!this.state.fileFlag && !this.state.nameFlag && !this.state.categoryFlag) {\n        this.setState({\n          activeModal: false\n        });\n        return;\n      }\n\n      if (this.state.fileFlag) {\n        this.setState({\n          loading: true\n        });\n        let formdata = new FormData();\n        formdata.append(\"file\", this.state.file);\n        formdata.append(\"filename\", this.state.imageName);\n        formdata.append(\"category\", this.state.categoryValue);\n        formdata.append(\"id\", this.state.id);\n        axios.post(\"https://\" + host + \"/drop/editWithFile\", formdata, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        }).then(res => {\n          if (res.data === \"success\") {\n            this.getList();\n            this.setState({\n              activeModal: false,\n              loading: false\n            });\n            console.log(res.data);\n          } else {\n            console.log(res.data);\n          }\n        });\n      } else {\n        if (this.state.nameFlag) {\n          console.log(\"edit both\");\n          this.setState({\n            loading: true\n          });\n          let formdata = {\n            id: this.state.id,\n            filename: this.state.imageName,\n            category: this.state.categoryValue\n          };\n          axios.post(\"https://\" + host + \"/drop/editWithoutFile\", {\n            data: formdata\n          }).then(res => {\n            if (res.data === \"success\") {\n              this.getList();\n              this.setState({\n                activeModal: false,\n                loading: false\n              });\n              console.log(res.data);\n            } else {\n              console.log(res.data);\n            }\n          });\n        } else if (this.state.categoryFlag) {\n          console.log(\"edit Category\");\n          this.setState({\n            loading: true\n          });\n          let formdata = {\n            id: this.state.id,\n            category: this.state.categoryValue\n          };\n          axios.post(\"https://\" + host + \"/drop/editWithoutFile\", {\n            data: formdata\n          }).then(res => {\n            if (res.data === \"success\") {\n              this.getList();\n              this.setState({\n                activeModal: false,\n                loading: false\n              });\n              console.log(res.data);\n            } else {\n              console.log(res.data);\n            }\n          });\n        }\n      }\n    });\n\n    this.state = {\n      allImageData: [],\n      listItemCount: 0,\n      imageListItems: [],\n      selectedListItems: [],\n      activeModal: false,\n      modalAction: {\n        content: \"Add\",\n        onAction: this.handleAddImages\n      },\n      loading: false,\n      file: null,\n      validImageTypes: [\"image/gif\", \"image/jpeg\", \"image/png\"],\n      openFileDialog: false,\n      fileUpload: \"\",\n      uploadedFile: \"\",\n      fileError: \"\",\n      imageNameError: \"\",\n      imageCategoryError: \"\",\n      imageName: \"\",\n      categoryInitOptions: [],\n      categoryOptions: [],\n      categorySelectedOptions: [],\n      categoryTextField: \"\",\n      categoryValue: \"\",\n      id: \"\",\n      fileURL: \"\",\n      fileFlag: false,\n      nameFlag: false,\n      categoryFlag: false,\n      activeDeleteModal: false,\n      host: \"8b430148.ngrok.io\",\n      supplierName: \"\",\n      oilName: \"\",\n      oilType: \"\",\n      functionalSub: \"\",\n      aromaticSub: \"\",\n      blendsWellWith: \"\",\n      aromaticDescription: \"\",\n      aromaType: \"\",\n      classifications: \"\",\n      note: \"\",\n      supplierNameError: \"\",\n      oilNameError: \"\",\n      oilTypeError: \"\",\n      functionalSubError: \"\",\n      aromaticSubError: \"\",\n      blendWellWithError: \"\",\n      aromaticDescriptionError: \"\",\n      aromaTypeError: \"\",\n      classificationsError: \"\",\n      noteError: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    this.getList();\n  }\n\n  render() {\n    const categoryTextField = __jsx(Autocomplete.TextField, {\n      onChange: this.updateCategoryName,\n      label: \"Image Category\",\n      value: this.state.categoryValue,\n      placeholder: \"Enter category\",\n      error: this.state.imageCategoryError\n    });\n\n    const fileUpload = this.state.fileURL === \"\" ? !this.state.file && __jsx(DropZone.FileUpload, null) : __jsx(Stack, null, __jsx(Thumbnail, {\n      size: \"large\",\n      alt: \"edit\",\n      source: this.state.fileURL\n    }));\n\n    const uploadedFile = this.state.file && __jsx(Stack, null, __jsx(Thumbnail, {\n      size: \"large\",\n      alt: this.state.file.name,\n      source: this.state.validImageTypes.indexOf(this.state.file.type) > 0 ? window.URL.createObjectURL(this.state.file) : \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\n    }));\n\n    return __jsx(\"div\", null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n      title: \"Drop Images\",\n      actions: [{\n        content: \"Add Drop Image\",\n        onAction: this.addNewImage\n      }]\n    }, __jsx(Card.Section, null, __jsx(TextStyle, {\n      variation: \"subdued\"\n    }, this.state.listItemCount, \" Drop Images\")), __jsx(Card.Section, null, __jsx(ResourceList, {\n      resourceName: {\n        singular: \"image\",\n        plural: \"images\"\n      },\n      items: this.state.imageListItems,\n      selectedItems: this.state.selectedListItems,\n      onSelectionChange: this.setSelectedListItems,\n      renderItem: item => {\n        const {\n          id,\n          supplierName,\n          media,\n          oilName,\n          oilType,\n          functionalSub,\n          aromaticSub,\n          blendsWellWith,\n          aromaticDescription,\n          aromaType,\n          classifications,\n          note\n        } = item;\n        const shortcutActions = [{\n          content: __jsx(Icon, {\n            source: EditMajorMonotone,\n            color: \"red\"\n          }),\n          onAction: () => this.editImage(id, supplierName, media, oilName, oilType, functionalSub, aromaticSub, blendsWellWith, aromaticDescription, aromaType, classifications, note)\n        }, {\n          content: __jsx(Icon, {\n            source: DeleteMajorMonotone,\n            color: \"red\"\n          }),\n          onAction: () => this.deleteImage(id)\n        }];\n        return __jsx(ResourceList.Item, {\n          id: id,\n          media: media,\n          accessibilityLabel: `View details for ${name}`,\n          shortcutActions: shortcutActions,\n          persistActions: true\n        }, __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Supplier Name: \"), supplierName)), __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Oil Name: \"), oilName)), __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Oil Type: \"), oilType)), __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Functional Sub: \"), functionalSub)), __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Aromatic Sub: \"), aromaticSub)), __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Blends Well With: \"), blendsWellWith)), __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Aromatic Description: \"), aromaticDescription)), __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Aroma Type: \"), aromaType)), __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Classifications: \"), classifications)), __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, __jsx(\"span\", {\n          style: {\n            fontSize: 12\n          }\n        }, \"Note: \"), note)));\n      }\n    }))))), __jsx(Modal, {\n      open: this.state.activeModal,\n      onClose: this.closeModal,\n      title: \"Add Image\",\n      primaryAction: this.state.modalAction,\n      style: {\n        padding: \"20px\"\n      },\n      loading: this.state.loading\n    }, __jsx(Modal.Section, null, __jsx(Stack, {\n      alignment: \"center\"\n    }, __jsx(Stack.Item, null, __jsx(\"div\", {\n      style: {\n        width: 100,\n        height: 100\n      }\n    }, __jsx(DropZone, {\n      openFileDialog: this.state.openFileDialog,\n      onDrop: this.handleDropZoneDrop,\n      onFileDialogClose: this.toggleOpenFileDialog\n    }, fileUpload, uploadedFile), __jsx(InlineError, {\n      message: this.state.fileError\n    }))), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Supplier Name\",\n      value: this.state.supplierName,\n      onChange: this.updateSupplierName,\n      placeholder: \"Enter Supplier Name\",\n      error: this.state.supplierNameError\n    })), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Oil Name\",\n      value: this.state.oilName,\n      onChange: this.updateOilName,\n      placeholder: \"Enter Oil Name\",\n      error: this.state.oilNameError\n    })), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Oil Type\",\n      value: this.state.oilType,\n      onChange: this.updateOilType,\n      placeholder: \"Enter Oil Type\",\n      error: this.state.oilTypeError\n    })), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Functional Sub\",\n      value: this.state.functionalSub,\n      onChange: this.updateFunctionalSub,\n      placeholder: \"Enter Functional Sub\",\n      error: this.state.functionalSubError\n    })), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Aromatic Sub\",\n      value: this.state.aromaticSub,\n      onChange: this.updateAromaticSub,\n      placeholder: \"Enter Aromatic Sub\",\n      error: this.state.aromaticSubError\n    })), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Blends well with\",\n      value: this.state.blendsWellWith,\n      onChange: this.updateBlendWellWith,\n      placeholder: \"Enter Blend well with\",\n      error: this.state.blendWellWithError\n    })), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Aromatic Descriptions\",\n      value: this.state.aromaticDescription,\n      onChange: this.updateAromaticDescription,\n      placeholder: \"Enter Aromatic Description\",\n      error: this.state.aromaticDescriptionError\n    })), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Aroma Type\",\n      value: this.state.aromaType,\n      onChange: this.updateAromaType,\n      placeholder: \"Enter Aroma Type\",\n      error: this.state.aromaTypeError\n    })), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Classifications\",\n      value: this.state.classifications,\n      onChange: this.updateClassifications,\n      placeholder: \"Enter Classifications\",\n      error: this.state.classificationsError\n    })), __jsx(Stack.Item, null, __jsx(TextField, {\n      label: \"Note\",\n      value: this.state.note,\n      onChange: this.updateNote,\n      placeholder: \"Enter Note\",\n      error: this.state.noteError\n    }))))), __jsx(Modal, {\n      open: this.state.activeDeleteModal,\n      onClose: this.handleDeleteModalChange,\n      title: \"Do you really want to delete?\",\n      loading: this.state.loading,\n      primaryAction: {\n        content: \"Yes\",\n        onAction: this.confirmDelete\n      },\n      secondaryActions: {\n        content: \"No\",\n        onAction: () => {\n          this.setState({\n            activeDeleteModal: false\n          });\n        }\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["E:/Lenny/blendapp/pages/Drop.js"],"names":["React","axios","Layout","Card","ResourceList","TextStyle","Icon","Thumbnail","Modal","Stack","DropZone","InlineError","TextField","Autocomplete","DeleteMajorMonotone","EditMajorMonotone","App","Component","constructor","props","response","get","host","setState","allImageData","data","allCategorys","i","push","category","filterCategory","filter","elem","index","self","indexOf","categoryArray","item","value","label","categoryInitOptions","categoryOptions","imageListItemsData","id","_id","supplierName","oilName","oilType","functionalSub","aromaticSub","blendsWellWith","aromaticDescription","aromaType","classifications","note","media","filepath","filename","imageListItems","listItemCount","length","error","console","log","activeModal","file","fileURL","fileError","supplierNameError","oilNameError","oilTypeError","functionalSubError","aromaticSubError","blendWellWithError","aromaticDescriptionError","aromaTypeError","classificationsError","noteError","modalAction","content","onAction","handleAddImages","items","handleEditImages","source","fileFlag","nameFlag","categoryFlag","activeDeleteModal","loading","state","getList","_dropFiles","acceptedFiles","_rejectedFiles","openFileDialog","imageName","imageNameError","selected","selectedValue","map","selectedItem","matchedOption","find","option","match","categorySelectedOptions","updateCategoryName","categoryValue","imageCategoryError","filterRegex","RegExp","resultOptions","formdata","FormData","append","post","headers","then","res","selectedListItems","validImageTypes","fileUpload","uploadedFile","categoryTextField","componentDidMount","render","name","type","window","URL","createObjectURL","addNewImage","singular","plural","setSelectedListItems","shortcutActions","editImage","deleteImage","fontSize","closeModal","padding","width","height","handleDropZoneDrop","toggleOpenFileDialog","updateSupplierName","updateOilName","updateOilType","updateFunctionalSub","updateAromaticSub","updateBlendWellWith","updateAromaticDescription","updateAromaType","updateClassifications","updateNote","handleDeleteModalChange","confirmDelete"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Layout,\r\n  Card,\r\n  ResourceList,\r\n  TextStyle,\r\n  Icon,\r\n  Thumbnail,\r\n  Modal,\r\n  Stack,\r\n  DropZone,\r\n  InlineError,\r\n  TextField,\r\n  Autocomplete\r\n} from \"@shopify/polaris\";\r\nimport { DeleteMajorMonotone, EditMajorMonotone } from \"@shopify/polaris-icons\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allImageData: [],\r\n      listItemCount: 0,\r\n      imageListItems: [],\r\n      selectedListItems: [],\r\n      activeModal: false,\r\n      modalAction: {\r\n        content: \"Add\",\r\n        onAction: this.handleAddImages\r\n      },\r\n      loading: false,\r\n      file: null,\r\n      validImageTypes: [\"image/gif\", \"image/jpeg\", \"image/png\"],\r\n      openFileDialog: false,\r\n      fileUpload: \"\",\r\n      uploadedFile: \"\",\r\n      fileError: \"\",\r\n      imageNameError: \"\",\r\n      imageCategoryError: \"\",\r\n      imageName: \"\",\r\n      categoryInitOptions: [],\r\n      categoryOptions: [],\r\n      categorySelectedOptions: [],\r\n      categoryTextField: \"\",\r\n      categoryValue: \"\",\r\n      id: \"\",\r\n      fileURL: \"\",\r\n      fileFlag: false,\r\n      nameFlag: false,\r\n      categoryFlag: false,\r\n      activeDeleteModal: false,\r\n      host: \"8b430148.ngrok.io\",\r\n      supplierName: \"\",\r\n      oilName: \"\",\r\n      oilType: \"\",\r\n      functionalSub: \"\",\r\n      aromaticSub: \"\",\r\n      blendsWellWith: \"\",\r\n      aromaticDescription: \"\",\r\n      aromaType: \"\",\r\n      classifications: \"\",\r\n      note: \"\",\r\n      supplierNameError: \"\",\r\n      oilNameError: \"\",\r\n      oilTypeError: \"\",\r\n      functionalSubError: \"\",\r\n      aromaticSubError: \"\",\r\n      blendWellWithError: \"\",\r\n      aromaticDescriptionError: \"\",\r\n      aromaTypeError: \"\",\r\n      classificationsError: \"\",\r\n      noteError: \"\"\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.getList();\r\n  }\r\n\r\n  getList = async () => {\r\n    try {\r\n      let response = await axios.get(\"https://\" + host + \"/drop\");\r\n      this.setState({ allImageData: response.data });\r\n      let allImageData = response.data;\r\n      let allCategorys = [];\r\n      for (let i in allImageData) {\r\n        allCategorys.push(allImageData[i].category);\r\n      }\r\n      let filterCategory = allCategorys.filter(function(elem, index, self) {\r\n        return index === self.indexOf(elem);\r\n      });\r\n      let categoryArray = [];\r\n      for (let i in filterCategory) {\r\n        let item = filterCategory[i];\r\n        categoryArray.push({\r\n          value: item,\r\n          label: item\r\n        });\r\n      }\r\n      this.setState({\r\n        categoryInitOptions: categoryArray,\r\n        categoryOptions: categoryArray\r\n      });\r\n      \r\n      let imageListItemsData = [];\r\n      for (let i in allImageData) {\r\n        let item = allImageData[i];\r\n        imageListItemsData.push({\r\n          id: item._id,\r\n          supplierName: item.supplierName,\r\n          oilName: item.oilName,\r\n          oilType: item.oilType,\r\n          functionalSub: item.functionalSub,\r\n          aromaticSub: item.aromaticSub,\r\n          blendsWellWith: item.blendsWellWith,\r\n          aromaticDescription: item.aromaticDescription,\r\n          aromaType: item.aromaType,\r\n          classifications: item.classifications,\r\n          note: item.note,\r\n          media: <Thumbnail source={item.filepath} alt={item.filename} />\r\n        });\r\n      }\r\n      this.setState({\r\n        imageListItems: imageListItemsData,\r\n        listItemCount: imageListItemsData.length\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  addNewImage = () => {\r\n    this.setState({\r\n      activeModal: true,\r\n      file: null,\r\n      fileURL: \"\",\r\n      supplierName: \"\",\r\n      oilName: \"\",\r\n      oilType: \"\",\r\n      functionalSub: \"\",\r\n      aromaticSub: \"\",\r\n      blendsWellWith: \"\",\r\n      aromaticDescription: \"\",\r\n      aromaType: \"\",\r\n      classifications: \"\",\r\n      note: \"\",\r\n      fileError: \"\",\r\n      supplierNameError: \"\",\r\n      oilNameError: \"\",\r\n      oilTypeError: \"\",\r\n      functionalSubError: \"\",\r\n      aromaticSubError: \"\",\r\n      blendWellWithError: \"\",\r\n      aromaticDescriptionError: \"\",\r\n      aromaTypeError: \"\",\r\n      classificationsError: \"\",\r\n      noteError: \"\",\r\n      modalAction: {\r\n        content: \"Add\",\r\n        onAction: this.handleAddImages\r\n      }\r\n    });\r\n  };\r\n\r\n  setSelectedListItems = items => {\r\n    console.log(items);\r\n  };\r\n\r\n  editImage = (id, supplierName, media, oilName, oilType, functionalSub, aromaticSub, blendsWellWith, aromaticDescription, aromaType, classifications, note) => {\r\n    console.log(id, supplierName, media, oilName, oilType, functionalSub, aromaticSub, blendsWellWith, aromaticDescription, aromaType, classifications, note);\r\n    this.setState({\r\n      modalAction: {\r\n        content: \"Save\",\r\n        onAction: this.handleEditImages\r\n      },\r\n      fileError: \"\",\r\n      supplierNameError: \"\",\r\n      oilNameError: \"\",\r\n      oilTypeError: \"\",\r\n      functionalSubError: \"\",\r\n      aromaticSubError: \"\",\r\n      blendWellWithError: \"\",\r\n      aromaticDescriptionError: \"\",\r\n      aromaTypeError: \"\",\r\n      classificationsError: \"\",\r\n      noteError: \"\",\r\n      id: id,\r\n      file: null,\r\n      fileURL: media.props.source,\r\n      supplierName: supplierName,\r\n      oilName: oilName,\r\n      oilType: oilType,\r\n      functionalSub: functionalSub,\r\n      aromaticSub: aromaticSub,\r\n      blendsWellWith: blendsWellWith,\r\n      aromaticDescription: aromaticDescription,\r\n      aromaType: aromaType,\r\n      classifications: classifications,\r\n      note: note,\r\n      activeModal: true,\r\n      fileFlag: false,\r\n      nameFlag: false,\r\n      categoryFlag: false\r\n    });\r\n  };\r\n\r\n  deleteImage = id => {\r\n    this.setState({\r\n      id: id,\r\n      activeDeleteModal: true\r\n    });\r\n    console.log(id);\r\n  };\r\n\r\n  confirmDelete = async () => {\r\n    this.setState({ loading: true });\r\n    let response = await axios.get(\r\n      `https://${host}/drop/deleteImage?id=${this.state.id}`\r\n    );\r\n    console.log(response.data);\r\n    if (response.data === \"success\") {\r\n      this.getList();\r\n      this.setState({\r\n        loading: false,\r\n        activeDeleteModal: false\r\n      });\r\n    } else {\r\n      console.log(response.data);\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ activeModal: false });\r\n  };\r\n\r\n  handleDropZoneDrop = (_dropFiles, acceptedFiles, _rejectedFiles) => {\r\n    this.setState({\r\n      file: acceptedFiles[0],\r\n      fileError: \"\",\r\n      fileFlag: true,\r\n      fileURL: \"\"\r\n    });\r\n  };\r\n\r\n  toggleOpenFileDialog = () => {\r\n    this.setState({ openFileDialog: !this.state.openFileDialog });\r\n    console.log(\"toggle\");\r\n  };\r\n\r\n  updateImageName = value => {\r\n    this.setState({\r\n      imageName: value,\r\n      imageNameError: \"\",\r\n      nameFlag: true\r\n    });\r\n  };\r\n\r\n  updateCategoryOptions = selected => {\r\n    const selectedValue = selected.map(selectedItem => {\r\n      const matchedOption = this.state.categoryOptions.find(option => {\r\n        return option.value.match(selectedItem);\r\n      });\r\n      return matchedOption && matchedOption.label;\r\n    });\r\n    this.setState({ categorySelectedOptions: [] });\r\n    this.updateCategoryName(selectedValue[0]);\r\n  };\r\n\r\n  updateCategoryName = value => {\r\n    this.setState({\r\n      categoryValue: value,\r\n      imageCategoryError: \"\",\r\n      categoryFlag: true\r\n    });\r\n    if (this.state.categoryValue === \"\") {\r\n      this.setState({ categorySelectedOptions: this.state.categoryOptions });\r\n    }\r\n\r\n    const filterRegex = new RegExp(value, \"i\");\r\n    const resultOptions = this.state.categoryInitOptions.filter(option =>\r\n      option.label.match(filterRegex)\r\n    );\r\n    this.setState({ categoryOptions: resultOptions });\r\n  };\r\n\r\n  updateSupplierName = value => {\r\n    this.setState({\r\n      supplierName: value,\r\n      supplierNameError: \"\"\r\n      // nameFlag: true\r\n    });\r\n  };\r\n\r\n  updateOilName = value => {\r\n    this.setState({\r\n      oilName: value,\r\n      oilNameError: \"\"\r\n      // nameFlag: true\r\n    });\r\n  };\r\n  updateOilType = value => {\r\n    this.setState({\r\n      oilType: value,\r\n      oilTypeError: \"\"\r\n      // nameFlag: true\r\n    });\r\n  };\r\n  updateFunctionalSub = value => {\r\n    this.setState({\r\n      functionalSub: value,\r\n      functionalSubError: \"\"\r\n      // nameFlag: true\r\n    });\r\n  };\r\n  updateAromaticSub = value => {\r\n    this.setState({\r\n      aromaticSub: value,\r\n      aromaticSubError: \"\"\r\n      // nameFlag: true\r\n    });\r\n  };\r\n  updateBlendWellWith = value => {\r\n    this.setState({\r\n      blendsWellWith: value,\r\n      blendWellWithError: \"\"\r\n      // nameFlag: true\r\n    });\r\n  };\r\n  updateAromaticDescription = value => {\r\n    this.setState({\r\n      aromaticDescription: value,\r\n      aromaticDescriptionError: \"\"\r\n      // nameFlag: true\r\n    });\r\n  };\r\n  updateAromaType = value => {\r\n    this.setState({\r\n      aromaType: value,\r\n      aromaTypeError: \"\"\r\n      // nameFlag: true\r\n    });\r\n  };\r\n  updateClassifications = value => {\r\n    this.setState({\r\n      classifications: value,\r\n      classificationsError: \"\"\r\n      // nameFlag: true\r\n    });\r\n  };\r\n  updateNote = value => {\r\n    this.setState({\r\n      note: value,\r\n      noteError: \"\"\r\n      // nameFlag: true\r\n    });\r\n  };\r\n\r\n  handleAddImages = () => {\r\n    console.log(\r\n      this.state.file,\r\n      this.state.imageName,\r\n      this.state.categoryValue\r\n    );\r\n    if (\r\n      this.state.file === null &&\r\n      this.state.supplierName === \"\" &&\r\n      this.state.oilName === \"\" &&\r\n      this.state.oilType === \"\" &&\r\n      this.state.aromaType === \"\" &&\r\n      this.state.classifications === \"\" &&\r\n      this.state.note === \"\"\r\n    ) {\r\n      this.setState({\r\n        fileError: \"Need Image\",\r\n        supplierNameError: \"Need Supplier Name\",\r\n        oilNameError: \"Need Oil Name\",\r\n        oilTypeError: \"Need Oil Type\",\r\n        aromaTypeError: \"Need Aroma Type\",\r\n        classificationsError: \"Need Classifications\",\r\n        noteError: \"Need Note\"\r\n      });\r\n      return;\r\n    } else if (this.state.file === null) {\r\n      this.setState({\r\n        fileError: \"Need Image\"\r\n      });\r\n      return;\r\n    } else if (this.state.supplierName === \"\") {\r\n      this.setState({\r\n        supplierNameError: \"Need Supplier Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.oilName === \"\") {\r\n      this.setState({\r\n        oilNameError: \"Need Oil Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.oilType === \"\") {\r\n      this.setState({\r\n        oilTypeError: \"Need Oil Type\"\r\n      });\r\n      return;\r\n    } else if (this.state.aromaType === \"\") {\r\n      this.setState({\r\n        aromaTypeError: \"Need Aroma Type\"\r\n      });\r\n      return;\r\n    } else if (this.state.classifications === \"\") {\r\n      this.setState({\r\n        classificationsError: \"Need Classifications\"\r\n      });\r\n      return;\r\n    } else if (this.state.note === \"\") {\r\n      this.setState({\r\n        noteError: \"Need Note\"\r\n      });\r\n      return;\r\n    }\r\n    for (let i in this.state.allImageData) {\r\n      let item = this.state.allImageData[i];\r\n      if (item.filename === this.state.oilName) {\r\n        this.setState({\r\n          oilNameError: \"Oil Name Exist\"\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.setState({ loading: true });\r\n    let formdata = new FormData();\r\n    formdata.append(\"file\", this.state.file);\r\n    formdata.append(\"supplierName\", this.state.supplierName);\r\n    formdata.append(\"oilName\", this.state.oilName);\r\n    formdata.append(\"oilType\", this.state.oilType);\r\n    formdata.append(\"functionalSub\", this.state.functionalSub);\r\n    formdata.append(\"aromaticSub\", this.state.aromaticSub);\r\n    formdata.append(\"blendsWellWith\", this.state.blendsWellWith);\r\n    formdata.append(\"aromaticDescription\", this.state.aromaticDescription);\r\n    formdata.append(\"aromaType\", this.state.aromaType);\r\n    formdata.append(\"classifications\", this.state.classifications);\r\n    formdata.append(\"note\", this.state.note);\r\n\r\n    axios\r\n      .post(\"https://\" + host + \"/drop\", formdata, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.data === \"success\") {\r\n          this.setState({ activeModal: false });\r\n          this.getList();\r\n          this.setState({ loading: false });\r\n          console.log(res.data);\r\n        } else {\r\n          console.log(res.data);\r\n        }\r\n      });\r\n  };\r\n\r\n  handleEditImages = () => {\r\n    if (\r\n      this.state.file === null &&\r\n      this.state.supplierName === \"\" &&\r\n      this.state.oilName === \"\" &&\r\n      this.state.oilType === \"\" &&\r\n      this.state.aromaType === \"\" &&\r\n      this.state.classifications === \"\" &&\r\n      this.state.note === \"\"\r\n    ) {\r\n      this.setState({\r\n        fileError: \"Need Image\",\r\n        supplierNameError: \"Need Supplier Name\",\r\n        oilNameError: \"Need Oil Name\",\r\n        oilTypeError: \"Need Oil Type\",\r\n        aromaTypeError: \"Need Aroma Type\",\r\n        classificationsError: \"Need Classifications\",\r\n        noteError: \"Need Note\"\r\n      });\r\n      return;\r\n    } else if (this.state.file === null) {\r\n      this.setState({\r\n        fileError: \"Need Image\"\r\n      });\r\n      return;\r\n    } else if (this.state.supplierName === \"\") {\r\n      this.setState({\r\n        supplierNameError: \"Need Supplier Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.oilName === \"\") {\r\n      this.setState({\r\n        oilNameError: \"Need Oil Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.oilType === \"\") {\r\n      this.setState({\r\n        oilTypeError: \"Need Oil Type\"\r\n      });\r\n      return;\r\n    } else if (this.state.aromaType === \"\") {\r\n      this.setState({\r\n        aromaTypeError: \"Need Aroma Type\"\r\n      });\r\n      return;\r\n    } else if (this.state.classifications === \"\") {\r\n      this.setState({\r\n        classificationsError: \"Need Classifications\"\r\n      });\r\n      return;\r\n    } else if (this.state.note === \"\") {\r\n      this.setState({\r\n        noteError: \"Need Note\"\r\n      });\r\n      return;\r\n    }\r\n    for (let i in this.state.allImageData) {\r\n      let item = this.state.allImageData[i];\r\n      if (item.filename === this.state.imageName) {\r\n        if (this.state.nameFlag) {\r\n          this.setState({\r\n            imageNameError: \"Image Name Exist\"\r\n          });\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      !this.state.fileFlag &&\r\n      !this.state.nameFlag &&\r\n      !this.state.categoryFlag\r\n    ) {\r\n      this.setState({ activeModal: false });\r\n      return;\r\n    }\r\n\r\n    if (this.state.fileFlag) {\r\n      this.setState({ loading: true });\r\n      let formdata = new FormData();\r\n      formdata.append(\"file\", this.state.file);\r\n      formdata.append(\"filename\", this.state.imageName);\r\n      formdata.append(\"category\", this.state.categoryValue);\r\n      formdata.append(\"id\", this.state.id);\r\n      axios\r\n        .post(\"https://\" + host + \"/drop/editWithFile\", formdata, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\"\r\n          }\r\n        })\r\n        .then(res => {\r\n          if (res.data === \"success\") {\r\n            this.getList();\r\n            this.setState({\r\n              activeModal: false,\r\n              loading: false\r\n            });\r\n            console.log(res.data);\r\n          } else {\r\n            console.log(res.data);\r\n          }\r\n        });\r\n    } else {\r\n      if (this.state.nameFlag) {\r\n        console.log(\"edit both\");\r\n        this.setState({ loading: true });\r\n        let formdata = {\r\n          id: this.state.id,\r\n          filename: this.state.imageName,\r\n          category: this.state.categoryValue\r\n        };\r\n        axios\r\n          .post(\"https://\" + host + \"/drop/editWithoutFile\", {\r\n            data: formdata\r\n          })\r\n          .then(res => {\r\n            if (res.data === \"success\") {\r\n              this.getList();\r\n              this.setState({\r\n                activeModal: false,\r\n                loading: false\r\n              });\r\n              console.log(res.data);\r\n            } else {\r\n              console.log(res.data);\r\n            }\r\n          });\r\n      } else if (this.state.categoryFlag) {\r\n        console.log(\"edit Category\");\r\n        this.setState({ loading: true });\r\n        let formdata = {\r\n          id: this.state.id,\r\n          category: this.state.categoryValue\r\n        };\r\n        axios\r\n          .post(\"https://\" + host + \"/drop/editWithoutFile\", {\r\n            data: formdata\r\n          })\r\n          .then(res => {\r\n            if (res.data === \"success\") {\r\n              this.getList();\r\n              this.setState({\r\n                activeModal: false,\r\n                loading: false\r\n              });\r\n              console.log(res.data);\r\n            } else {\r\n              console.log(res.data);\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const categoryTextField = (\r\n      <Autocomplete.TextField\r\n        onChange={this.updateCategoryName}\r\n        label=\"Image Category\"\r\n        value={this.state.categoryValue}\r\n        placeholder=\"Enter category\"\r\n        error={this.state.imageCategoryError}\r\n      />\r\n    );\r\n    const fileUpload =\r\n      this.state.fileURL === \"\" ? (\r\n        !this.state.file && <DropZone.FileUpload />\r\n      ) : (\r\n        <Stack>\r\n          <Thumbnail size=\"large\" alt=\"edit\" source={this.state.fileURL} />\r\n        </Stack>\r\n      );\r\n\r\n    const uploadedFile = this.state.file && (\r\n      <Stack>\r\n        <Thumbnail\r\n          size=\"large\"\r\n          alt={this.state.file.name}\r\n          source={\r\n            this.state.validImageTypes.indexOf(this.state.file.type) > 0\r\n              ? window.URL.createObjectURL(this.state.file)\r\n              : \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\r\n          }\r\n        />\r\n      </Stack>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Layout.Section>\r\n            <Card\r\n              title=\"Drop Images\"\r\n              actions={[\r\n                {\r\n                  content: \"Add Drop Image\",\r\n                  onAction: this.addNewImage\r\n                }\r\n              ]}\r\n            >\r\n              <Card.Section>\r\n                <TextStyle variation=\"subdued\">\r\n                  {this.state.listItemCount} Drop Images\r\n                </TextStyle>\r\n              </Card.Section>\r\n              <Card.Section>\r\n                <ResourceList\r\n                  resourceName={{ singular: \"image\", plural: \"images\" }}\r\n                  items={this.state.imageListItems}\r\n                  selectedItems={this.state.selectedListItems}\r\n                  onSelectionChange={this.setSelectedListItems}\r\n                  renderItem={item => {\r\n                    const { id, supplierName, media, oilName, oilType, functionalSub, aromaticSub, blendsWellWith, aromaticDescription, aromaType, classifications, note } = item;\r\n                    const shortcutActions = [\r\n                      {\r\n                        content: (\r\n                          <Icon source={EditMajorMonotone} color=\"red\" />\r\n                        ),\r\n                        onAction: () =>\r\n                          this.editImage(id, supplierName, media, oilName, oilType, functionalSub, aromaticSub, blendsWellWith, aromaticDescription, aromaType, classifications, note)\r\n                      },\r\n                      {\r\n                        content: (\r\n                          <Icon source={DeleteMajorMonotone} color=\"red\" />\r\n                        ),\r\n                        onAction: () => this.deleteImage(id)\r\n                      }\r\n                    ];\r\n\r\n                    return (\r\n                      <ResourceList.Item\r\n                        id={id}\r\n                        media={media}\r\n                        accessibilityLabel={`View details for ${name}`}\r\n                        shortcutActions={shortcutActions}\r\n                        persistActions\r\n                      >\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Supplier Name: </span>\r\n                            {supplierName}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Oil Name: </span>\r\n                            {oilName}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Oil Type: </span>\r\n                            {oilType}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Functional Sub: </span>\r\n                            {functionalSub}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Aromatic Sub: </span>\r\n                            {aromaticSub}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Blends Well With: </span>\r\n                            {blendsWellWith}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Aromatic Description: </span>\r\n                            {aromaticDescription}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Aroma Type: </span>\r\n                            {aromaType}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Classifications: </span>\r\n                            {classifications}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Note: </span>\r\n                            {note}\r\n                          </TextStyle>\r\n                        </h3>\r\n                      </ResourceList.Item>\r\n                    );\r\n                  }}\r\n                />\r\n              </Card.Section>\r\n            </Card>\r\n          </Layout.Section>\r\n        </Layout>\r\n        <Modal\r\n          open={this.state.activeModal}\r\n          onClose={this.closeModal}\r\n          title=\"Add Image\"\r\n          primaryAction={this.state.modalAction}\r\n          style={{ padding: \"20px\" }}\r\n          loading={this.state.loading}\r\n        >\r\n          <Modal.Section>\r\n            <Stack alignment=\"center\">\r\n              <Stack.Item>\r\n                <div style={{ width: 100, height: 100 }}>\r\n                  <DropZone\r\n                    openFileDialog={this.state.openFileDialog}\r\n                    onDrop={this.handleDropZoneDrop}\r\n                    onFileDialogClose={this.toggleOpenFileDialog}\r\n                  >\r\n                    {fileUpload}\r\n                    {uploadedFile}\r\n                  </DropZone>\r\n                  <InlineError message={this.state.fileError} />\r\n                </div>\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Supplier Name\"\r\n                  value={this.state.supplierName}\r\n                  onChange={this.updateSupplierName}\r\n                  placeholder=\"Enter Supplier Name\"\r\n                  error={this.state.supplierNameError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Oil Name\"\r\n                  value={this.state.oilName}\r\n                  onChange={this.updateOilName}\r\n                  placeholder=\"Enter Oil Name\"\r\n                  error={this.state.oilNameError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Oil Type\"\r\n                  value={this.state.oilType}\r\n                  onChange={this.updateOilType}\r\n                  placeholder=\"Enter Oil Type\"\r\n                  error={this.state.oilTypeError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Functional Sub\"\r\n                  value={this.state.functionalSub}\r\n                  onChange={this.updateFunctionalSub}\r\n                  placeholder=\"Enter Functional Sub\"\r\n                  error={this.state.functionalSubError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Aromatic Sub\"\r\n                  value={this.state.aromaticSub}\r\n                  onChange={this.updateAromaticSub}\r\n                  placeholder=\"Enter Aromatic Sub\"\r\n                  error={this.state.aromaticSubError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Blends well with\"\r\n                  value={this.state.blendsWellWith}\r\n                  onChange={this.updateBlendWellWith}\r\n                  placeholder=\"Enter Blend well with\"\r\n                  error={this.state.blendWellWithError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Aromatic Descriptions\"\r\n                  value={this.state.aromaticDescription}\r\n                  onChange={this.updateAromaticDescription}\r\n                  placeholder=\"Enter Aromatic Description\"\r\n                  error={this.state.aromaticDescriptionError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Aroma Type\"\r\n                  value={this.state.aromaType}\r\n                  onChange={this.updateAromaType}\r\n                  placeholder=\"Enter Aroma Type\"\r\n                  error={this.state.aromaTypeError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Classifications\"\r\n                  value={this.state.classifications}\r\n                  onChange={this.updateClassifications}\r\n                  placeholder=\"Enter Classifications\"\r\n                  error={this.state.classificationsError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Note\"\r\n                  value={this.state.note}\r\n                  onChange={this.updateNote}\r\n                  placeholder=\"Enter Note\"\r\n                  error={this.state.noteError}\r\n                />\r\n              </Stack.Item>\r\n              {/* <Stack.Item>\r\n                <TextField\r\n                  label=\"Image Name\"\r\n                  value={this.state.imageName}\r\n                  onChange={this.updateImageName}\r\n                  placeholder=\"Enter image name\"\r\n                  error={this.state.imageNameError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <Autocomplete\r\n                  options={this.state.categoryOptions}\r\n                  selected={this.state.categorySelectedOptions}\r\n                  onSelect={this.updateCategoryOptions}\r\n                  textField={categoryTextField}\r\n                />\r\n              </Stack.Item> */}\r\n            </Stack>\r\n          </Modal.Section>\r\n        </Modal>\r\n        <Modal\r\n          open={this.state.activeDeleteModal}\r\n          onClose={this.handleDeleteModalChange}\r\n          title=\"Do you really want to delete?\"\r\n          loading={this.state.loading}\r\n          primaryAction={{\r\n            content: \"Yes\",\r\n            onAction: this.confirmDelete\r\n          }}\r\n          secondaryActions={{\r\n            content: \"No\",\r\n            onAction: () => {\r\n              this.setState({ activeDeleteModal: false });\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}