{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from \"react\";\nimport axios from \"axios\";\nimport { Modal, Autocomplete, InlineError, Stack, DropZone, TextField, Layout, Card, TextStyle, ResourceList, Thumbnail } from \"@shopify/polaris\";\nexport default function Background() {\n  //Get Image Data\n  var backgroundData = {};\n  var backgroundCategory = [];\n\n  var _useState = useState(function _callee() {\n    var imageItemsData, i, item;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3000/background\").then(function (res) {\n              backgroundData = res.data;\n              var allCategorys = [];\n\n              for (var i in backgroundData) {\n                allCategorys.push(backgroundData[i].category);\n              }\n\n              var filterCategory = allCategorys.filter(function (elem, index, self) {\n                return index === self.indexOf(elem);\n              });\n\n              for (var _i in filterCategory) {\n                backgroundCategory.push({\n                  value: filterCategory[_i],\n                  label: filterCategory[_i]\n                });\n              }\n            }));\n\n          case 2:\n            imageItemsData = [];\n\n            for (i in backgroundData) {\n              item = backgroundData[i];\n              imageItemsData.push({\n                id: item._id,\n                name: item.filename,\n                category: item.category,\n                media: __jsx(Thumbnail, {\n                  source: item.filepath,\n                  alt: item.filename\n                })\n              });\n            }\n\n            console.log(imageItemsData);\n            return _context.abrupt(\"return\", imageItemsData);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []),\n      imageItems = _useState[0],\n      setimageItems = _useState[1]; // Modal\n\n\n  var _useState2 = useState(false),\n      activeModal = _useState2[0],\n      setActiveModal = _useState2[1];\n\n  var handleChange = useCallback(function () {\n    return setActiveModal(!activeModal);\n  }, [activeModal]); //Modal Upload File\n\n  var _useState3 = useState(false),\n      openFileDialog = _useState3[0],\n      setOpenFileDialog = _useState3[1];\n\n  var _useState4 = useState(),\n      file = _useState4[0],\n      setFile = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      imageError = _useState5[0],\n      setImageError = _useState5[1];\n\n  function handleImageError(txt) {\n    setImageError(txt);\n  }\n\n  var toggleOpenFileDialog = useCallback(function () {\n    return setOpenFileDialog(function (openFileDialog) {\n      return !openFileDialog;\n    });\n  }, []);\n  var validImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\n  var handleDropZoneDrop = useCallback(function (_dropFiles, acceptedFiles, _rejectedFiles) {\n    setFile(function (file) {\n      return acceptedFiles[0];\n    });\n    setImageError(\"\");\n  }, []);\n\n  var fileUpload = !file && __jsx(DropZone.FileUpload, null);\n\n  var uploadedFile = file && __jsx(Stack, null, __jsx(Thumbnail, {\n    size: \"large\",\n    alt: file.name,\n    source: validImageTypes.indexOf(file.type) > 0 ? window.URL.createObjectURL(file) : \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\n  })); //Modal Image Name\n\n\n  var _useState6 = useState(\"\"),\n      imageName = _useState6[0],\n      setimageName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      imageNameError = _useState7[0],\n      setImageNameError = _useState7[1];\n\n  var handleImageName = useCallback(function (newValue) {\n    setimageName(newValue);\n    handleImageNameError(\"\");\n  }, []);\n\n  function handleImageNameError(txt) {\n    setImageNameError(txt);\n  } //Modal Category\n\n\n  var categoryOptions = backgroundCategory;\n\n  var _useState8 = useState([]),\n      selectedOptions = _useState8[0],\n      setSelectedOptions = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      categoryValue = _useState9[0],\n      setCategoryValue = _useState9[1];\n\n  var _useState10 = useState(categoryOptions),\n      options = _useState10[0],\n      setOptions = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      imageCategoryError = _useState11[0],\n      setCategoryError = _useState11[1];\n\n  function handleCategoryError(txt) {\n    setCategoryError(txt);\n  }\n\n  var updateText = useCallback(function (value) {\n    setCategoryValue(value);\n\n    if (value === \"\") {\n      setOptions(categoryOptions);\n      return;\n    }\n\n    var filterRegex = new RegExp(value, \"i\");\n    var resultOptions = categoryOptions.filter(function (option) {\n      return option.label.match(filterRegex);\n    });\n    setOptions(resultOptions);\n    setCategoryError(\"\");\n  }, [categoryOptions]);\n  var updateSelection = useCallback(function (selected) {\n    updateText(selected[0]);\n    setSelectedOptions(selected);\n    setCategoryValue(selected[0]);\n  }, []);\n\n  var textField = __jsx(Autocomplete.TextField, {\n    onChange: updateText,\n    label: \"Image Category\",\n    value: categoryValue,\n    placeholder: \"Enter category\",\n    error: imageCategoryError\n  }); //Submit Image Data\n\n\n  var handleImages = function handleImages() {\n    if (file === undefined && imageName === \"\" && categoryValue === \"\") {\n      handleImageError(\"Need Image\");\n      handleImageNameError(\"Need Image Name\");\n      handleCategoryError(\"Need Category\");\n      return;\n    } else if (file === undefined && imageName === \"\") {\n      handleImageError(\"Need Image\");\n      handleImageNameError(\"Need Image Name\");\n    } else if (file === undefined && categoryValue === \"\") {\n      handleImageError(\"Need Image\");\n      handleCategoryError(\"Need Category\");\n    } else if (imageName === \"\" && categoryValue === \"\") {\n      handleImageNameError(\"Need Image Name\");\n      handleCategoryError(\"Need Category\");\n    }\n\n    if (file === undefined) {\n      handleImageError(\"Need Image\");\n      return;\n    }\n\n    if (imageName === \"\") {\n      handleImageNameError(\"Need Image Name\");\n      return;\n    }\n\n    if (categoryValue === \"\") {\n      handleCategoryError(\"Need Category\");\n      return;\n    }\n\n    var formdata = new FormData();\n    formdata.append(\"file\", file);\n    formdata.append(\"filename\", imageName);\n    formdata.append(\"category\", categoryValue);\n    axios.post(\"http://localhost:3000/background\", formdata, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(function (res) {\n      if (res.data === \"success\") {\n        setActiveModal(false);\n      } else {\n        console.log(res.data);\n      }\n    });\n  };\n\n  return __jsx(\"div\", null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"Background Images\",\n    actions: [{\n      content: \"Add Background Image\",\n      onAction: handleChange\n    }]\n  }, __jsx(Card.Section, null, __jsx(TextStyle, {\n    variation: \"subdued\"\n  }, \"455 units available\")), __jsx(Card.Section, {\n    title: \"Items\"\n  }, __jsx(ResourceList, {\n    resourceName: {\n      singular: \"image\",\n      plural: \"images\"\n    },\n    items: imageItems,\n    renderItem: function renderItem(item) {\n      var id = item.id,\n          name = item.name,\n          media = item.media,\n          category = item.category;\n      return __jsx(ResourceList.Item, {\n        id: id,\n        media: media,\n        accessibilityLabel: \"View details for \".concat(name)\n      }, __jsx(\"h3\", null, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, __jsx(\"span\", {\n        style: {\n          fontSize: 12\n        }\n      }, \"Name: \"), name)), __jsx(\"h3\", null, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, __jsx(\"span\", {\n        style: {\n          fontSize: 12\n        }\n      }, \"Category: \"), category)));\n    }\n  }))))), __jsx(Modal, {\n    open: activeModal,\n    onClose: handleChange,\n    title: \"Add Image\",\n    primaryAction: {\n      content: \"Add\",\n      onAction: handleImages\n    },\n    style: {\n      padding: \"20px\"\n    }\n  }, __jsx(Modal.Section, null, __jsx(Stack, {\n    alignment: \"center\"\n  }, __jsx(Stack.Item, null, __jsx(\"div\", {\n    style: {\n      width: 100,\n      height: 100\n    }\n  }, __jsx(DropZone, {\n    openFileDialog: openFileDialog,\n    onDrop: handleDropZoneDrop,\n    onFileDialogClose: toggleOpenFileDialog\n  }, fileUpload, uploadedFile), __jsx(InlineError, {\n    message: imageError\n  }))), __jsx(Stack.Item, null, __jsx(TextField, {\n    label: \"Image Name\",\n    value: imageName,\n    onChange: handleImageName,\n    placeholder: \"Enter image name\",\n    error: imageNameError\n  })), __jsx(Stack.Item, null, __jsx(Autocomplete, {\n    options: options,\n    selected: selectedOptions,\n    onSelect: updateSelection,\n    textField: textField\n  }))))));\n}","map":{"version":3,"sources":["E:/Lenny/blendapp/pages/index.js"],"names":["React","useCallback","useState","axios","Modal","Autocomplete","InlineError","Stack","DropZone","TextField","Layout","Card","TextStyle","ResourceList","Thumbnail","Background","backgroundData","backgroundCategory","get","then","res","data","allCategorys","i","push","category","filterCategory","filter","elem","index","self","indexOf","value","label","imageItemsData","item","id","_id","name","filename","media","filepath","console","log","imageItems","setimageItems","activeModal","setActiveModal","handleChange","openFileDialog","setOpenFileDialog","file","setFile","imageError","setImageError","handleImageError","txt","toggleOpenFileDialog","validImageTypes","handleDropZoneDrop","_dropFiles","acceptedFiles","_rejectedFiles","fileUpload","uploadedFile","type","window","URL","createObjectURL","imageName","setimageName","imageNameError","setImageNameError","handleImageName","newValue","handleImageNameError","categoryOptions","selectedOptions","setSelectedOptions","categoryValue","setCategoryValue","options","setOptions","imageCategoryError","setCategoryError","handleCategoryError","updateText","filterRegex","RegExp","resultOptions","option","match","updateSelection","selected","textField","handleImages","undefined","formdata","FormData","append","post","headers","content","onAction","singular","plural","fontSize","padding","width","height"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Modal,\r\n  Autocomplete,\r\n  InlineError,\r\n  Stack,\r\n  DropZone,\r\n  TextField,\r\n  Layout,\r\n  Card,\r\n  TextStyle,\r\n  ResourceList,\r\n  Thumbnail\r\n} from \"@shopify/polaris\";\r\n\r\nexport default function Background() {\r\n  //Get Image Data\r\n  let backgroundData = {};\r\n  let backgroundCategory = [];\r\n  const [imageItems, setimageItems] = useState(async () => {\r\n    await axios.get(\"http://localhost:3000/background\").then(res => {\r\n      backgroundData = res.data;\r\n      let allCategorys = [];\r\n      for (let i in backgroundData) {\r\n        allCategorys.push(backgroundData[i].category);\r\n      }\r\n      let filterCategory = allCategorys.filter(function(elem, index, self) {\r\n        return index === self.indexOf(elem);\r\n      });\r\n      for (let i in filterCategory) {\r\n        backgroundCategory.push({\r\n          value: filterCategory[i],\r\n          label: filterCategory[i]\r\n        });\r\n      }\r\n    });\r\n    let imageItemsData=[];\r\n    for (let i in backgroundData) {\r\n      let item = backgroundData[i];\r\n      imageItemsData.push({\r\n        id: item._id,\r\n        name: item.filename,\r\n        category: item.category,\r\n        media: <Thumbnail source={item.filepath} alt={item.filename} />\r\n      });\r\n    }\r\n    console.log(imageItemsData)\r\n    return imageItemsData;\r\n  }, []);\r\n\r\n  // Modal\r\n  const [activeModal, setActiveModal] = useState(false);\r\n  const handleChange = useCallback(() => setActiveModal(!activeModal), [\r\n    activeModal\r\n  ]);\r\n\r\n  //Modal Upload File\r\n  const [openFileDialog, setOpenFileDialog] = useState(false);\r\n  const [file, setFile] = useState();\r\n  const [imageError, setImageError] = useState(\"\");\r\n  function handleImageError(txt) {\r\n    setImageError(txt);\r\n  }\r\n  const toggleOpenFileDialog = useCallback(\r\n    () => setOpenFileDialog(openFileDialog => !openFileDialog),\r\n    []\r\n  );\r\n  const validImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\r\n  const handleDropZoneDrop = useCallback(\r\n    (_dropFiles, acceptedFiles, _rejectedFiles) => {\r\n      setFile(file => acceptedFiles[0]);\r\n      setImageError(\"\");\r\n    },\r\n    []\r\n  );\r\n  const fileUpload = !file && <DropZone.FileUpload />;\r\n  const uploadedFile = file && (\r\n    <Stack>\r\n      <Thumbnail\r\n        size=\"large\"\r\n        alt={file.name}\r\n        source={\r\n          validImageTypes.indexOf(file.type) > 0\r\n            ? window.URL.createObjectURL(file)\r\n            : \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\r\n        }\r\n      />\r\n    </Stack>\r\n  );\r\n\r\n  //Modal Image Name\r\n  const [imageName, setimageName] = useState(\"\");\r\n  const [imageNameError, setImageNameError] = useState(\"\");\r\n  const handleImageName = useCallback(newValue => {\r\n    setimageName(newValue);\r\n    handleImageNameError(\"\");\r\n  }, []);\r\n  function handleImageNameError(txt) {\r\n    setImageNameError(txt);\r\n  }\r\n\r\n  //Modal Category\r\n  let categoryOptions = backgroundCategory;\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [categoryValue, setCategoryValue] = useState(\"\");\r\n  const [options, setOptions] = useState(categoryOptions);\r\n  const [imageCategoryError, setCategoryError] = useState(\"\");\r\n\r\n  function handleCategoryError(txt) {\r\n    setCategoryError(txt);\r\n  }\r\n  const updateText = useCallback(\r\n    value => {\r\n      setCategoryValue(value);\r\n      if (value === \"\") {\r\n        setOptions(categoryOptions);\r\n        return;\r\n      }\r\n      const filterRegex = new RegExp(value, \"i\");\r\n      const resultOptions = categoryOptions.filter(option =>\r\n        option.label.match(filterRegex)\r\n      );\r\n      setOptions(resultOptions);\r\n      setCategoryError(\"\");\r\n    },\r\n    [categoryOptions]\r\n  );\r\n\r\n  const updateSelection = useCallback(selected => {\r\n    updateText(selected[0]);\r\n    setSelectedOptions(selected);\r\n    setCategoryValue(selected[0]);\r\n  }, []);\r\n\r\n  const textField = (\r\n    <Autocomplete.TextField\r\n      onChange={updateText}\r\n      label=\"Image Category\"\r\n      value={categoryValue}\r\n      placeholder=\"Enter category\"\r\n      error={imageCategoryError}\r\n    />\r\n  );\r\n\r\n  //Submit Image Data\r\n  const handleImages = () => {\r\n    if (file === undefined && imageName === \"\" && categoryValue === \"\") {\r\n      handleImageError(\"Need Image\");\r\n      handleImageNameError(\"Need Image Name\");\r\n      handleCategoryError(\"Need Category\");\r\n      return;\r\n    } else if (file === undefined && imageName === \"\") {\r\n      handleImageError(\"Need Image\");\r\n      handleImageNameError(\"Need Image Name\");\r\n    } else if (file === undefined && categoryValue === \"\") {\r\n      handleImageError(\"Need Image\");\r\n      handleCategoryError(\"Need Category\");\r\n    } else if (imageName === \"\" && categoryValue === \"\") {\r\n      handleImageNameError(\"Need Image Name\");\r\n      handleCategoryError(\"Need Category\");\r\n    }\r\n    if (file === undefined) {\r\n      handleImageError(\"Need Image\");\r\n      return;\r\n    }\r\n    if (imageName === \"\") {\r\n      handleImageNameError(\"Need Image Name\");\r\n      return;\r\n    }\r\n    if (categoryValue === \"\") {\r\n      handleCategoryError(\"Need Category\");\r\n      return;\r\n    }\r\n    let formdata = new FormData();\r\n    formdata.append(\"file\", file);\r\n    formdata.append(\"filename\", imageName);\r\n    formdata.append(\"category\", categoryValue);\r\n    axios\r\n      .post(\"http://localhost:3000/background\", formdata, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.data === \"success\") {\r\n          setActiveModal(false);\r\n        } else {\r\n          console.log(res.data);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Layout>\r\n        <Layout.Section>\r\n          <Card\r\n            title=\"Background Images\"\r\n            actions={[\r\n              {\r\n                content: \"Add Background Image\",\r\n                onAction: handleChange\r\n              }\r\n            ]}\r\n          >\r\n            <Card.Section>\r\n              <TextStyle variation=\"subdued\">455 units available</TextStyle>\r\n            </Card.Section>\r\n            <Card.Section title=\"Items\">\r\n              <ResourceList\r\n                resourceName={{ singular: \"image\", plural: \"images\" }}\r\n                items={imageItems}\r\n                renderItem={item => {\r\n                  const { id, name, media, category } = item;\r\n\r\n                  return (\r\n                    <ResourceList.Item\r\n                      id={id}\r\n                      media={media}\r\n                      accessibilityLabel={`View details for ${name}`}\r\n                    >\r\n                      <h3>\r\n                        <TextStyle variation=\"strong\">\r\n                          <span style={{ fontSize: 12 }}>Name: </span>\r\n                          {name}\r\n                        </TextStyle>\r\n                      </h3>\r\n                      <h3>\r\n                        <TextStyle variation=\"strong\">\r\n                          <span style={{ fontSize: 12 }}>Category: </span>\r\n                          {category}\r\n                        </TextStyle>\r\n                      </h3>\r\n                    </ResourceList.Item>\r\n                  );\r\n                }}\r\n              />\r\n            </Card.Section>\r\n          </Card>\r\n        </Layout.Section>\r\n      </Layout>\r\n      <Modal\r\n        open={activeModal}\r\n        onClose={handleChange}\r\n        title=\"Add Image\"\r\n        primaryAction={{\r\n          content: \"Add\",\r\n          onAction: handleImages\r\n        }}\r\n        style={{ padding: \"20px\" }}\r\n      >\r\n        <Modal.Section>\r\n          <Stack alignment=\"center\">\r\n            <Stack.Item>\r\n              <div style={{ width: 100, height: 100 }}>\r\n                <DropZone\r\n                  openFileDialog={openFileDialog}\r\n                  onDrop={handleDropZoneDrop}\r\n                  onFileDialogClose={toggleOpenFileDialog}\r\n                >\r\n                  {fileUpload}\r\n                  {uploadedFile}\r\n                </DropZone>\r\n                <InlineError message={imageError} />\r\n              </div>\r\n            </Stack.Item>\r\n            <Stack.Item>\r\n              <TextField\r\n                label=\"Image Name\"\r\n                value={imageName}\r\n                onChange={handleImageName}\r\n                placeholder=\"Enter image name\"\r\n                error={imageNameError}\r\n              />\r\n            </Stack.Item>\r\n            <Stack.Item>\r\n              <Autocomplete\r\n                options={options}\r\n                selected={selectedOptions}\r\n                onSelect={updateSelection}\r\n                textField={textField}\r\n              />\r\n            </Stack.Item>\r\n          </Stack>\r\n        </Modal.Section>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}