{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Layout, Card, ResourceList, TextStyle, Icon, Thumbnail, Modal, Stack, DropZone, InlineError, TextField, Autocomplete } from \"@shopify/polaris\";\nimport { DeleteMajorMonotone, EditMajorMonotone } from \"@shopify/polaris-icons\";\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getList\", function _callee() {\n      var response, allImageData, allCategorys, i, filterCategory, categoryArray, _i, item, imageListItemsData, _i2, _item;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(\"http://localhost:3000/background\"));\n\n            case 3:\n              response = _context.sent;\n\n              _this.setState({\n                allImageData: response.data\n              });\n\n              allImageData = response.data;\n              allCategorys = [];\n\n              for (i in allImageData) {\n                allCategorys.push(allImageData[i].category);\n              }\n\n              filterCategory = allCategorys.filter(function (elem, index, self) {\n                return index === self.indexOf(elem);\n              });\n              categoryArray = [];\n\n              for (_i in filterCategory) {\n                item = filterCategory[_i];\n                categoryArray.push({\n                  value: item,\n                  label: item\n                });\n              }\n\n              _this.setState({\n                categoryInitOptions: categoryArray,\n                categoryOptions: categoryArray\n              });\n\n              imageListItemsData = [];\n\n              for (_i2 in allImageData) {\n                _item = allImageData[_i2];\n                imageListItemsData.push({\n                  id: _item._id,\n                  name: _item.filename,\n                  category: _item.category,\n                  media: __jsx(Thumbnail, {\n                    source: _item.filepath,\n                    alt: _item.filename\n                  })\n                });\n              }\n\n              _this.setState({\n                imageListItems: imageListItemsData\n              });\n\n              _this.setState({\n                listItemCount: imageListItemsData.length\n              });\n\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 18]], Promise);\n    });\n\n    _this.addNewImage = _this.addNewImage.bind(_assertThisInitialized(_this));\n    _this.setSelectedListItems = _this.setSelectedListItems.bind(_assertThisInitialized(_this));\n    _this.editImage = _this.editImage.bind(_assertThisInitialized(_this));\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_this));\n    _this.deleteImage = _this.deleteImage.bind(_assertThisInitialized(_this));\n    _this.handleDropZoneDrop = _this.handleDropZoneDrop.bind(_assertThisInitialized(_this));\n    _this.toggleOpenFileDialog = _this.toggleOpenFileDialog.bind(_assertThisInitialized(_this));\n    _this.updateImageName = _this.updateImageName.bind(_assertThisInitialized(_this));\n    _this.updateCategoryOptions = _this.updateCategoryOptions.bind(_assertThisInitialized(_this));\n    _this.updateCategoryName = _this.updateCategoryName.bind(_assertThisInitialized(_this));\n    _this.handleAddImages = _this.handleAddImages.bind(_assertThisInitialized(_this));\n    _this.handleEditImages = _this.handleEditImages.bind(_assertThisInitialized(_this));\n    _this.state = {\n      allImageData: [],\n      listItemCount: 0,\n      imageListItems: [],\n      selectedListItems: [],\n      activeModal: false,\n      modalAction: {},\n      loading: false,\n      file: null,\n      validImageTypes: [\"image/gif\", \"image/jpeg\", \"image/png\"],\n      openFileDialog: false,\n      fileUpload: \"\",\n      uploadedFile: \"\",\n      fileError: \"\",\n      imageNameError: \"\",\n      imageCategoryError: \"\",\n      imageName: \"\",\n      categoryInitOptions: [],\n      categoryOptions: [],\n      categorySelectedOptions: [],\n      categoryTextField: \"\",\n      categoryValue: \"\",\n      id: \"\",\n      fileURL: \"\",\n      fileFlag: false,\n      nameFlag: false,\n      categoryFlag: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.getList();\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"addNewImage\",\n    value: function addNewImage() {\n      this.setState({\n        activeModal: true,\n        file: null,\n        fileURL: \"\",\n        imageName: \"\",\n        categoryValue: \"\",\n        fileError: '',\n        imageNameError: '',\n        imageCategoryError: '',\n        modalAction: {\n          content: \"Add\",\n          onAction: this.handleAddImages\n        }\n      });\n    }\n  }, {\n    key: \"setSelectedListItems\",\n    value: function setSelectedListItems(items) {\n      console.log(items);\n    }\n  }, {\n    key: \"editImage\",\n    value: function editImage(id, name, media, category) {\n      console.log(id, name, media, category);\n      this.setState({\n        modalAction: {\n          content: \"Save\",\n          onAction: this.handleEditImages\n        },\n        fileError: '',\n        imageNameError: '',\n        imageCategoryError: '',\n        id: id,\n        imageName: name,\n        file: null,\n        fileURL: media.props.source,\n        categoryValue: category,\n        activeModal: true,\n        fileFlag: false,\n        nameFlag: false,\n        categoryFlag: false\n      });\n    }\n  }, {\n    key: \"deleteImage\",\n    value: function deleteImage(id) {\n      console.log(id);\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState({\n        activeModal: false\n      });\n    }\n  }, {\n    key: \"handleDropZoneDrop\",\n    value: function handleDropZoneDrop(_dropFiles, acceptedFiles, _rejectedFiles) {\n      this.setState({\n        file: acceptedFiles[0],\n        fileError: \"\",\n        fileFlag: true,\n        fileURL: ''\n      });\n    }\n  }, {\n    key: \"toggleOpenFileDialog\",\n    value: function toggleOpenFileDialog() {\n      this.setState({\n        openFileDialog: !this.state.openFileDialog\n      });\n      console.log(\"toggle\");\n    }\n  }, {\n    key: \"updateImageName\",\n    value: function updateImageName(value) {\n      this.setState({\n        imageName: value,\n        imageNameError: \"\",\n        nameFlag: true\n      });\n    }\n  }, {\n    key: \"updateCategoryOptions\",\n    value: function updateCategoryOptions(selected) {\n      var _this2 = this;\n\n      var selectedValue = selected.map(function (selectedItem) {\n        var matchedOption = _this2.state.categoryOptions.find(function (option) {\n          return option.value.match(selectedItem);\n        });\n\n        return matchedOption && matchedOption.label;\n      });\n      this.setState({\n        categorySelectedOptions: []\n      });\n      this.updateCategoryName(selectedValue[0]);\n    }\n  }, {\n    key: \"updateCategoryName\",\n    value: function updateCategoryName(value) {\n      this.setState({\n        categoryValue: value,\n        imageCategoryError: \"\",\n        categoryFlag: true\n      });\n\n      if (this.state.categoryValue === \"\") {\n        this.setState({\n          categorySelectedOptions: this.state.categoryOptions\n        });\n      }\n\n      var filterRegex = new RegExp(value, \"i\");\n      var resultOptions = this.state.categoryInitOptions.filter(function (option) {\n        return option.label.match(filterRegex);\n      });\n      this.setState({\n        categoryOptions: resultOptions\n      });\n    }\n  }, {\n    key: \"handleAddImages\",\n    value: function handleAddImages() {\n      var _this3 = this;\n\n      console.log(this.state.file, this.state.imageName, this.state.categoryValue);\n\n      if (this.state.file === null && this.state.imageName === \"\" && this.state.categoryValue === \"\") {\n        this.setState({\n          fileError: \"Need Image\",\n          imageNameError: \"Need Image Name\",\n          imageCategoryError: \"Need Category\"\n        });\n        return;\n      } else if (this.state.file === null && this.state.imageName === \"\") {\n        this.setState({\n          fileError: \"Need Image\",\n          imageNameError: \"Need Image Name\"\n        });\n        return;\n      } else if (this.state.file === null && this.state.categoryValue === \"\") {\n        this.setState({\n          fileError: \"Need Image\",\n          imageCategoryError: \"Need Category\"\n        });\n        return;\n      } else if (this.state.imageName === \"\" && this.state.categoryValue === \"\") {\n        this.setState({\n          imageNameError: \"Need Image Name\",\n          imageCategoryError: \"Need Category\"\n        });\n        return;\n      } else if (this.state.file === null) {\n        this.setState({\n          fileError: \"Need Image\"\n        });\n        return;\n      } else if (this.state.imageName === \"\") {\n        this.setState({\n          imageNameError: \"Need Image Name\"\n        });\n        return;\n      } else if (this.state.categoryValue === \"\") {\n        this.setState({\n          imageCategoryError: \"Need Category\"\n        });\n        return;\n      }\n\n      for (var i in this.state.allImageData) {\n        var item = this.state.allImageData[i];\n\n        if (item.filename === this.state.imageName) {\n          this.setState({\n            imageNameError: \"Image Name Exist\"\n          });\n          return;\n        }\n      }\n\n      this.setState({\n        loading: true\n      });\n      var formdata = new FormData();\n      formdata.append(\"file\", this.state.file);\n      formdata.append(\"filename\", this.state.imageName);\n      formdata.append(\"category\", this.state.categoryValue);\n      axios.post(\"http://localhost:3000/background\", formdata, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(function (res) {\n        if (res.data === \"success\") {\n          _this3.setState({\n            activeModal: false\n          });\n\n          _this3.getList();\n\n          _this3.setState({\n            loading: false\n          });\n\n          console.log(res.data);\n        } else {\n          console.log(res.data);\n        }\n      });\n    }\n  }, {\n    key: \"handleEditImages\",\n    value: function handleEditImages() {\n      var _this4 = this;\n\n      console.log(this.state.file, this.state.imageName, this.state.categoryValue);\n      console.log(this.state.fileFlag, this.state.nameFlag, this.state.categoryFlag);\n\n      if (this.state.imageName === \"\" && this.state.categoryValue === \"\") {\n        this.setState({\n          imageNameError: \"Need Image Name\",\n          imageCategoryError: \"Need Category\"\n        });\n        return;\n      } else if (this.state.imageName === \"\") {\n        this.setState({\n          imageNameError: \"Need Image Name\"\n        });\n        return;\n      } else if (this.state.categoryValue === \"\") {\n        this.setState({\n          imageCategoryError: \"Need Category\"\n        });\n        return;\n      }\n\n      for (var i in this.state.allImageData) {\n        var item = this.state.allImageData[i];\n\n        if (item.filename === this.state.imageName) {\n          if (this.state.nameFlag) {\n            this.setState({\n              imageNameError: \"Image Name Exist\"\n            });\n            return;\n          }\n        }\n      }\n\n      if (this.state.fileFlag && this.state.nameFlag && this.state.categoryFlag) {\n        this.setState({\n          activeModal: false\n        });\n        return;\n      }\n\n      if (this.state.fileFlag) {\n        this.setState({\n          loading: true\n        });\n        var formdata = new FormData();\n        formdata.append(\"file\", this.state.file);\n        formdata.append(\"filename\", this.state.imageName);\n        formdata.append(\"category\", this.state.categoryValue);\n        formdata.append(\"id\", this.state.id);\n        axios.post(\"http://localhost:3000/background/editWithFile\", formdata, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        }).then(function (res) {\n          if (res.data === \"success\") {\n            _this4.getList();\n\n            _this4.setState({\n              activeModal: false,\n              loading: false\n            });\n\n            console.log(res.data);\n          } else {\n            console.log(res.data);\n          }\n        });\n      } else {\n        if (this.state.nameFlag) {\n          console.log('edit both');\n          this.setState({\n            loading: true\n          });\n          var _formdata = {\n            id: this.state.id,\n            filename: this.state.imageName,\n            category: this.state.categoryValue\n          };\n          axios.post(\"http://localhost:3000/background/editWithoutFile\", {\n            data: _formdata\n          }).then(function (res) {\n            if (res.data === \"success\") {\n              _this4.getList();\n\n              _this4.setState({\n                activeModal: false,\n                loading: false\n              });\n\n              console.log(res.data);\n            } else {\n              console.log(res.data);\n            }\n          });\n        } else if (this.state.categoryFlag) {\n          console.log('edit Category');\n          this.setState({\n            loading: true\n          });\n          var _formdata2 = {\n            id: this.state.id,\n            category: this.state.categoryValue\n          };\n          axios.post(\"http://localhost:3000/background/editWithoutFile\", {\n            data: _formdata2\n          }).then(function (res) {\n            if (res.data === \"success\") {\n              _this4.getList();\n\n              _this4.setState({\n                activeModal: false,\n                loading: false\n              });\n\n              console.log(res.data);\n            } else {\n              console.log(res.data);\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var categoryTextField = __jsx(Autocomplete.TextField, {\n        onChange: this.updateCategoryName,\n        label: \"Image Category\",\n        value: this.state.categoryValue,\n        placeholder: \"Enter category\",\n        error: this.state.imageCategoryError\n      });\n\n      var fileUpload = this.state.fileURL === \"\" ? !this.state.file && __jsx(DropZone.FileUpload, null) : __jsx(Stack, null, __jsx(Thumbnail, {\n        size: \"large\",\n        alt: \"edit\",\n        source: this.state.fileURL\n      }));\n\n      var uploadedFile = this.state.file && __jsx(Stack, null, __jsx(Thumbnail, {\n        size: \"large\",\n        alt: this.state.file.name,\n        source: this.state.validImageTypes.indexOf(this.state.file.type) > 0 ? window.URL.createObjectURL(this.state.file) : \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\n      }));\n\n      return __jsx(\"div\", null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n        title: \"Background Images\",\n        actions: [{\n          content: \"Add Background Image\",\n          onAction: this.addNewImage\n        }]\n      }, __jsx(Card.Section, null, __jsx(TextStyle, {\n        variation: \"subdued\"\n      }, this.state.listItemCount, \" Background Images\")), __jsx(Card.Section, null, __jsx(ResourceList, {\n        resourceName: {\n          singular: \"image\",\n          plural: \"images\"\n        },\n        items: this.state.imageListItems,\n        selectedItems: this.state.selectedListItems,\n        onSelectionChange: this.setSelectedListItems,\n        renderItem: function renderItem(item) {\n          var id = item.id,\n              name = item.name,\n              media = item.media,\n              category = item.category;\n          var shortcutActions = [{\n            content: __jsx(Icon, {\n              source: EditMajorMonotone,\n              color: \"red\"\n            }),\n            onAction: function onAction() {\n              return _this5.editImage(id, name, media, category);\n            }\n          }, {\n            content: __jsx(Icon, {\n              source: DeleteMajorMonotone,\n              color: \"red\"\n            }),\n            onAction: function onAction() {\n              return _this5.deleteImage(id);\n            }\n          }];\n          return __jsx(ResourceList.Item, {\n            id: id,\n            media: media,\n            accessibilityLabel: \"View details for \".concat(name),\n            shortcutActions: shortcutActions,\n            persistActions: true\n          }, __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Name: \"), name)), __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, __jsx(\"span\", {\n            style: {\n              fontSize: 12\n            }\n          }, \"Category: \"), category)));\n        }\n      }))))), __jsx(Modal, {\n        open: this.state.activeModal,\n        onClose: this.closeModal,\n        title: \"Add Image\",\n        primaryAction: this.state.modalAction,\n        style: {\n          padding: \"20px\"\n        },\n        loading: this.state.loading\n      }, __jsx(Modal.Section, null, __jsx(Stack, {\n        alignment: \"center\"\n      }, __jsx(Stack.Item, null, __jsx(\"div\", {\n        style: {\n          width: 100,\n          height: 100\n        }\n      }, __jsx(DropZone, {\n        openFileDialog: this.state.openFileDialog,\n        onDrop: this.handleDropZoneDrop,\n        onFileDialogClose: this.toggleOpenFileDialog\n      }, fileUpload, uploadedFile), __jsx(InlineError, {\n        message: this.state.fileError\n      }))), __jsx(Stack.Item, null, __jsx(TextField, {\n        label: \"Image Name\",\n        value: this.state.imageName,\n        onChange: this.updateImageName,\n        placeholder: \"Enter image name\",\n        error: this.state.imageNameError\n      })), __jsx(Stack.Item, null, __jsx(Autocomplete, {\n        options: this.state.categoryOptions,\n        selected: this.state.categorySelectedOptions,\n        onSelect: this.updateCategoryOptions,\n        textField: categoryTextField\n      }))))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["E:/Lenny/blendapp/pages/index.js"],"names":["React","axios","Layout","Card","ResourceList","TextStyle","Icon","Thumbnail","Modal","Stack","DropZone","InlineError","TextField","Autocomplete","DeleteMajorMonotone","EditMajorMonotone","App","props","get","response","setState","allImageData","data","allCategorys","i","push","category","filterCategory","filter","elem","index","self","indexOf","categoryArray","item","value","label","categoryInitOptions","categoryOptions","imageListItemsData","id","_id","name","filename","media","filepath","imageListItems","listItemCount","length","console","log","addNewImage","bind","setSelectedListItems","editImage","closeModal","deleteImage","handleDropZoneDrop","toggleOpenFileDialog","updateImageName","updateCategoryOptions","updateCategoryName","handleAddImages","handleEditImages","state","selectedListItems","activeModal","modalAction","loading","file","validImageTypes","openFileDialog","fileUpload","uploadedFile","fileError","imageNameError","imageCategoryError","imageName","categorySelectedOptions","categoryTextField","categoryValue","fileURL","fileFlag","nameFlag","categoryFlag","getList","content","onAction","items","source","_dropFiles","acceptedFiles","_rejectedFiles","selected","selectedValue","map","selectedItem","matchedOption","find","option","match","filterRegex","RegExp","resultOptions","formdata","FormData","append","post","headers","then","res","type","window","URL","createObjectURL","singular","plural","shortcutActions","fontSize","padding","width","height","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,YAHF,EAIEC,SAJF,EAKEC,IALF,EAMEC,SANF,EAOEC,KAPF,EAQEC,KARF,EASEC,QATF,EAUEC,WAVF,EAWEC,SAXF,EAYEC,YAZF,QAaO,kBAbP;AAcA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAuD,wBAAvD;;IAEqBC,G;;;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,8DAgDT;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEehB,KAAK,CAACiB,GAAN,CAAU,kCAAV,CAFf;;AAAA;AAEFC,cAAAA,QAFE;;AAGN,oBAAKC,QAAL,CAAc;AAAEC,gBAAAA,YAAY,EAAEF,QAAQ,CAACG;AAAzB,eAAd;;AACID,cAAAA,YAJE,GAIaF,QAAQ,CAACG,IAJtB;AAKFC,cAAAA,YALE,GAKa,EALb;;AAMN,mBAASC,CAAT,IAAcH,YAAd,EAA4B;AAC1BE,gBAAAA,YAAY,CAACE,IAAb,CAAkBJ,YAAY,CAACG,CAAD,CAAZ,CAAgBE,QAAlC;AACD;;AACGC,cAAAA,cATE,GASeJ,YAAY,CAACK,MAAb,CAAoB,UAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,EAA4B;AACnE,uBAAOD,KAAK,KAAKC,IAAI,CAACC,OAAL,CAAaH,IAAb,CAAjB;AACD,eAFoB,CATf;AAYFI,cAAAA,aAZE,GAYc,EAZd;;AAaN,mBAAST,EAAT,IAAcG,cAAd,EAA8B;AACxBO,gBAAAA,IADwB,GACjBP,cAAc,CAACH,EAAD,CADG;AAE5BS,gBAAAA,aAAa,CAACR,IAAd,CAAmB;AACjBU,kBAAAA,KAAK,EAAED,IADU;AAEjBE,kBAAAA,KAAK,EAAEF;AAFU,iBAAnB;AAID;;AACD,oBAAKd,QAAL,CAAc;AACZiB,gBAAAA,mBAAmB,EAAEJ,aADT;AAEZK,gBAAAA,eAAe,EAAEL;AAFL,eAAd;;AAIIM,cAAAA,kBAxBE,GAwBmB,EAxBnB;;AAyBN,mBAASf,GAAT,IAAcH,YAAd,EAA4B;AACtBa,gBAAAA,KADsB,GACfb,YAAY,CAACG,GAAD,CADG;AAE1Be,gBAAAA,kBAAkB,CAACd,IAAnB,CAAwB;AACtBe,kBAAAA,EAAE,EAAEN,KAAI,CAACO,GADa;AAEtBC,kBAAAA,IAAI,EAAER,KAAI,CAACS,QAFW;AAGtBjB,kBAAAA,QAAQ,EAAEQ,KAAI,CAACR,QAHO;AAItBkB,kBAAAA,KAAK,EAAE,MAAC,SAAD;AAAW,oBAAA,MAAM,EAAEV,KAAI,CAACW,QAAxB;AAAkC,oBAAA,GAAG,EAAEX,KAAI,CAACS;AAA5C;AAJe,iBAAxB;AAMD;;AACD,oBAAKvB,QAAL,CAAc;AAAE0B,gBAAAA,cAAc,EAAEP;AAAlB,eAAd;;AACA,oBAAKnB,QAAL,CAAc;AAAE2B,gBAAAA,aAAa,EAAER,kBAAkB,CAACS;AAApC,eAAd;;AAnCM;AAAA;;AAAA;AAAA;AAAA;AAqCNC,cAAAA,OAAO,CAACC,GAAR;;AArCM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAhDS;;AAEjB,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AACA,UAAKC,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BD,IAA1B,+BAA5B;AACA,UAAKE,SAAL,GAAiB,MAAKA,SAAL,CAAeF,IAAf,+BAAjB;AACA,UAAKG,UAAL,GAAkB,MAAKA,UAAL,CAAgBH,IAAhB,+BAAlB;AACA,UAAKI,WAAL,GAAmB,MAAKA,WAAL,CAAiBJ,IAAjB,+BAAnB;AACA,UAAKK,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBL,IAAxB,+BAA1B;AACA,UAAKM,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BN,IAA1B,+BAA5B;AACA,UAAKO,eAAL,GAAuB,MAAKA,eAAL,CAAqBP,IAArB,+BAAvB;AACA,UAAKQ,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BR,IAA3B,+BAA7B;AACA,UAAKS,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBT,IAAxB,+BAA1B;AACA,UAAKU,eAAL,GAAuB,MAAKA,eAAL,CAAqBV,IAArB,+BAAvB;AACA,UAAKW,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBX,IAAtB,+BAAxB;AACA,UAAKY,KAAL,GAAa;AACX3C,MAAAA,YAAY,EAAE,EADH;AAEX0B,MAAAA,aAAa,EAAE,CAFJ;AAGXD,MAAAA,cAAc,EAAE,EAHL;AAIXmB,MAAAA,iBAAiB,EAAE,EAJR;AAKXC,MAAAA,WAAW,EAAE,KALF;AAMXC,MAAAA,WAAW,EAAE,EANF;AAOXC,MAAAA,OAAO,EAAE,KAPE;AAQXC,MAAAA,IAAI,EAAE,IARK;AASXC,MAAAA,eAAe,EAAE,CAAC,WAAD,EAAc,YAAd,EAA4B,WAA5B,CATN;AAUXC,MAAAA,cAAc,EAAE,KAVL;AAWXC,MAAAA,UAAU,EAAE,EAXD;AAYXC,MAAAA,YAAY,EAAE,EAZH;AAaXC,MAAAA,SAAS,EAAE,EAbA;AAcXC,MAAAA,cAAc,EAAE,EAdL;AAeXC,MAAAA,kBAAkB,EAAE,EAfT;AAgBXC,MAAAA,SAAS,EAAE,EAhBA;AAiBXxC,MAAAA,mBAAmB,EAAE,EAjBV;AAkBXC,MAAAA,eAAe,EAAE,EAlBN;AAmBXwC,MAAAA,uBAAuB,EAAE,EAnBd;AAoBXC,MAAAA,iBAAiB,EAAE,EApBR;AAqBXC,MAAAA,aAAa,EAAE,EArBJ;AAsBXxC,MAAAA,EAAE,EAAE,EAtBO;AAuBXyC,MAAAA,OAAO,EAAE,EAvBE;AAwBXC,MAAAA,QAAQ,EAAE,KAxBC;AAyBXC,MAAAA,QAAQ,EAAE,KAzBC;AA0BXC,MAAAA,YAAY,EAAE;AA1BH,KAAb;AAdiB;AA0ClB;;;;;;;;;AAGC,mBAAKC,OAAL;;;;;;;;;;;kCA4CY;AACZ,WAAKjE,QAAL,CAAc;AACZ8C,QAAAA,WAAW,EAAE,IADD;AAEZG,QAAAA,IAAI,EAAE,IAFM;AAGZY,QAAAA,OAAO,EAAE,EAHG;AAIZJ,QAAAA,SAAS,EAAE,EAJC;AAKZG,QAAAA,aAAa,EAAE,EALH;AAMZN,QAAAA,SAAS,EAAE,EANC;AAOZC,QAAAA,cAAc,EAAE,EAPJ;AAQZC,QAAAA,kBAAkB,EAAE,EARR;AASZT,QAAAA,WAAW,EAAE;AACXmB,UAAAA,OAAO,EAAE,KADE;AAEXC,UAAAA,QAAQ,EAAE,KAAKzB;AAFJ;AATD,OAAd;AAcD;;;yCAEoB0B,K,EAAO;AAC1BvC,MAAAA,OAAO,CAACC,GAAR,CAAYsC,KAAZ;AACD;;;8BAEShD,E,EAAIE,I,EAAME,K,EAAOlB,Q,EAAU;AACnCuB,MAAAA,OAAO,CAACC,GAAR,CAAYV,EAAZ,EAAgBE,IAAhB,EAAsBE,KAAtB,EAA6BlB,QAA7B;AACA,WAAKN,QAAL,CAAc;AACZ+C,QAAAA,WAAW,EAAE;AACXmB,UAAAA,OAAO,EAAE,MADE;AAEXC,UAAAA,QAAQ,EAAE,KAAKxB;AAFJ,SADD;AAKZW,QAAAA,SAAS,EAAE,EALC;AAMZC,QAAAA,cAAc,EAAE,EANJ;AAOZC,QAAAA,kBAAkB,EAAE,EAPR;AAQZpC,QAAAA,EAAE,EAAEA,EARQ;AASZqC,QAAAA,SAAS,EAAEnC,IATC;AAUZ2B,QAAAA,IAAI,EAAE,IAVM;AAWZY,QAAAA,OAAO,EAAErC,KAAK,CAAC3B,KAAN,CAAYwE,MAXT;AAYZT,QAAAA,aAAa,EAAEtD,QAZH;AAaZwC,QAAAA,WAAW,EAAE,IAbD;AAcZgB,QAAAA,QAAQ,EAAE,KAdE;AAeZC,QAAAA,QAAQ,EAAE,KAfE;AAgBZC,QAAAA,YAAY,EAAE;AAhBF,OAAd;AAkBD;;;gCAEW5C,E,EAAI;AACdS,MAAAA,OAAO,CAACC,GAAR,CAAYV,EAAZ;AACD;;;iCAEY;AACX,WAAKpB,QAAL,CAAc;AAAE8C,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD;;;uCAEkBwB,U,EAAYC,a,EAAeC,c,EAAgB;AAC5D,WAAKxE,QAAL,CAAc;AACZiD,QAAAA,IAAI,EAAEsB,aAAa,CAAC,CAAD,CADP;AAEZjB,QAAAA,SAAS,EAAE,EAFC;AAGZQ,QAAAA,QAAQ,EAAE,IAHE;AAIZD,QAAAA,OAAO,EAAE;AAJG,OAAd;AAMD;;;2CAEsB;AACrB,WAAK7D,QAAL,CAAc;AAAEmD,QAAAA,cAAc,EAAE,CAAC,KAAKP,KAAL,CAAWO;AAA9B,OAAd;AACAtB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;;;oCAEef,K,EAAO;AACrB,WAAKf,QAAL,CAAc;AACZyD,QAAAA,SAAS,EAAE1C,KADC;AAEZwC,QAAAA,cAAc,EAAE,EAFJ;AAGZQ,QAAAA,QAAQ,EAAE;AAHE,OAAd;AAKD;;;0CAEqBU,Q,EAAU;AAAA;;AAC9B,UAAMC,aAAa,GAAGD,QAAQ,CAACE,GAAT,CAAa,UAAAC,YAAY,EAAI;AACjD,YAAMC,aAAa,GAAG,MAAI,CAACjC,KAAL,CAAW1B,eAAX,CAA2B4D,IAA3B,CAAgC,UAAAC,MAAM,EAAI;AAC9D,iBAAOA,MAAM,CAAChE,KAAP,CAAaiE,KAAb,CAAmBJ,YAAnB,CAAP;AACD,SAFqB,CAAtB;;AAGA,eAAOC,aAAa,IAAIA,aAAa,CAAC7D,KAAtC;AACD,OALqB,CAAtB;AAMA,WAAKhB,QAAL,CAAc;AAAE0D,QAAAA,uBAAuB,EAAE;AAA3B,OAAd;AACA,WAAKjB,kBAAL,CAAwBiC,aAAa,CAAC,CAAD,CAArC;AACD;;;uCAEkB3D,K,EAAO;AACxB,WAAKf,QAAL,CAAc;AACZ4D,QAAAA,aAAa,EAAE7C,KADH;AAEZyC,QAAAA,kBAAkB,EAAE,EAFR;AAGZQ,QAAAA,YAAY,EAAE;AAHF,OAAd;;AAKA,UAAI,KAAKpB,KAAL,CAAWgB,aAAX,KAA6B,EAAjC,EAAqC;AACnC,aAAK5D,QAAL,CAAc;AAAE0D,UAAAA,uBAAuB,EAAE,KAAKd,KAAL,CAAW1B;AAAtC,SAAd;AACD;;AAED,UAAM+D,WAAW,GAAG,IAAIC,MAAJ,CAAWnE,KAAX,EAAkB,GAAlB,CAApB;AACA,UAAMoE,aAAa,GAAG,KAAKvC,KAAL,CAAW3B,mBAAX,CAA+BT,MAA/B,CAAsC,UAAAuE,MAAM;AAAA,eAChEA,MAAM,CAAC/D,KAAP,CAAagE,KAAb,CAAmBC,WAAnB,CADgE;AAAA,OAA5C,CAAtB;AAGA,WAAKjF,QAAL,CAAc;AAAEkB,QAAAA,eAAe,EAAEiE;AAAnB,OAAd;AACD;;;sCAEiB;AAAA;;AAChBtD,MAAAA,OAAO,CAACC,GAAR,CACE,KAAKc,KAAL,CAAWK,IADb,EAEE,KAAKL,KAAL,CAAWa,SAFb,EAGE,KAAKb,KAAL,CAAWgB,aAHb;;AAKA,UACE,KAAKhB,KAAL,CAAWK,IAAX,KAAoB,IAApB,IACA,KAAKL,KAAL,CAAWa,SAAX,KAAyB,EADzB,IAEA,KAAKb,KAAL,CAAWgB,aAAX,KAA6B,EAH/B,EAIE;AACA,aAAK5D,QAAL,CAAc;AACZsD,UAAAA,SAAS,EAAE,YADC;AAEZC,UAAAA,cAAc,EAAE,iBAFJ;AAGZC,UAAAA,kBAAkB,EAAE;AAHR,SAAd;AAKA;AACD,OAXD,MAWO,IAAI,KAAKZ,KAAL,CAAWK,IAAX,KAAoB,IAApB,IAA4B,KAAKL,KAAL,CAAWa,SAAX,KAAyB,EAAzD,EAA6D;AAClE,aAAKzD,QAAL,CAAc;AACZsD,UAAAA,SAAS,EAAE,YADC;AAEZC,UAAAA,cAAc,EAAE;AAFJ,SAAd;AAIA;AACD,OANM,MAMA,IAAI,KAAKX,KAAL,CAAWK,IAAX,KAAoB,IAApB,IAA4B,KAAKL,KAAL,CAAWgB,aAAX,KAA6B,EAA7D,EAAiE;AACtE,aAAK5D,QAAL,CAAc;AACZsD,UAAAA,SAAS,EAAE,YADC;AAEZE,UAAAA,kBAAkB,EAAE;AAFR,SAAd;AAIA;AACD,OANM,MAMA,IAAI,KAAKZ,KAAL,CAAWa,SAAX,KAAyB,EAAzB,IAA+B,KAAKb,KAAL,CAAWgB,aAAX,KAA6B,EAAhE,EAAoE;AACzE,aAAK5D,QAAL,CAAc;AACZuD,UAAAA,cAAc,EAAE,iBADJ;AAEZC,UAAAA,kBAAkB,EAAE;AAFR,SAAd;AAIA;AACD,OANM,MAMA,IAAI,KAAKZ,KAAL,CAAWK,IAAX,KAAoB,IAAxB,EAA8B;AACnC,aAAKjD,QAAL,CAAc;AACZsD,UAAAA,SAAS,EAAE;AADC,SAAd;AAGA;AACD,OALM,MAKA,IAAI,KAAKV,KAAL,CAAWa,SAAX,KAAyB,EAA7B,EAAiC;AACtC,aAAKzD,QAAL,CAAc;AACZuD,UAAAA,cAAc,EAAE;AADJ,SAAd;AAGA;AACD,OALM,MAKA,IAAI,KAAKX,KAAL,CAAWgB,aAAX,KAA6B,EAAjC,EAAqC;AAC1C,aAAK5D,QAAL,CAAc;AACZwD,UAAAA,kBAAkB,EAAE;AADR,SAAd;AAGA;AACD;;AACD,WAAK,IAAIpD,CAAT,IAAc,KAAKwC,KAAL,CAAW3C,YAAzB,EAAuC;AACrC,YAAIa,IAAI,GAAG,KAAK8B,KAAL,CAAW3C,YAAX,CAAwBG,CAAxB,CAAX;;AACA,YAAIU,IAAI,CAACS,QAAL,KAAkB,KAAKqB,KAAL,CAAWa,SAAjC,EAA4C;AAC1C,eAAKzD,QAAL,CAAc;AACZuD,YAAAA,cAAc,EAAE;AADJ,WAAd;AAGA;AACD;AACF;;AACD,WAAKvD,QAAL,CAAc;AAAEgD,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,UAAIoC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAK1C,KAAL,CAAWK,IAAnC;AACAmC,MAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B,KAAK1C,KAAL,CAAWa,SAAvC;AACA2B,MAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B,KAAK1C,KAAL,CAAWgB,aAAvC;AACA/E,MAAAA,KAAK,CACF0G,IADH,CACQ,kCADR,EAC4CH,QAD5C,EACsD;AAClDI,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADyC,OADtD,EAMGC,IANH,CAMQ,UAAAC,GAAG,EAAI;AACX,YAAIA,GAAG,CAACxF,IAAJ,KAAa,SAAjB,EAA4B;AAC1B,UAAA,MAAI,CAACF,QAAL,CAAc;AAAE8C,YAAAA,WAAW,EAAE;AAAf,WAAd;;AACA,UAAA,MAAI,CAACmB,OAAL;;AACA,UAAA,MAAI,CAACjE,QAAL,CAAc;AAAEgD,YAAAA,OAAO,EAAE;AAAX,WAAd;;AACAnB,UAAAA,OAAO,CAACC,GAAR,CAAY4D,GAAG,CAACxF,IAAhB;AACD,SALD,MAKO;AACL2B,UAAAA,OAAO,CAACC,GAAR,CAAY4D,GAAG,CAACxF,IAAhB;AACD;AACF,OAfH;AAgBD;;;uCAEkB;AAAA;;AACjB2B,MAAAA,OAAO,CAACC,GAAR,CACE,KAAKc,KAAL,CAAWK,IADb,EAEE,KAAKL,KAAL,CAAWa,SAFb,EAGE,KAAKb,KAAL,CAAWgB,aAHb;AAKA/B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKc,KAAL,CAAWkB,QAAvB,EAAiC,KAAKlB,KAAL,CAAWmB,QAA5C,EAAsD,KAAKnB,KAAL,CAAWoB,YAAjE;;AACA,UAAI,KAAKpB,KAAL,CAAWa,SAAX,KAAyB,EAAzB,IAA+B,KAAKb,KAAL,CAAWgB,aAAX,KAA6B,EAAhE,EAAoE;AAClE,aAAK5D,QAAL,CAAc;AACZuD,UAAAA,cAAc,EAAE,iBADJ;AAEZC,UAAAA,kBAAkB,EAAE;AAFR,SAAd;AAIA;AACD,OAND,MAMO,IAAI,KAAKZ,KAAL,CAAWa,SAAX,KAAyB,EAA7B,EAAiC;AACtC,aAAKzD,QAAL,CAAc;AACZuD,UAAAA,cAAc,EAAE;AADJ,SAAd;AAGA;AACD,OALM,MAKA,IAAI,KAAKX,KAAL,CAAWgB,aAAX,KAA6B,EAAjC,EAAqC;AAC1C,aAAK5D,QAAL,CAAc;AACZwD,UAAAA,kBAAkB,EAAE;AADR,SAAd;AAGA;AACD;;AACD,WAAK,IAAIpD,CAAT,IAAc,KAAKwC,KAAL,CAAW3C,YAAzB,EAAuC;AACrC,YAAIa,IAAI,GAAG,KAAK8B,KAAL,CAAW3C,YAAX,CAAwBG,CAAxB,CAAX;;AACA,YAAIU,IAAI,CAACS,QAAL,KAAkB,KAAKqB,KAAL,CAAWa,SAAjC,EAA4C;AAC1C,cAAG,KAAKb,KAAL,CAAWmB,QAAd,EAAwB;AACtB,iBAAK/D,QAAL,CAAc;AACZuD,cAAAA,cAAc,EAAE;AADJ,aAAd;AAGA;AACD;AAEF;AACF;;AACD,UAAG,KAAKX,KAAL,CAAWkB,QAAX,IAAuB,KAAKlB,KAAL,CAAWmB,QAAlC,IAA8C,KAAKnB,KAAL,CAAWoB,YAA5D,EAA0E;AACxE,aAAKhE,QAAL,CAAc;AAAE8C,UAAAA,WAAW,EAAE;AAAf,SAAd;AACA;AACD;;AAED,UAAG,KAAKF,KAAL,CAAWkB,QAAd,EAAwB;AACtB,aAAK9D,QAAL,CAAc;AAAEgD,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA,YAAIoC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,QAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAK1C,KAAL,CAAWK,IAAnC;AACAmC,QAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B,KAAK1C,KAAL,CAAWa,SAAvC;AACA2B,QAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B,KAAK1C,KAAL,CAAWgB,aAAvC;AACAwB,QAAAA,QAAQ,CAACE,MAAT,CAAgB,IAAhB,EAAsB,KAAK1C,KAAL,CAAWxB,EAAjC;AACAvC,QAAAA,KAAK,CACF0G,IADH,CACQ,+CADR,EACyDH,QADzD,EACmE;AAC/DI,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AADsD,SADnE,EAMGC,IANH,CAMQ,UAAAC,GAAG,EAAI;AACX,cAAIA,GAAG,CAACxF,IAAJ,KAAa,SAAjB,EAA4B;AAC1B,YAAA,MAAI,CAAC+D,OAAL;;AACA,YAAA,MAAI,CAACjE,QAAL,CAAc;AACZ8C,cAAAA,WAAW,EAAE,KADD;AAEZE,cAAAA,OAAO,EAAE;AAFG,aAAd;;AAIAnB,YAAAA,OAAO,CAACC,GAAR,CAAY4D,GAAG,CAACxF,IAAhB;AACD,WAPD,MAOO;AACL2B,YAAAA,OAAO,CAACC,GAAR,CAAY4D,GAAG,CAACxF,IAAhB;AACD;AACF,SAjBH;AAkBD,OAzBD,MAyBO;AACL,YAAG,KAAK0C,KAAL,CAAWmB,QAAd,EAAwB;AACtBlC,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,eAAK9B,QAAL,CAAc;AAAEgD,YAAAA,OAAO,EAAE;AAAX,WAAd;AACA,cAAIoC,SAAQ,GAAG;AACbhE,YAAAA,EAAE,EAAE,KAAKwB,KAAL,CAAWxB,EADF;AAEbG,YAAAA,QAAQ,EAAE,KAAKqB,KAAL,CAAWa,SAFR;AAGbnD,YAAAA,QAAQ,EAAE,KAAKsC,KAAL,CAAWgB;AAHR,WAAf;AAKA/E,UAAAA,KAAK,CACF0G,IADH,CACQ,kDADR,EAC4D;AAACrF,YAAAA,IAAI,EAAEkF;AAAP,WAD5D,EAEGK,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACX,gBAAIA,GAAG,CAACxF,IAAJ,KAAa,SAAjB,EAA4B;AAC1B,cAAA,MAAI,CAAC+D,OAAL;;AACA,cAAA,MAAI,CAACjE,QAAL,CAAc;AACZ8C,gBAAAA,WAAW,EAAE,KADD;AAEZE,gBAAAA,OAAO,EAAE;AAFG,eAAd;;AAIAnB,cAAAA,OAAO,CAACC,GAAR,CAAY4D,GAAG,CAACxF,IAAhB;AACD,aAPD,MAOO;AACL2B,cAAAA,OAAO,CAACC,GAAR,CAAY4D,GAAG,CAACxF,IAAhB;AACD;AACF,WAbH;AAcD,SAtBD,MAsBO,IAAG,KAAK0C,KAAL,CAAWoB,YAAd,EAA4B;AACjCnC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,eAAK9B,QAAL,CAAc;AAAEgD,YAAAA,OAAO,EAAE;AAAX,WAAd;AACA,cAAIoC,UAAQ,GAAG;AACbhE,YAAAA,EAAE,EAAE,KAAKwB,KAAL,CAAWxB,EADF;AAEbd,YAAAA,QAAQ,EAAE,KAAKsC,KAAL,CAAWgB;AAFR,WAAf;AAIA/E,UAAAA,KAAK,CACF0G,IADH,CACQ,kDADR,EAC4D;AAACrF,YAAAA,IAAI,EAAEkF;AAAP,WAD5D,EAEGK,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACX,gBAAIA,GAAG,CAACxF,IAAJ,KAAa,SAAjB,EAA4B;AAC1B,cAAA,MAAI,CAAC+D,OAAL;;AACA,cAAA,MAAI,CAACjE,QAAL,CAAc;AACZ8C,gBAAAA,WAAW,EAAE,KADD;AAEZE,gBAAAA,OAAO,EAAE;AAFG,eAAd;;AAIAnB,cAAAA,OAAO,CAACC,GAAR,CAAY4D,GAAG,CAACxF,IAAhB;AACD,aAPD,MAOO;AACL2B,cAAAA,OAAO,CAACC,GAAR,CAAY4D,GAAG,CAACxF,IAAhB;AACD;AACF,WAbH;AAcD;AACF;AACF;;;6BAEQ;AAAA;;AACP,UAAMyD,iBAAiB,GACrB,MAAC,YAAD,CAAc,SAAd;AACE,QAAA,QAAQ,EAAE,KAAKlB,kBADjB;AAEE,QAAA,KAAK,EAAC,gBAFR;AAGE,QAAA,KAAK,EAAE,KAAKG,KAAL,CAAWgB,aAHpB;AAIE,QAAA,WAAW,EAAC,gBAJd;AAKE,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWY;AALpB,QADF;;AASA,UAAMJ,UAAU,GACd,KAAKR,KAAL,CAAWiB,OAAX,KAAuB,EAAvB,GACE,CAAC,KAAKjB,KAAL,CAAWK,IAAZ,IAAoB,MAAC,QAAD,CAAU,UAAV,OADtB,GAGE,MAAC,KAAD,QACE,MAAC,SAAD;AAAW,QAAA,IAAI,EAAC,OAAhB;AAAwB,QAAA,GAAG,EAAC,MAA5B;AAAmC,QAAA,MAAM,EAAE,KAAKL,KAAL,CAAWiB;AAAtD,QADF,CAJJ;;AASA,UAAMR,YAAY,GAAG,KAAKT,KAAL,CAAWK,IAAX,IACnB,MAAC,KAAD,QACE,MAAC,SAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,GAAG,EAAE,KAAKL,KAAL,CAAWK,IAAX,CAAgB3B,IAFvB;AAGE,QAAA,MAAM,EACJ,KAAKsB,KAAL,CAAWM,eAAX,CAA2BtC,OAA3B,CAAmC,KAAKgC,KAAL,CAAWK,IAAX,CAAgB0C,IAAnD,IAA2D,CAA3D,GACIC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2B,KAAKlD,KAAL,CAAWK,IAAtC,CADJ,GAEI;AANR,QADF,CADF;;AAcA,aACE,mBACE,MAAC,MAAD,QACE,MAAC,MAAD,CAAQ,OAAR,QACE,MAAC,IAAD;AACE,QAAA,KAAK,EAAC,mBADR;AAEE,QAAA,OAAO,EAAE,CACP;AACEiB,UAAAA,OAAO,EAAE,sBADX;AAEEC,UAAAA,QAAQ,EAAE,KAAKpC;AAFjB,SADO;AAFX,SASE,MAAC,IAAD,CAAM,OAAN,QACE,MAAC,SAAD;AAAW,QAAA,SAAS,EAAC;AAArB,SACG,KAAKa,KAAL,CAAWjB,aADd,uBADF,CATF,EAcE,MAAC,IAAD,CAAM,OAAN,QACE,MAAC,YAAD;AACE,QAAA,YAAY,EAAE;AAAEoE,UAAAA,QAAQ,EAAE,OAAZ;AAAqBC,UAAAA,MAAM,EAAE;AAA7B,SADhB;AAEE,QAAA,KAAK,EAAE,KAAKpD,KAAL,CAAWlB,cAFpB;AAGE,QAAA,aAAa,EAAE,KAAKkB,KAAL,CAAWC,iBAH5B;AAIE,QAAA,iBAAiB,EAAE,KAAKZ,oBAJ1B;AAKE,QAAA,UAAU,EAAE,oBAAAnB,IAAI,EAAI;AAAA,cACVM,EADU,GACoBN,IADpB,CACVM,EADU;AAAA,cACNE,IADM,GACoBR,IADpB,CACNQ,IADM;AAAA,cACAE,KADA,GACoBV,IADpB,CACAU,KADA;AAAA,cACOlB,QADP,GACoBQ,IADpB,CACOR,QADP;AAElB,cAAM2F,eAAe,GAAG,CACtB;AACE/B,YAAAA,OAAO,EACL,MAAC,IAAD;AAAM,cAAA,MAAM,EAAEvE,iBAAd;AAAiC,cAAA,KAAK,EAAC;AAAvC,cAFJ;AAIEwE,YAAAA,QAAQ,EAAE;AAAA,qBACR,MAAI,CAACjC,SAAL,CAAed,EAAf,EAAmBE,IAAnB,EAAyBE,KAAzB,EAAgClB,QAAhC,CADQ;AAAA;AAJZ,WADsB,EAQtB;AACE4D,YAAAA,OAAO,EACL,MAAC,IAAD;AAAM,cAAA,MAAM,EAAExE,mBAAd;AAAmC,cAAA,KAAK,EAAC;AAAzC,cAFJ;AAIEyE,YAAAA,QAAQ,EAAE;AAAA,qBAAM,MAAI,CAAC/B,WAAL,CAAiBhB,EAAjB,CAAN;AAAA;AAJZ,WARsB,CAAxB;AAgBA,iBACE,MAAC,YAAD,CAAc,IAAd;AACE,YAAA,EAAE,EAAEA,EADN;AAEE,YAAA,KAAK,EAAEI,KAFT;AAGE,YAAA,kBAAkB,6BAAsBF,IAAtB,CAHpB;AAIE,YAAA,eAAe,EAAE2E,eAJnB;AAKE,YAAA,cAAc;AALhB,aAOE,kBACE,MAAC,SAAD;AAAW,YAAA,SAAS,EAAC;AAArB,aACE;AAAM,YAAA,KAAK,EAAE;AAAEC,cAAAA,QAAQ,EAAE;AAAZ;AAAb,sBADF,EAEG5E,IAFH,CADF,CAPF,EAaE,kBACE,MAAC,SAAD;AAAW,YAAA,SAAS,EAAC;AAArB,aACE;AAAM,YAAA,KAAK,EAAE;AAAE4E,cAAAA,QAAQ,EAAE;AAAZ;AAAb,0BADF,EAEG5F,QAFH,CADF,CAbF,CADF;AAsBD;AA7CH,QADF,CAdF,CADF,CADF,CADF,EAqEE,MAAC,KAAD;AACE,QAAA,IAAI,EAAE,KAAKsC,KAAL,CAAWE,WADnB;AAEE,QAAA,OAAO,EAAE,KAAKX,UAFhB;AAGE,QAAA,KAAK,EAAC,WAHR;AAIE,QAAA,aAAa,EAAE,KAAKS,KAAL,CAAWG,WAJ5B;AAKE,QAAA,KAAK,EAAE;AAAEoD,UAAAA,OAAO,EAAE;AAAX,SALT;AAME,QAAA,OAAO,EAAE,KAAKvD,KAAL,CAAWI;AANtB,SAQE,MAAC,KAAD,CAAO,OAAP,QACE,MAAC,KAAD;AAAO,QAAA,SAAS,EAAC;AAAjB,SACE,MAAC,KAAD,CAAO,IAAP,QACE;AAAK,QAAA,KAAK,EAAE;AAAEoD,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,MAAM,EAAE;AAAtB;AAAZ,SACE,MAAC,QAAD;AACE,QAAA,cAAc,EAAE,KAAKzD,KAAL,CAAWO,cAD7B;AAEE,QAAA,MAAM,EAAE,KAAKd,kBAFf;AAGE,QAAA,iBAAiB,EAAE,KAAKC;AAH1B,SAKGc,UALH,EAMGC,YANH,CADF,EASE,MAAC,WAAD;AAAa,QAAA,OAAO,EAAE,KAAKT,KAAL,CAAWU;AAAjC,QATF,CADF,CADF,EAcE,MAAC,KAAD,CAAO,IAAP,QACE,MAAC,SAAD;AACE,QAAA,KAAK,EAAC,YADR;AAEE,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWa,SAFpB;AAGE,QAAA,QAAQ,EAAE,KAAKlB,eAHjB;AAIE,QAAA,WAAW,EAAC,kBAJd;AAKE,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWW;AALpB,QADF,CAdF,EAuBE,MAAC,KAAD,CAAO,IAAP,QACE,MAAC,YAAD;AACE,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAW1B,eADtB;AAEE,QAAA,QAAQ,EAAE,KAAK0B,KAAL,CAAWc,uBAFvB;AAGE,QAAA,QAAQ,EAAE,KAAKlB,qBAHjB;AAIE,QAAA,SAAS,EAAEmB;AAJb,QADF,CAvBF,CADF,CARF,CArEF,CADF;AAmHD;;;;EAxhB8B/E,KAAK,CAAC0H,S;;SAAlB1G,G","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Layout,\r\n  Card,\r\n  ResourceList,\r\n  TextStyle,\r\n  Icon,\r\n  Thumbnail,\r\n  Modal,\r\n  Stack,\r\n  DropZone,\r\n  InlineError,\r\n  TextField,\r\n  Autocomplete\r\n} from \"@shopify/polaris\";\r\nimport { DeleteMajorMonotone, EditMajorMonotone } from \"@shopify/polaris-icons\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addNewImage = this.addNewImage.bind(this);\r\n    this.setSelectedListItems = this.setSelectedListItems.bind(this);\r\n    this.editImage = this.editImage.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n    this.deleteImage = this.deleteImage.bind(this);\r\n    this.handleDropZoneDrop = this.handleDropZoneDrop.bind(this);\r\n    this.toggleOpenFileDialog = this.toggleOpenFileDialog.bind(this);\r\n    this.updateImageName = this.updateImageName.bind(this);\r\n    this.updateCategoryOptions = this.updateCategoryOptions.bind(this);\r\n    this.updateCategoryName = this.updateCategoryName.bind(this);\r\n    this.handleAddImages = this.handleAddImages.bind(this);\r\n    this.handleEditImages = this.handleEditImages.bind(this);\r\n    this.state = {\r\n      allImageData: [],\r\n      listItemCount: 0,\r\n      imageListItems: [],\r\n      selectedListItems: [],\r\n      activeModal: false,\r\n      modalAction: {},\r\n      loading: false,\r\n      file: null,\r\n      validImageTypes: [\"image/gif\", \"image/jpeg\", \"image/png\"],\r\n      openFileDialog: false,\r\n      fileUpload: \"\",\r\n      uploadedFile: \"\",\r\n      fileError: \"\",\r\n      imageNameError: \"\",\r\n      imageCategoryError: \"\",\r\n      imageName: \"\",\r\n      categoryInitOptions: [],\r\n      categoryOptions: [],\r\n      categorySelectedOptions: [],\r\n      categoryTextField: \"\",\r\n      categoryValue: \"\",\r\n      id: \"\",\r\n      fileURL: \"\",\r\n      fileFlag: false,\r\n      nameFlag: false,\r\n      categoryFlag: false\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.getList();\r\n  }\r\n\r\n  getList = async () => {\r\n    try {\r\n      let response = await axios.get(\"http://localhost:3000/background\");\r\n      this.setState({ allImageData: response.data });\r\n      let allImageData = response.data;\r\n      let allCategorys = [];\r\n      for (let i in allImageData) {\r\n        allCategorys.push(allImageData[i].category);\r\n      }\r\n      let filterCategory = allCategorys.filter(function(elem, index, self) {\r\n        return index === self.indexOf(elem);\r\n      });\r\n      let categoryArray = [];\r\n      for (let i in filterCategory) {\r\n        let item = filterCategory[i];\r\n        categoryArray.push({\r\n          value: item,\r\n          label: item\r\n        });\r\n      }\r\n      this.setState({\r\n        categoryInitOptions: categoryArray,\r\n        categoryOptions: categoryArray\r\n      });\r\n      let imageListItemsData = [];\r\n      for (let i in allImageData) {\r\n        let item = allImageData[i];\r\n        imageListItemsData.push({\r\n          id: item._id,\r\n          name: item.filename,\r\n          category: item.category,\r\n          media: <Thumbnail source={item.filepath} alt={item.filename} />\r\n        });\r\n      }\r\n      this.setState({ imageListItems: imageListItemsData });\r\n      this.setState({ listItemCount: imageListItemsData.length });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  addNewImage() {\r\n    this.setState({\r\n      activeModal: true,\r\n      file: null,\r\n      fileURL: \"\",\r\n      imageName: \"\",\r\n      categoryValue: \"\",\r\n      fileError: '',\r\n      imageNameError: '',\r\n      imageCategoryError: '',\r\n      modalAction: {\r\n        content: \"Add\",\r\n        onAction: this.handleAddImages\r\n      }\r\n    });\r\n  }\r\n\r\n  setSelectedListItems(items) {\r\n    console.log(items);\r\n  }\r\n\r\n  editImage(id, name, media, category) {\r\n    console.log(id, name, media, category);\r\n    this.setState({\r\n      modalAction: {\r\n        content: \"Save\",\r\n        onAction: this.handleEditImages\r\n      },\r\n      fileError: '',\r\n      imageNameError: '',\r\n      imageCategoryError: '',\r\n      id: id,\r\n      imageName: name,\r\n      file: null,\r\n      fileURL: media.props.source,\r\n      categoryValue: category,\r\n      activeModal: true,\r\n      fileFlag: false,\r\n      nameFlag: false,\r\n      categoryFlag: false,\r\n    });\r\n  }\r\n\r\n  deleteImage(id) {\r\n    console.log(id);\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({ activeModal: false });\r\n  }\r\n\r\n  handleDropZoneDrop(_dropFiles, acceptedFiles, _rejectedFiles) {\r\n    this.setState({\r\n      file: acceptedFiles[0],\r\n      fileError: \"\",\r\n      fileFlag: true,\r\n      fileURL: ''\r\n    });\r\n  }\r\n\r\n  toggleOpenFileDialog() {\r\n    this.setState({ openFileDialog: !this.state.openFileDialog });\r\n    console.log(\"toggle\");\r\n  }\r\n\r\n  updateImageName(value) {\r\n    this.setState({\r\n      imageName: value,\r\n      imageNameError: \"\",\r\n      nameFlag: true\r\n    });\r\n  }\r\n\r\n  updateCategoryOptions(selected) {\r\n    const selectedValue = selected.map(selectedItem => {\r\n      const matchedOption = this.state.categoryOptions.find(option => {\r\n        return option.value.match(selectedItem);\r\n      });\r\n      return matchedOption && matchedOption.label;\r\n    });\r\n    this.setState({ categorySelectedOptions: [] });\r\n    this.updateCategoryName(selectedValue[0]);\r\n  }\r\n\r\n  updateCategoryName(value) {\r\n    this.setState({\r\n      categoryValue: value,\r\n      imageCategoryError: \"\",\r\n      categoryFlag: true\r\n    });\r\n    if (this.state.categoryValue === \"\") {\r\n      this.setState({ categorySelectedOptions: this.state.categoryOptions });\r\n    }\r\n\r\n    const filterRegex = new RegExp(value, \"i\");\r\n    const resultOptions = this.state.categoryInitOptions.filter(option =>\r\n      option.label.match(filterRegex)\r\n    );\r\n    this.setState({ categoryOptions: resultOptions });\r\n  }\r\n\r\n  handleAddImages() {\r\n    console.log(\r\n      this.state.file,\r\n      this.state.imageName,\r\n      this.state.categoryValue\r\n    );\r\n    if (\r\n      this.state.file === null &&\r\n      this.state.imageName === \"\" &&\r\n      this.state.categoryValue === \"\"\r\n    ) {\r\n      this.setState({\r\n        fileError: \"Need Image\",\r\n        imageNameError: \"Need Image Name\",\r\n        imageCategoryError: \"Need Category\"\r\n      });\r\n      return;\r\n    } else if (this.state.file === null && this.state.imageName === \"\") {\r\n      this.setState({\r\n        fileError: \"Need Image\",\r\n        imageNameError: \"Need Image Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.file === null && this.state.categoryValue === \"\") {\r\n      this.setState({\r\n        fileError: \"Need Image\",\r\n        imageCategoryError: \"Need Category\"\r\n      });\r\n      return;\r\n    } else if (this.state.imageName === \"\" && this.state.categoryValue === \"\") {\r\n      this.setState({\r\n        imageNameError: \"Need Image Name\",\r\n        imageCategoryError: \"Need Category\"\r\n      });\r\n      return;\r\n    } else if (this.state.file === null) {\r\n      this.setState({\r\n        fileError: \"Need Image\"\r\n      });\r\n      return;\r\n    } else if (this.state.imageName === \"\") {\r\n      this.setState({\r\n        imageNameError: \"Need Image Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.categoryValue === \"\") {\r\n      this.setState({\r\n        imageCategoryError: \"Need Category\"\r\n      });\r\n      return;\r\n    }\r\n    for (let i in this.state.allImageData) {\r\n      let item = this.state.allImageData[i];\r\n      if (item.filename === this.state.imageName) {\r\n        this.setState({\r\n          imageNameError: \"Image Name Exist\"\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    this.setState({ loading: true });\r\n    let formdata = new FormData();\r\n    formdata.append(\"file\", this.state.file);\r\n    formdata.append(\"filename\", this.state.imageName);\r\n    formdata.append(\"category\", this.state.categoryValue);\r\n    axios\r\n      .post(\"http://localhost:3000/background\", formdata, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      })\r\n      .then(res => {\r\n        if (res.data === \"success\") {\r\n          this.setState({ activeModal: false });\r\n          this.getList();\r\n          this.setState({ loading: false });\r\n          console.log(res.data);\r\n        } else {\r\n          console.log(res.data);\r\n        }\r\n      });\r\n  }\r\n\r\n  handleEditImages() {\r\n    console.log(\r\n      this.state.file,\r\n      this.state.imageName,\r\n      this.state.categoryValue\r\n    );\r\n    console.log(this.state.fileFlag, this.state.nameFlag, this.state.categoryFlag)\r\n    if (this.state.imageName === \"\" && this.state.categoryValue === \"\") {\r\n      this.setState({\r\n        imageNameError: \"Need Image Name\",\r\n        imageCategoryError: \"Need Category\"\r\n      });\r\n      return;\r\n    } else if (this.state.imageName === \"\") {\r\n      this.setState({\r\n        imageNameError: \"Need Image Name\"\r\n      });\r\n      return;\r\n    } else if (this.state.categoryValue === \"\") {\r\n      this.setState({\r\n        imageCategoryError: \"Need Category\"\r\n      });\r\n      return;\r\n    }\r\n    for (let i in this.state.allImageData) {\r\n      let item = this.state.allImageData[i];\r\n      if (item.filename === this.state.imageName) {\r\n        if(this.state.nameFlag) {\r\n          this.setState({\r\n            imageNameError: \"Image Name Exist\"\r\n          });\r\n          return;\r\n        }\r\n        \r\n      }\r\n    }\r\n    if(this.state.fileFlag && this.state.nameFlag && this.state.categoryFlag) {\r\n      this.setState({ activeModal: false });\r\n      return;\r\n    }\r\n    \r\n    if(this.state.fileFlag) {\r\n      this.setState({ loading: true });\r\n      let formdata = new FormData();\r\n      formdata.append(\"file\", this.state.file);\r\n      formdata.append(\"filename\", this.state.imageName);\r\n      formdata.append(\"category\", this.state.categoryValue);\r\n      formdata.append(\"id\", this.state.id);\r\n      axios\r\n        .post(\"http://localhost:3000/background/editWithFile\", formdata, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\"\r\n          }\r\n        })\r\n        .then(res => {\r\n          if (res.data === \"success\") {\r\n            this.getList();\r\n            this.setState({ \r\n              activeModal: false,\r\n              loading: false\r\n            });\r\n            console.log(res.data);\r\n          } else {\r\n            console.log(res.data);\r\n          }\r\n        });\r\n    } else {\r\n      if(this.state.nameFlag) {\r\n        console.log('edit both')\r\n        this.setState({ loading: true });\r\n        let formdata = {\r\n          id: this.state.id,\r\n          filename: this.state.imageName,\r\n          category: this.state.categoryValue\r\n        }\r\n        axios\r\n          .post(\"http://localhost:3000/background/editWithoutFile\", {data: formdata})\r\n          .then(res => {\r\n            if (res.data === \"success\") {\r\n              this.getList();\r\n              this.setState({ \r\n                activeModal: false,\r\n                loading: false\r\n              });\r\n              console.log(res.data);\r\n            } else {\r\n              console.log(res.data);\r\n            }\r\n          });\r\n      } else if(this.state.categoryFlag) {\r\n        console.log('edit Category')\r\n        this.setState({ loading: true });\r\n        let formdata = {\r\n          id: this.state.id,\r\n          category: this.state.categoryValue\r\n        }\r\n        axios\r\n          .post(\"http://localhost:3000/background/editWithoutFile\", {data: formdata})\r\n          .then(res => {\r\n            if (res.data === \"success\") {\r\n              this.getList();\r\n              this.setState({ \r\n                activeModal: false,\r\n                loading: false\r\n              });\r\n              console.log(res.data);\r\n            } else {\r\n              console.log(res.data);\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const categoryTextField = (\r\n      <Autocomplete.TextField\r\n        onChange={this.updateCategoryName}\r\n        label=\"Image Category\"\r\n        value={this.state.categoryValue}\r\n        placeholder=\"Enter category\"\r\n        error={this.state.imageCategoryError}\r\n      />\r\n    );\r\n    const fileUpload =\r\n      this.state.fileURL === \"\" ? (\r\n        !this.state.file && <DropZone.FileUpload />\r\n      ) : (\r\n        <Stack>\r\n          <Thumbnail size=\"large\" alt=\"edit\" source={this.state.fileURL} />\r\n        </Stack>\r\n      );\r\n\r\n    const uploadedFile = this.state.file && (\r\n      <Stack>\r\n        <Thumbnail\r\n          size=\"large\"\r\n          alt={this.state.file.name}\r\n          source={\r\n            this.state.validImageTypes.indexOf(this.state.file.type) > 0\r\n              ? window.URL.createObjectURL(this.state.file)\r\n              : \"https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304\"\r\n          }\r\n        />\r\n      </Stack>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Layout.Section>\r\n            <Card\r\n              title=\"Background Images\"\r\n              actions={[\r\n                {\r\n                  content: \"Add Background Image\",\r\n                  onAction: this.addNewImage\r\n                }\r\n              ]}\r\n            >\r\n              <Card.Section>\r\n                <TextStyle variation=\"subdued\">\r\n                  {this.state.listItemCount} Background Images\r\n                </TextStyle>\r\n              </Card.Section>\r\n              <Card.Section>\r\n                <ResourceList\r\n                  resourceName={{ singular: \"image\", plural: \"images\" }}\r\n                  items={this.state.imageListItems}\r\n                  selectedItems={this.state.selectedListItems}\r\n                  onSelectionChange={this.setSelectedListItems}\r\n                  renderItem={item => {\r\n                    const { id, name, media, category } = item;\r\n                    const shortcutActions = [\r\n                      {\r\n                        content: (\r\n                          <Icon source={EditMajorMonotone} color=\"red\" />\r\n                        ),\r\n                        onAction: () =>\r\n                          this.editImage(id, name, media, category)\r\n                      },\r\n                      {\r\n                        content: (\r\n                          <Icon source={DeleteMajorMonotone} color=\"red\" />\r\n                        ),\r\n                        onAction: () => this.deleteImage(id)\r\n                      }\r\n                    ];\r\n\r\n                    return (\r\n                      <ResourceList.Item\r\n                        id={id}\r\n                        media={media}\r\n                        accessibilityLabel={`View details for ${name}`}\r\n                        shortcutActions={shortcutActions}\r\n                        persistActions\r\n                      >\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Name: </span>\r\n                            {name}\r\n                          </TextStyle>\r\n                        </h3>\r\n                        <h3>\r\n                          <TextStyle variation=\"strong\">\r\n                            <span style={{ fontSize: 12 }}>Category: </span>\r\n                            {category}\r\n                          </TextStyle>\r\n                        </h3>\r\n                      </ResourceList.Item>\r\n                    );\r\n                  }}\r\n                />\r\n              </Card.Section>\r\n            </Card>\r\n          </Layout.Section>\r\n        </Layout>\r\n        <Modal\r\n          open={this.state.activeModal}\r\n          onClose={this.closeModal}\r\n          title=\"Add Image\"\r\n          primaryAction={this.state.modalAction}\r\n          style={{ padding: \"20px\" }}\r\n          loading={this.state.loading}\r\n        >\r\n          <Modal.Section>\r\n            <Stack alignment=\"center\">\r\n              <Stack.Item>\r\n                <div style={{ width: 100, height: 100 }}>\r\n                  <DropZone\r\n                    openFileDialog={this.state.openFileDialog}\r\n                    onDrop={this.handleDropZoneDrop}\r\n                    onFileDialogClose={this.toggleOpenFileDialog}\r\n                  >\r\n                    {fileUpload}\r\n                    {uploadedFile}\r\n                  </DropZone>\r\n                  <InlineError message={this.state.fileError} />\r\n                </div>\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <TextField\r\n                  label=\"Image Name\"\r\n                  value={this.state.imageName}\r\n                  onChange={this.updateImageName}\r\n                  placeholder=\"Enter image name\"\r\n                  error={this.state.imageNameError}\r\n                />\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <Autocomplete\r\n                  options={this.state.categoryOptions}\r\n                  selected={this.state.categorySelectedOptions}\r\n                  onSelect={this.updateCategoryOptions}\r\n                  textField={categoryTextField}\r\n                />\r\n              </Stack.Item>\r\n            </Stack>\r\n          </Modal.Section>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}